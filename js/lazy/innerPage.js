webpackJsonp([6],{

/***/ 1000:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(906);

var ReactCurrentOwner = __webpack_require__(935);
var REACT_ELEMENT_TYPE = __webpack_require__(975);

var getIteratorFn = __webpack_require__(976);
var invariant = __webpack_require__(905);
var KeyEscapeUtils = __webpack_require__(1001);
var warning = __webpack_require__(904);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (true) {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
           true ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (true) {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ?  true ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;

/***/ }),

/***/ 1001:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ }),

/***/ 1002:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactElement = __webpack_require__(900);

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if (true) {
  var ReactElementValidator = __webpack_require__(977);
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;

/***/ }),

/***/ 1003:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(906);

var ReactPropTypeLocationNames = __webpack_require__(1004);
var ReactPropTypesSecret = __webpack_require__(1005);

var invariant = __webpack_require__(905);
var warning = __webpack_require__(904);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && Object({"MIX_IS_BUY_COUPON":"false","MIX_IS_SELL_COUPON":"true","NODE_ENV":"development"}) && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(948);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ?  true ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
       true ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (true) {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = __webpack_require__(948);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

         true ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(335)))

/***/ }),

/***/ 1004:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var ReactPropTypeLocationNames = {};

if (true) {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;

/***/ }),

/***/ 1005:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),

/***/ 1006:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _require = __webpack_require__(900),
    isValidElement = _require.isValidElement;

var factory = __webpack_require__(1007);

module.exports = factory(isValidElement);

/***/ }),

/***/ 1007:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



// React 15.5 references this module, and assumes PropTypes are still callable in production.
// Therefore we re-export development-only version with all the PropTypes checks here.
// However if one is migrating to the `prop-types` npm library, they will go through the
// `index.js` entry point, and it will branch depending on the environment.
var factory = __webpack_require__(341);
module.exports = function(isValidElement) {
  // It is still allowed in 15.5.
  var throwOnDirectAccess = false;
  return factory(isValidElement, throwOnDirectAccess);
};


/***/ }),

/***/ 1008:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



module.exports = '15.7.0';


/***/ }),

/***/ 1009:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _require = __webpack_require__(973),
    Component = _require.Component;

var _require2 = __webpack_require__(900),
    isValidElement = _require2.isValidElement;

var ReactNoopUpdateQueue = __webpack_require__(974);
var factory = __webpack_require__(340);

module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);

/***/ }),

/***/ 1010:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */


var _prodInvariant = __webpack_require__(906);

var ReactElement = __webpack_require__(900);

var invariant = __webpack_require__(905);

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ?  true ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;

/***/ }),

/***/ 1011:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _isPlainObject = __webpack_require__(220);

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _prefix = __webpack_require__(1012);

var _prefix2 = _interopRequireDefault(_prefix);

var _supports = __webpack_require__(1013);

var _supports2 = _interopRequireDefault(_supports);

var _constants = __webpack_require__(1035);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var toKebabCase = function toKebabCase(string) {
  return string.replace(/([A-Z])/g, function ($1) {
    return '-' + $1.toLowerCase();
  });
};

var applyPrefixes = function applyPrefixes(object) {
  if (!(0, _isPlainObject2.default)(object)) {
    return object;
  }

  var value = void 0;

  return Object.keys(object).reduce(function (styleObject, originalKey) {
    var key = originalKey;

    value = object[key];

    if ((0, _isPlainObject2.default)(value)) {
      return _extends({}, styleObject, _defineProperty({}, key, applyPrefixes(value)));
    }

    if (_constants.CSS_PROPERTIES.indexOf(key) !== -1 && !(0, _supports2.default)(toKebabCase(key), value)) {
      key = '' + _prefix2.default.js + key.charAt(0).toUpperCase() + key.slice(1);
    }

    if (originalKey === 'display' && object[originalKey] === 'flex' && !(0, _supports2.default)('display', 'flex')) {
      return _extends({}, styleObject, _defineProperty({}, key, _prefix2.default.js === 'ms' ? '-ms-flexbox' : _prefix2.default.css + 'flex'));
    }

    if (originalKey === 'transition') {
      var animatableValuesObject = _constants.ANIMATABLE_VALUES.reduce(function (animatableValues, animatableValue) {
        var kebabValue = toKebabCase(animatableValue);
        var re = new RegExp(kebabValue, 'g');

        if (re.test(object[originalKey]) && !(0, _supports2.default)(kebabValue)) {
          var cleanValue = object[originalKey].replace(re, '' + _prefix2.default.css + kebabValue);

          return _extends({}, animatableValues, _defineProperty({}, key, cleanValue));
        }

        return animatableValues;
      }, {});

      return _extends({}, styleObject, animatableValuesObject);
    }

    return _extends({}, styleObject, _defineProperty({}, key, value));
  }, {});
};

exports.default = applyPrefixes;

/***/ }),

/***/ 1012:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _browserOrNode = __webpack_require__(949);

var prefixObject = {
  css: '',
  js: ''
};

if (_browserOrNode.isBrowser) {
  var styles = window.getComputedStyle(document.documentElement);
  var prefixString = Array.prototype.slice.call(styles).join('');
  var standardPrefixString = prefixString.match(/-(moz|webkit|ms)-/);
  var operaPrefixString = prefixString.match(styles.OLink === '' && ['', 'o']);
  var prefixMatch = standardPrefixString || operaPrefixString;

  var prefix = prefixMatch ? prefixMatch[1] : '';

  prefixObject = {
    css: '-' + prefix + '-',
    js: prefix
  };

  if (prefixObject.js !== 'ms') {
    prefixObject = _extends({}, prefixObject, {
      js: '' + prefixObject.js.charAt(0).toUpperCase() + prefixObject.js.slice(1)
    });
  }
}

exports.default = prefixObject;

/***/ }),

/***/ 1013:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _browserOrNode = __webpack_require__(949);

var _camelCase = __webpack_require__(1014);

var _camelCase2 = _interopRequireDefault(_camelCase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isSupported = function isSupported(property, value) {
  if (_browserOrNode.isBrowser) {
    if ('CSS' in window && 'supports' in window.CSS) {
      return window.CSS.supports(property, value);
    }

    if ('supportsCSS' in window) {
      return window.supportsCSS(property, value);
    }

    var camelCaseProperty = (0, _camelCase2.default)(property);

    var element = document.createElement('div');
    var support = camelCaseProperty in element.style;

    element.style.cssText = property + ':' + value;

    return support && element.style[camelCaseProperty] !== '';
  }
  return false;
};

exports.default = isSupported;

/***/ }),

/***/ 1014:
/***/ (function(module, exports, __webpack_require__) {

var capitalize = __webpack_require__(1015),
    createCompounder = __webpack_require__(1026);

/**
 * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the camel cased string.
 * @example
 *
 * _.camelCase('Foo Bar');
 * // => 'fooBar'
 *
 * _.camelCase('--foo-bar--');
 * // => 'fooBar'
 *
 * _.camelCase('__FOO_BAR__');
 * // => 'fooBar'
 */
var camelCase = createCompounder(function(result, word, index) {
  word = word.toLowerCase();
  return result + (index ? capitalize(word) : word);
});

module.exports = camelCase;


/***/ }),

/***/ 1015:
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(936),
    upperFirst = __webpack_require__(1019);

/**
 * Converts the first character of `string` to upper case and the remaining
 * to lower case.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('FRED');
 * // => 'Fred'
 */
function capitalize(string) {
  return upperFirst(toString(string).toLowerCase());
}

module.exports = capitalize;


/***/ }),

/***/ 1016:
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(221),
    arrayMap = __webpack_require__(1017),
    isArray = __webpack_require__(1018),
    isSymbol = __webpack_require__(903);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),

/***/ 1017:
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),

/***/ 1018:
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ 1019:
/***/ (function(module, exports, __webpack_require__) {

var createCaseFirst = __webpack_require__(1020);

/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = createCaseFirst('toUpperCase');

module.exports = upperFirst;


/***/ }),

/***/ 1020:
/***/ (function(module, exports, __webpack_require__) {

var castSlice = __webpack_require__(1021),
    hasUnicode = __webpack_require__(978),
    stringToArray = __webpack_require__(1023),
    toString = __webpack_require__(936);

/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function(string) {
    string = toString(string);

    var strSymbols = hasUnicode(string)
      ? stringToArray(string)
      : undefined;

    var chr = strSymbols
      ? strSymbols[0]
      : string.charAt(0);

    var trailing = strSymbols
      ? castSlice(strSymbols, 1).join('')
      : string.slice(1);

    return chr[methodName]() + trailing;
  };
}

module.exports = createCaseFirst;


/***/ }),

/***/ 1021:
/***/ (function(module, exports, __webpack_require__) {

var baseSlice = __webpack_require__(1022);

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : baseSlice(array, start, end);
}

module.exports = castSlice;


/***/ }),

/***/ 1022:
/***/ (function(module, exports) {

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;


/***/ }),

/***/ 1023:
/***/ (function(module, exports, __webpack_require__) {

var asciiToArray = __webpack_require__(1024),
    hasUnicode = __webpack_require__(978),
    unicodeToArray = __webpack_require__(1025);

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return hasUnicode(string)
    ? unicodeToArray(string)
    : asciiToArray(string);
}

module.exports = stringToArray;


/***/ }),

/***/ 1024:
/***/ (function(module, exports) {

/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

module.exports = asciiToArray;


/***/ }),

/***/ 1025:
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

module.exports = unicodeToArray;


/***/ }),

/***/ 1026:
/***/ (function(module, exports, __webpack_require__) {

var arrayReduce = __webpack_require__(1027),
    deburr = __webpack_require__(1028),
    words = __webpack_require__(1031);

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]";

/** Used to match apostrophes. */
var reApos = RegExp(rsApos, 'g');

/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */
function createCompounder(callback) {
  return function(string) {
    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
  };
}

module.exports = createCompounder;


/***/ }),

/***/ 1027:
/***/ (function(module, exports) {

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

module.exports = arrayReduce;


/***/ }),

/***/ 1028:
/***/ (function(module, exports, __webpack_require__) {

var deburrLetter = __webpack_require__(1029),
    toString = __webpack_require__(936);

/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;

/** Used to compose unicode capture groups. */
var rsCombo = '[' + rsComboRange + ']';

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(rsCombo, 'g');

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = toString(string);
  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
}

module.exports = deburr;


/***/ }),

/***/ 1029:
/***/ (function(module, exports, __webpack_require__) {

var basePropertyOf = __webpack_require__(1030);

/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 's'
};

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = basePropertyOf(deburredLetters);

module.exports = deburrLetter;


/***/ }),

/***/ 1030:
/***/ (function(module, exports) {

/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

module.exports = basePropertyOf;


/***/ }),

/***/ 1031:
/***/ (function(module, exports, __webpack_require__) {

var asciiWords = __webpack_require__(1032),
    hasUnicodeWord = __webpack_require__(1033),
    toString = __webpack_require__(936),
    unicodeWords = __webpack_require__(1034);

/**
 * Splits `string` into an array of its words.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {RegExp|string} [pattern] The pattern to match words.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the words of `string`.
 * @example
 *
 * _.words('fred, barney, & pebbles');
 * // => ['fred', 'barney', 'pebbles']
 *
 * _.words('fred, barney, & pebbles', /[^, ]+/g);
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(string, pattern, guard) {
  string = toString(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
  }
  return string.match(pattern) || [];
}

module.exports = words;


/***/ }),

/***/ 1032:
/***/ (function(module, exports) {

/** Used to match words composed of alphanumeric characters. */
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

/**
 * Splits an ASCII `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

module.exports = asciiWords;


/***/ }),

/***/ 1033:
/***/ (function(module, exports) {

/** Used to detect strings that need a more robust regexp to match words. */
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

/**
 * Checks if `string` contains a word composed of Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a word is found, else `false`.
 */
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

module.exports = hasUnicodeWord;


/***/ }),

/***/ 1034:
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]",
    rsBreak = '[' + rsBreakRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
    rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;

/** Used to match complex or compound words. */
var reUnicodeWord = RegExp([
  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
  rsUpper + '+' + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join('|'), 'g');

/**
 * Splits a Unicode `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}

module.exports = unicodeWords;


/***/ }),

/***/ 1035:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var ANIMATABLE_VALUES = exports.ANIMATABLE_VALUES = ['columnCount', 'columnGap', 'columnRule', 'columnRuleColor', 'columnRuleWidth', 'columns', 'flex', 'flexBasis', 'flexGrow', 'flexShrink', 'order', 'perspective', 'perspectiveOrigin', 'perspectiveOriginX', 'perspectiveOriginY', 'scrollSnapCoordinate', 'scrollSnapDirection', 'textDecoration', 'textDecorationColor', 'transform', 'transformOrigin', 'transformOriginX', 'transformOriginY', 'transformOriginZ', 'transformStyle'];

var CSS_PROPERTIES = exports.CSS_PROPERTIES = ['alignContent', 'alignItems', 'alignSelf', 'animation', 'animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction', 'appearance', 'aspectRatio', 'backfaceVisibility', 'backgroundClip', 'borderImage', 'borderImageSlice', 'boxShadow', 'columnCount', 'columnFill', 'columnGap', 'columnRule', 'columnRuleColor', 'columnRuleStyle', 'columnRuleWidth', 'columnSpan', 'columnWidth', 'columns', 'flex', 'flexBasis', 'flexDirection', 'flexFlow', 'flexGrow', 'flexShrink', 'flexWrap', 'fontFeatureSettings', 'fontKearning', 'fontVariantLigatures', 'justifyContent', 'grid', 'gridArea', 'gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridColumn', 'gridColumnEnd', 'gridColumnStart', 'gridRow', 'gridRowEnd', 'gridRowStart', 'gridTemplate', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows', 'hyphens', 'lineBreak', 'perspective', 'perspectiveOrigin', 'perspectiveOriginX', 'perspectiveOriginY', 'rubyPosition', 'scrollSnapCoordinate', 'scrollSnapDestination', 'scrollSnapPoints', 'scrollSnapPointsX', 'scrollSnapPointsY', 'scrollSnapType', 'tabSize', 'textDecoration', 'textDecorationColor', 'textDecorationLine', 'textDecorationStyle', 'textOrientation', 'textSizeAdjust', 'transform', 'transition', 'transformOrigin', 'transformOriginX', 'transformOriginY', 'transformOriginZ', 'transformStyle', 'transitionProperty', 'transitionDuration', 'transitionTimingFunction', 'transitionDelay', 'userModify', 'userSelect'];

/***/ }),

/***/ 1037:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(871);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

/***/ }),

/***/ 1040:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @copyright 2015, Andrey Popp <8mayday@gmail.com>
 *
 * The decorator may be used on classes or methods
 * ```
 * @autobind
 * class FullBound {}
 *
 * class PartBound {
 *   @autobind
 *   method () {}
 * }
 * ```
 */


Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = autobind;

function autobind() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  if (args.length === 1) {
    return boundClass.apply(undefined, args);
  } else {
    return boundMethod.apply(undefined, args);
  }
}

/**
 * Use boundMethod to bind all methods on the target.prototype
 */
function boundClass(target) {
  // (Using reflect to get all keys including symbols)
  var keys = undefined;
  // Use Reflect if exists
  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {
    keys = Reflect.ownKeys(target.prototype);
  } else {
    keys = Object.getOwnPropertyNames(target.prototype);
    // use symbols if support is provided
    if (typeof Object.getOwnPropertySymbols === 'function') {
      keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));
    }
  }

  keys.forEach(function (key) {
    // Ignore special case target method
    if (key === 'constructor') {
      return;
    }

    var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);

    // Only methods need binding
    if (typeof descriptor.value === 'function') {
      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));
    }
  });
  return target;
}

/**
 * Return a descriptor removing the value and returning a getter
 * The getter will return a .bind version of the function
 * and memoize the result against a symbol on the instance
 */
function boundMethod(target, key, descriptor) {
  var fn = descriptor.value;

  if (typeof fn !== 'function') {
    throw new Error('@autobind decorator can only be applied to methods not: ' + typeof fn);
  }

  // In IE11 calling Object.defineProperty has a side-effect of evaluating the
  // getter for the property which is being replaced. This causes infinite
  // recursion and an "Out of stack space" error.
  var definingProperty = false;

  return {
    configurable: true,
    get: function get() {
      if (definingProperty || this === target.prototype || this.hasOwnProperty(key)) {
        return fn;
      }

      var boundFn = fn.bind(this);
      definingProperty = true;
      Object.defineProperty(this, key, {
        value: boundFn,
        configurable: true,
        writable: true
      });
      definingProperty = false;
      return boundFn;
    }
  };
}
module.exports = exports['default'];


/***/ }),

/***/ 1042:
/***/ (function(module, exports) {

exports.__esModule = true;
var ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {
    BODY: "bodyAttributes",
    HTML: "htmlAttributes",
    TITLE: "titleAttributes"
};

var TAG_NAMES = exports.TAG_NAMES = {
    BASE: "base",
    BODY: "body",
    HEAD: "head",
    HTML: "html",
    LINK: "link",
    META: "meta",
    NOSCRIPT: "noscript",
    SCRIPT: "script",
    STYLE: "style",
    TITLE: "title"
};

var VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {
    return TAG_NAMES[name];
});

var TAG_PROPERTIES = exports.TAG_PROPERTIES = {
    CHARSET: "charset",
    CSS_TEXT: "cssText",
    HREF: "href",
    HTTPEQUIV: "http-equiv",
    INNER_HTML: "innerHTML",
    ITEM_PROP: "itemprop",
    NAME: "name",
    PROPERTY: "property",
    REL: "rel",
    SRC: "src"
};

var REACT_TAG_MAP = exports.REACT_TAG_MAP = {
    accesskey: "accessKey",
    charset: "charSet",
    class: "className",
    contenteditable: "contentEditable",
    contextmenu: "contextMenu",
    "http-equiv": "httpEquiv",
    itemprop: "itemProp",
    tabindex: "tabIndex"
};

var HELMET_PROPS = exports.HELMET_PROPS = {
    DEFAULT_TITLE: "defaultTitle",
    DEFER: "defer",
    ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",
    ON_CHANGE_CLIENT_STATE: "onChangeClientState",
    TITLE_TEMPLATE: "titleTemplate"
};

var HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {
    obj[REACT_TAG_MAP[key]] = key;
    return obj;
}, {});

var SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];

var HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = "data-react-helmet";

/***/ }),

/***/ 1057:
/***/ (function(module, exports, __webpack_require__) {

exports.__esModule = true;
exports.Helmet = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactSideEffect = __webpack_require__(1099);

var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);

var _reactFastCompare = __webpack_require__(1101);

var _reactFastCompare2 = _interopRequireDefault(_reactFastCompare);

var _HelmetUtils = __webpack_require__(1102);

var _HelmetConstants = __webpack_require__(1042);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Helmet = function Helmet(Component) {
    var _class, _temp;

    return _temp = _class = function (_React$Component) {
        _inherits(HelmetWrapper, _React$Component);

        function HelmetWrapper() {
            _classCallCheck(this, HelmetWrapper);

            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
        }

        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
            return !(0, _reactFastCompare2.default)(this.props, nextProps);
        };

        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {
            if (!nestedChildren) {
                return null;
            }

            switch (child.type) {
                case _HelmetConstants.TAG_NAMES.SCRIPT:
                case _HelmetConstants.TAG_NAMES.NOSCRIPT:
                    return {
                        innerHTML: nestedChildren
                    };

                case _HelmetConstants.TAG_NAMES.STYLE:
                    return {
                        cssText: nestedChildren
                    };
            }

            throw new Error("<" + child.type + " /> elements are self-closing and can not contain children. Refer to our API for more information.");
        };

        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {
            var _extends2;

            var child = _ref.child,
                arrayTypeChildren = _ref.arrayTypeChildren,
                newChildProps = _ref.newChildProps,
                nestedChildren = _ref.nestedChildren;

            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));
        };

        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {
            var _extends3, _extends4;

            var child = _ref2.child,
                newProps = _ref2.newProps,
                newChildProps = _ref2.newChildProps,
                nestedChildren = _ref2.nestedChildren;

            switch (child.type) {
                case _HelmetConstants.TAG_NAMES.TITLE:
                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));

                case _HelmetConstants.TAG_NAMES.BODY:
                    return _extends({}, newProps, {
                        bodyAttributes: _extends({}, newChildProps)
                    });

                case _HelmetConstants.TAG_NAMES.HTML:
                    return _extends({}, newProps, {
                        htmlAttributes: _extends({}, newChildProps)
                    });
            }

            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));
        };

        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {
            var newFlattenedProps = _extends({}, newProps);

            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {
                var _extends5;

                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));
            });

            return newFlattenedProps;
        };

        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {
            if (true) {
                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {
                    return child.type === name;
                })) {
                    if (typeof child.type === "function") {
                        return (0, _HelmetUtils.warn)("You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.");
                    }

                    return (0, _HelmetUtils.warn)("Only elements types " + _HelmetConstants.VALID_TAG_NAMES.join(", ") + " are allowed. Helmet does not support rendering <" + child.type + "> elements. Refer to our API for more information.");
                }

                if (nestedChildren && typeof nestedChildren !== "string" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {
                    return typeof nestedChild !== "string";
                }))) {
                    throw new Error("Helmet expects a string as a child of <" + child.type + ">. Did you forget to wrap your children in braces? ( <" + child.type + ">{``}</" + child.type + "> ) Refer to our API for more information.");
                }
            }

            return true;
        };

        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {
            var _this2 = this;

            var arrayTypeChildren = {};

            _react2.default.Children.forEach(children, function (child) {
                if (!child || !child.props) {
                    return;
                }

                var _child$props = child.props,
                    nestedChildren = _child$props.children,
                    childProps = _objectWithoutProperties(_child$props, ["children"]);

                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);

                _this2.warnOnInvalidChildren(child, nestedChildren);

                switch (child.type) {
                    case _HelmetConstants.TAG_NAMES.LINK:
                    case _HelmetConstants.TAG_NAMES.META:
                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:
                    case _HelmetConstants.TAG_NAMES.SCRIPT:
                    case _HelmetConstants.TAG_NAMES.STYLE:
                        arrayTypeChildren = _this2.flattenArrayTypeChildren({
                            child: child,
                            arrayTypeChildren: arrayTypeChildren,
                            newChildProps: newChildProps,
                            nestedChildren: nestedChildren
                        });
                        break;

                    default:
                        newProps = _this2.mapObjectTypeChildren({
                            child: child,
                            newProps: newProps,
                            newChildProps: newChildProps,
                            nestedChildren: nestedChildren
                        });
                        break;
                }
            });

            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);
            return newProps;
        };

        HelmetWrapper.prototype.render = function render() {
            var _props = this.props,
                children = _props.children,
                props = _objectWithoutProperties(_props, ["children"]);

            var newProps = _extends({}, props);

            if (children) {
                newProps = this.mapChildrenToProps(children, newProps);
            }

            return _react2.default.createElement(Component, newProps);
        };

        _createClass(HelmetWrapper, null, [{
            key: "canUseDOM",


            // Component.peek comes from react-side-effect:
            // For testing, you may use a static peek() method available on the returned component.
            // It lets you get the current state without resetting the mounted instance stack.
            // Don’t use it for anything other than testing.

            /**
             * @param {Object} base: {"target": "_blank", "href": "http://mysite.com/"}
             * @param {Object} bodyAttributes: {"className": "root"}
             * @param {String} defaultTitle: "Default Title"
             * @param {Boolean} defer: true
             * @param {Boolean} encodeSpecialCharacters: true
             * @param {Object} htmlAttributes: {"lang": "en", "amp": undefined}
             * @param {Array} link: [{"rel": "canonical", "href": "http://mysite.com/example"}]
             * @param {Array} meta: [{"name": "description", "content": "Test description"}]
             * @param {Array} noscript: [{"innerHTML": "<img src='http://mysite.com/js/test.js'"}]
             * @param {Function} onChangeClientState: "(newState) => console.log(newState)"
             * @param {Array} script: [{"type": "text/javascript", "src": "http://mysite.com/js/test.js"}]
             * @param {Array} style: [{"type": "text/css", "cssText": "div { display: block; color: blue; }"}]
             * @param {String} title: "Title"
             * @param {Object} titleAttributes: {"itemprop": "name"}
             * @param {String} titleTemplate: "MySite.com - %s"
             */
            set: function set(canUseDOM) {
                Component.canUseDOM = canUseDOM;
            }
        }]);

        return HelmetWrapper;
    }(_react2.default.Component), _class.propTypes = {
        base: _propTypes2.default.object,
        bodyAttributes: _propTypes2.default.object,
        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
        defaultTitle: _propTypes2.default.string,
        defer: _propTypes2.default.bool,
        encodeSpecialCharacters: _propTypes2.default.bool,
        htmlAttributes: _propTypes2.default.object,
        link: _propTypes2.default.arrayOf(_propTypes2.default.object),
        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),
        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),
        onChangeClientState: _propTypes2.default.func,
        script: _propTypes2.default.arrayOf(_propTypes2.default.object),
        style: _propTypes2.default.arrayOf(_propTypes2.default.object),
        title: _propTypes2.default.string,
        titleAttributes: _propTypes2.default.object,
        titleTemplate: _propTypes2.default.string
    }, _class.defaultProps = {
        defer: true,
        encodeSpecialCharacters: true
    }, _class.peek = Component.peek, _class.rewind = function () {
        var mappedState = Component.rewind();
        if (!mappedState) {
            // provide fallback if mappedState is undefined
            mappedState = (0, _HelmetUtils.mapStateOnServer)({
                baseTag: [],
                bodyAttributes: {},
                encodeSpecialCharacters: true,
                htmlAttributes: {},
                linkTags: [],
                metaTags: [],
                noscriptTags: [],
                scriptTags: [],
                styleTags: [],
                title: "",
                titleAttributes: {}
            });
        }

        return mappedState;
    }, _temp;
};

var NullComponent = function NullComponent() {
    return null;
};

var HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);

var HelmetExport = Helmet(HelmetSideEffects);
HelmetExport.renderStatic = HelmetExport.rewind;

exports.Helmet = HelmetExport;
exports.default = HelmetExport;

/***/ }),

/***/ 1058:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AddToWishlistEffect = function (_Component) {
    (0, _inherits3.default)(AddToWishlistEffect, _Component);

    function AddToWishlistEffect(props) {
        (0, _classCallCheck3.default)(this, AddToWishlistEffect);

        var _this = (0, _possibleConstructorReturn3.default)(this, (AddToWishlistEffect.__proto__ || Object.getPrototypeOf(AddToWishlistEffect)).call(this, props));

        _this.state = {};

        return _this;
    }

    (0, _createClass3.default)(AddToWishlistEffect, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var elem = document.querySelector('.addToWishlistEffect'),
                startPosition = this.props.startPosition,
                endPosition = $('.wish-total-kaufen').offset();


            elem.style.top = startPosition.top + 'px';
            elem.style.left = startPosition.left + 'px';

            setTimeout(function () {
                elem.style.transition = 'all 2s';
                elem.style.top = endPosition.top - 20 + 'px';
                elem.style.left = endPosition.left - 19 + 'px';
                elem.style.transform = 'scale(.3)';
            }, 0);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'addToWishlistEffect' },
                _react2.default.createElement('img', { loading: 'lazy', src: this.props.image, alt: '' })
            );
        }
    }]);
    return AddToWishlistEffect;
}(_react.Component);

AddToWishlistEffect.propTypes = {};
AddToWishlistEffect.defaultProps = {};

exports.default = AddToWishlistEffect;

/***/ }),

/***/ 1062:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MAGNIFY = null;

var LightboxImage = function (_Component) {
    (0, _inherits3.default)(LightboxImage, _Component);

    function LightboxImage(props) {
        (0, _classCallCheck3.default)(this, LightboxImage);

        var _this = (0, _possibleConstructorReturn3.default)(this, (LightboxImage.__proto__ || Object.getPrototypeOf(LightboxImage)).call(this, props));

        _this.state = {
            currentSrc: _this.props.src
        };

        _this.handleKeyPress = _this.handleKeyPress.bind(_this);
        _this.next = _this.next.bind(_this);
        _this.prev = _this.prev.bind(_this);
        _this.clickThumb = _this.clickThumb.bind(_this);
        _this.enableMagnify = _this.enableMagnify.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(LightboxImage, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.enableMagnify();
            document.querySelector('body').addEventListener("keyup", this.handleKeyPress, { passive: true });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.querySelector('body').removeEventListener("keyup", this.handleKeyPress);
            if (MAGNIFY) MAGNIFY.destroy();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.enableMagnify();
        }
    }, {
        key: 'enableMagnify',
        value: function enableMagnify() {
            if (MAGNIFY) MAGNIFY.destroy();
            var currentImg = document.querySelector('.imgPopup'),
                width = currentImg.naturalWidth,
                height = currentImg.naturalHeight;
            if (width <= 900) {
                width = width * 3;
                height = height * 3;
                document.querySelector('.imgPopup').setAttribute('data-magnify-magnifiedwidth', width.toString());
                document.querySelector('.imgPopup').setAttribute('data-magnify-magnifiedheight', height.toString());
            }
            if (this.props.showFirstImage) MAGNIFY = $('.popup .popupContainer .mainImg .imgPopup').magnify();else if (currentImg.getAttribute('src') !== this.props.array[0].src) MAGNIFY = $('.popup .popupContainer .mainImg .imgPopup').magnify();
        }
    }, {
        key: 'handleKeyPress',
        value: function handleKeyPress(e) {
            if (e.key === "Escape") {
                this.props.close();
                e.stopPropagation();
            } else if (e.key === 'ArrowRight') {
                this.next();
                e.stopPropagation();
            } else if (e.key === 'ArrowLeft') {
                this.prev();
                e.stopPropagation();
            }
        }
    }, {
        key: 'next',
        value: function next() {
            var currentSrc = this.state.currentSrc,
                indexSrc = null;

            this.props.array.forEach(function (item, i) {
                if (item.src === currentSrc) indexSrc = i;
            });
            if (indexSrc == this.props.array.length - 1) this.setState({ currentSrc: this.props.array[0].src });else this.setState({ currentSrc: this.props.array[indexSrc + 1].src });
        }
    }, {
        key: 'prev',
        value: function prev() {
            var currentSrc = this.state.currentSrc;
            var indexSrc = null;
            this.props.array.forEach(function (item, i) {
                if (item.src === currentSrc) indexSrc = i;
            });
            if (indexSrc == 0) this.setState({ currentSrc: this.props.array[this.props.array.length - 1].src });else this.setState({ currentSrc: this.props.array[indexSrc - 1].src });
        }
    }, {
        key: 'clickThumb',
        value: function clickThumb(e) {
            var currentSrc = $(e.currentTarget).find('img').attr('src');
            this.setState({ currentSrc: currentSrc });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var currentSrc = this.state.currentSrc,
                showTextRealImage = this.props.showRealImageText && currentSrc !== this.props.array[0].src ? true : undefined;

            return _react2.default.createElement(
                'div',
                { className: 'popup' },
                _react2.default.createElement(
                    'div',
                    { className: 'popupContainer' },
                    _react2.default.createElement(
                        'span',
                        { className: 'closeLightbox', onClick: this.props.close },
                        _react2.default.createElement('i', { className: 'fa fa-times', 'aria-hidden': 'true' })
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'next', onClick: this.next },
                        _react2.default.createElement('i', { className: 'fa fa-angle-right', 'aria-hidden': 'true' })
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'prev', onClick: this.prev },
                        _react2.default.createElement('i', { className: 'fa fa-angle-left', 'aria-hidden': 'true' })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'mainImg' },
                        _react2.default.createElement('img', { loading: 'lazy', className: 'imgPopup',
                            'data-magnify-src': currentSrc,
                            src: currentSrc, onClick: this.next, alt: '' })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'smallPic text-right' },
                        _react2.default.createElement('div', { className: 'real-image' }),
                        _react2.default.createElement(
                            'div',
                            null,
                            this.props.array.map(function (item, i) {
                                var className = item.src == currentSrc ? "itemSmallPic current" : "itemSmallPic";
                                return _react2.default.createElement(
                                    'div',
                                    { className: className,
                                        onClick: _this2.clickThumb,
                                        key: i },
                                    _react2.default.createElement('img', { loading: 'lazy', src: item.src, alt: '' })
                                );
                            })
                        )
                    )
                )
            );
        }
    }]);
    return LightboxImage;
}(_react.Component);

exports.default = LightboxImage;


LightboxImage.propTypes = {
    showFirstImage: _propTypes2.default.bool
};
LightboxImage.defaultProps = {
    showFirstImage: true,
    showRealImageText: false
};

/***/ }),

/***/ 1069:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModalThankYou = function ModalThankYou() {
    return _react2.default.createElement(
        "div",
        { className: "thankYou" },
        _react2.default.createElement(
            "div",
            { className: "wrap" },
            _react2.default.createElement("img", { loading: "lazy", src: "/images/design/heart.png", alt: "" }),
            _react2.default.createElement(
                "p",
                null,
                "Vielen Dank f\xFCr Ihr wertvolles Feedback!"
            )
        )
    );
};

ModalThankYou.propTypes = {};
ModalThankYou.defaultProps = {};

exports.default = ModalThankYou;

/***/ }),

/***/ 1070:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Label;

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @ignore
 * @param {Object} props
 * @param {InputRangeClassNames} props.classNames
 * @param {Function} props.formatLabel
 * @param {string} props.type
 */
function Label(props) {
  var labelValue = props.formatLabel ? props.formatLabel(props.children, props.type) : props.children;

  return _react2.default.createElement(
    'span',
    { className: props.classNames[props.type + 'Label'] },
    _react2.default.createElement(
      'span',
      { className: props.classNames.labelContainer },
      labelValue
    )
  );
}

/**
 * @type {Object}
 * @property {Function} children
 * @property {Function} classNames
 * @property {Function} formatLabel
 * @property {Function} type
 */
Label.propTypes = {
  children: _propTypes2.default.node.isRequired,
  classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,
  formatLabel: _propTypes2.default.func,
  type: _propTypes2.default.string.isRequired
};
module.exports = exports['default'];
//# sourceMappingURL=label.js.map

/***/ }),

/***/ 1079:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.seoReadMoreClick = seoReadMoreClick;
exports.seoTextAdjustHeight = seoTextAdjustHeight;
var expanded = false;

function seoReadMoreClick(event) {
  event.preventDefault();
  expand();
  window.addEventListener("resize", debounce(expand));
}

function seoTextAdjustHeight() {
  if (expanded) {
    $(".seo-wrap").css({ "max-height": 9999 });
  }
}

function expand() {
  expanded = true;
  seoTextAdjustHeight();
  var wrap = $(".seo-wrap");
  wrap.find(".read-more").fadeOut();
  wrap.addClass("expanded");
  window.scrollTo(0, document.body.scrollHeight);
}

function debounce(func) {
  var timer = void 0;
  return function (event) {
    if (timer) clearTimeout(timer);
    timer = setTimeout(func, 100, event);
  };
}

/***/ }),

/***/ 1081:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * EvEmitter v1.1.0
 * Lil' event emitter
 * MIT License
 */

/* jshint unused: true, undef: true, strict: true */

( function( global, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, window */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory();
  } else {
    // Browser globals
    global.EvEmitter = factory();
  }

}( typeof window != 'undefined' ? window : this, function() {

"use strict";

function EvEmitter() {}

var proto = EvEmitter.prototype;

proto.on = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // set events hash
  var events = this._events = this._events || {};
  // set listeners array
  var listeners = events[ eventName ] = events[ eventName ] || [];
  // only add once
  if ( listeners.indexOf( listener ) == -1 ) {
    listeners.push( listener );
  }

  return this;
};

proto.once = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // add event
  this.on( eventName, listener );
  // set once flag
  // set onceEvents hash
  var onceEvents = this._onceEvents = this._onceEvents || {};
  // set onceListeners object
  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};
  // set flag
  onceListeners[ listener ] = true;

  return this;
};

proto.off = function( eventName, listener ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  var index = listeners.indexOf( listener );
  if ( index != -1 ) {
    listeners.splice( index, 1 );
  }

  return this;
};

proto.emitEvent = function( eventName, args ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  // copy over to avoid interference if .off() in listener
  listeners = listeners.slice(0);
  args = args || [];
  // once stuff
  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];

  for ( var i=0; i < listeners.length; i++ ) {
    var listener = listeners[i]
    var isOnce = onceListeners && onceListeners[ listener ];
    if ( isOnce ) {
      // remove listener
      // remove before trigger to prevent recursion
      this.off( eventName, listener );
      // unset once flag
      delete onceListeners[ listener ];
    }
    // trigger listener
    listener.apply( this, args );
  }

  return this;
};

proto.allOff = function() {
  delete this._events;
  delete this._onceEvents;
};

return EvEmitter;

}));


/***/ }),

/***/ 1082:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * getSize v2.0.3
 * measure size of elements
 * MIT license
 */

/* jshint browser: true, strict: true, undef: true, unused: true */
/* globals console: false */

( function( window, factory ) {
  /* jshint strict: false */ /* globals define, module */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.getSize = factory();
  }

})( window, function factory() {
'use strict';

// -------------------------- helpers -------------------------- //

// get a number from a string, not a percentage
function getStyleSize( value ) {
  var num = parseFloat( value );
  // not a percent like '100%', and a number
  var isValid = value.indexOf('%') == -1 && !isNaN( num );
  return isValid && num;
}

function noop() {}

var logError = typeof console == 'undefined' ? noop :
  function( message ) {
    console.error( message );
  };

// -------------------------- measurements -------------------------- //

var measurements = [
  'paddingLeft',
  'paddingRight',
  'paddingTop',
  'paddingBottom',
  'marginLeft',
  'marginRight',
  'marginTop',
  'marginBottom',
  'borderLeftWidth',
  'borderRightWidth',
  'borderTopWidth',
  'borderBottomWidth'
];

var measurementsLength = measurements.length;

function getZeroSize() {
  var size = {
    width: 0,
    height: 0,
    innerWidth: 0,
    innerHeight: 0,
    outerWidth: 0,
    outerHeight: 0
  };
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    size[ measurement ] = 0;
  }
  return size;
}

// -------------------------- getStyle -------------------------- //

/**
 * getStyle, get style of element, check for Firefox bug
 * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
 */
function getStyle( elem ) {
  var style = getComputedStyle( elem );
  if ( !style ) {
    logError( 'Style returned ' + style +
      '. Are you running this code in a hidden iframe on Firefox? ' +
      'See https://bit.ly/getsizebug1' );
  }
  return style;
}

// -------------------------- setup -------------------------- //

var isSetup = false;

var isBoxSizeOuter;

/**
 * setup
 * check isBoxSizerOuter
 * do on first getSize() rather than on page load for Firefox bug
 */
function setup() {
  // setup once
  if ( isSetup ) {
    return;
  }
  isSetup = true;

  // -------------------------- box sizing -------------------------- //

  /**
   * Chrome & Safari measure the outer-width on style.width on border-box elems
   * IE11 & Firefox<29 measures the inner-width
   */
  var div = document.createElement('div');
  div.style.width = '200px';
  div.style.padding = '1px 2px 3px 4px';
  div.style.borderStyle = 'solid';
  div.style.borderWidth = '1px 2px 3px 4px';
  div.style.boxSizing = 'border-box';

  var body = document.body || document.documentElement;
  body.appendChild( div );
  var style = getStyle( div );
  // round value for browser zoom. desandro/masonry#928
  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;
  getSize.isBoxSizeOuter = isBoxSizeOuter;

  body.removeChild( div );
}

// -------------------------- getSize -------------------------- //

function getSize( elem ) {
  setup();

  // use querySeletor if elem is string
  if ( typeof elem == 'string' ) {
    elem = document.querySelector( elem );
  }

  // do not proceed on non-objects
  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {
    return;
  }

  var style = getStyle( elem );

  // if hidden, everything is 0
  if ( style.display == 'none' ) {
    return getZeroSize();
  }

  var size = {};
  size.width = elem.offsetWidth;
  size.height = elem.offsetHeight;

  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';

  // get all measurements
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    var value = style[ measurement ];
    var num = parseFloat( value );
    // any 'auto', 'medium' value will be 0
    size[ measurement ] = !isNaN( num ) ? num : 0;
  }

  var paddingWidth = size.paddingLeft + size.paddingRight;
  var paddingHeight = size.paddingTop + size.paddingBottom;
  var marginWidth = size.marginLeft + size.marginRight;
  var marginHeight = size.marginTop + size.marginBottom;
  var borderWidth = size.borderLeftWidth + size.borderRightWidth;
  var borderHeight = size.borderTopWidth + size.borderBottomWidth;

  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;

  // overwrite width and height if we can get it from style
  var styleWidth = getStyleSize( style.width );
  if ( styleWidth !== false ) {
    size.width = styleWidth +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );
  }

  var styleHeight = getStyleSize( style.height );
  if ( styleHeight !== false ) {
    size.height = styleHeight +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );
  }

  size.innerWidth = size.width - ( paddingWidth + borderWidth );
  size.innerHeight = size.height - ( paddingHeight + borderHeight );

  size.outerWidth = size.width + marginWidth;
  size.outerHeight = size.height + marginHeight;

  return size;
}

return getSize;

});


/***/ }),

/***/ 1099:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = __webpack_require__(16);
var React__default = _interopDefault(React);
var shallowEqual = _interopDefault(__webpack_require__(1100));

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {
  if (typeof reducePropsToState !== 'function') {
    throw new Error('Expected reducePropsToState to be a function.');
  }

  if (typeof handleStateChangeOnClient !== 'function') {
    throw new Error('Expected handleStateChangeOnClient to be a function.');
  }

  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {
    throw new Error('Expected mapStateOnServer to either be undefined or a function.');
  }

  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
  }

  return function wrap(WrappedComponent) {
    if (typeof WrappedComponent !== 'function') {
      throw new Error('Expected WrappedComponent to be a React component.');
    }

    var mountedInstances = [];
    var state;

    function emitChange() {
      state = reducePropsToState(mountedInstances.map(function (instance) {
        return instance.props;
      }));

      if (SideEffect.canUseDOM) {
        handleStateChangeOnClient(state);
      } else if (mapStateOnServer) {
        state = mapStateOnServer(state);
      }
    }

    var SideEffect =
    /*#__PURE__*/
    function (_Component) {
      _inheritsLoose(SideEffect, _Component);

      function SideEffect() {
        return _Component.apply(this, arguments) || this;
      }

      // Try to use displayName of wrapped component
      // Expose canUseDOM so tests can monkeypatch it
      SideEffect.peek = function peek() {
        return state;
      };

      SideEffect.rewind = function rewind() {
        if (SideEffect.canUseDOM) {
          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');
        }

        var recordedState = state;
        state = undefined;
        mountedInstances = [];
        return recordedState;
      };

      var _proto = SideEffect.prototype;

      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
        return !shallowEqual(nextProps, this.props);
      };

      _proto.componentWillMount = function componentWillMount() {
        mountedInstances.push(this);
        emitChange();
      };

      _proto.componentDidUpdate = function componentDidUpdate() {
        emitChange();
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        var index = mountedInstances.indexOf(this);
        mountedInstances.splice(index, 1);
        emitChange();
      };

      _proto.render = function render() {
        return React__default.createElement(WrappedComponent, this.props);
      };

      return SideEffect;
    }(React.Component);

    _defineProperty(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");

    _defineProperty(SideEffect, "canUseDOM", canUseDOM);

    return SideEffect;
  };
}

module.exports = withSideEffect;


/***/ }),

/***/ 1100:
/***/ (function(module, exports) {

//

module.exports = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

  if (ret !== void 0) {
    return !!ret;
  }

  if (objA === objB) {
    return true;
  }

  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

  // Test for A's keys different from B.
  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];

    if (!bHasOwnProperty(key)) {
      return false;
    }

    var valueA = objA[key];
    var valueB = objB[key];

    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

    if (ret === false || (ret === void 0 && valueA !== valueB)) {
      return false;
    }
  }

  return true;
};


/***/ }),

/***/ 1101:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isArray = Array.isArray;
var keyList = Object.keys;
var hasProp = Object.prototype.hasOwnProperty;
var hasElementType = typeof Element !== 'undefined';

function equal(a, b) {
  // fast-deep-equal index.js 2.0.1
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    var arrA = isArray(a)
      , arrB = isArray(b)
      , i
      , length
      , key;

    if (arrA && arrB) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }

    if (arrA != arrB) return false;

    var dateA = a instanceof Date
      , dateB = b instanceof Date;
    if (dateA != dateB) return false;
    if (dateA && dateB) return a.getTime() == b.getTime();

    var regexpA = a instanceof RegExp
      , regexpB = b instanceof RegExp;
    if (regexpA != regexpB) return false;
    if (regexpA && regexpB) return a.toString() == b.toString();

    var keys = keyList(a);
    length = keys.length;

    if (length !== keyList(b).length)
      return false;

    for (i = length; i-- !== 0;)
      if (!hasProp.call(b, keys[i])) return false;
    // end fast-deep-equal

    // start react-fast-compare
    // custom handling for DOM elements
    if (hasElementType && a instanceof Element && b instanceof Element)
      return a === b;

    // custom handling for React
    for (i = length; i-- !== 0;) {
      key = keys[i];
      if (key === '_owner' && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner.
        //  _owner contains circular references
        // and is not needed when comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of a react element
        continue;
      } else {
        // all other properties should be traversed as usual
        if (!equal(a[key], b[key])) return false;
      }
    }
    // end react-fast-compare

    // fast-deep-equal index.js 2.0.1
    return true;
  }

  return a !== a && b !== b;
}
// end fast-deep-equal

module.exports = function exportedEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);
      return false;
    }
    // some other error. we should definitely know about these
    throw error;
  }
};


/***/ }),

/***/ 1102:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {exports.__esModule = true;
exports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _objectAssign = __webpack_require__(86);

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _HelmetConstants = __webpack_require__(1042);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var encodeSpecialCharacters = function encodeSpecialCharacters(str) {
    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    if (encode === false) {
        return String(str);
    }

    return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
};

var getTitleFromPropsList = function getTitleFromPropsList(propsList) {
    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);
    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);

    if (innermostTemplate && innermostTitle) {
        // use function arg to avoid need to escape $ characters
        return innermostTemplate.replace(/%s/g, function () {
            return innermostTitle;
        });
    }

    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);

    return innermostTitle || innermostDefaultTitle || undefined;
};

var getOnChangeClientState = function getOnChangeClientState(propsList) {
    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};
};

var getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {
    return propsList.filter(function (props) {
        return typeof props[tagType] !== "undefined";
    }).map(function (props) {
        return props[tagType];
    }).reduce(function (tagAttrs, current) {
        return _extends({}, tagAttrs, current);
    }, {});
};

var getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {
    return propsList.filter(function (props) {
        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== "undefined";
    }).map(function (props) {
        return props[_HelmetConstants.TAG_NAMES.BASE];
    }).reverse().reduce(function (innermostBaseTag, tag) {
        if (!innermostBaseTag.length) {
            var keys = Object.keys(tag);

            for (var i = 0; i < keys.length; i++) {
                var attributeKey = keys[i];
                var lowerCaseAttributeKey = attributeKey.toLowerCase();

                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {
                    return innermostBaseTag.concat(tag);
                }
            }
        }

        return innermostBaseTag;
    }, []);
};

var getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {
    // Calculate list of tags, giving priority innermost component (end of the propslist)
    var approvedSeenTags = {};

    return propsList.filter(function (props) {
        if (Array.isArray(props[tagName])) {
            return true;
        }
        if (typeof props[tagName] !== "undefined") {
            warn("Helmet: " + tagName + " should be of type \"Array\". Instead found type \"" + _typeof(props[tagName]) + "\"");
        }
        return false;
    }).map(function (props) {
        return props[tagName];
    }).reverse().reduce(function (approvedTags, instanceTags) {
        var instanceSeenTags = {};

        instanceTags.filter(function (tag) {
            var primaryAttributeKey = void 0;
            var keys = Object.keys(tag);
            for (var i = 0; i < keys.length; i++) {
                var attributeKey = keys[i];
                var lowerCaseAttributeKey = attributeKey.toLowerCase();

                // Special rule with link tags, since rel and href are both primary tags, rel takes priority
                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === "canonical") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === "stylesheet")) {
                    primaryAttributeKey = lowerCaseAttributeKey;
                }
                // Special case for innerHTML which doesn't work lowercased
                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {
                    primaryAttributeKey = attributeKey;
                }
            }

            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {
                return false;
            }

            var value = tag[primaryAttributeKey].toLowerCase();

            if (!approvedSeenTags[primaryAttributeKey]) {
                approvedSeenTags[primaryAttributeKey] = {};
            }

            if (!instanceSeenTags[primaryAttributeKey]) {
                instanceSeenTags[primaryAttributeKey] = {};
            }

            if (!approvedSeenTags[primaryAttributeKey][value]) {
                instanceSeenTags[primaryAttributeKey][value] = true;
                return true;
            }

            return false;
        }).reverse().forEach(function (tag) {
            return approvedTags.push(tag);
        });

        // Update seen tags with tags from this instance
        var keys = Object.keys(instanceSeenTags);
        for (var i = 0; i < keys.length; i++) {
            var attributeKey = keys[i];
            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);

            approvedSeenTags[attributeKey] = tagUnion;
        }

        return approvedTags;
    }, []).reverse();
};

var getInnermostProperty = function getInnermostProperty(propsList, property) {
    for (var i = propsList.length - 1; i >= 0; i--) {
        var props = propsList[i];

        if (props.hasOwnProperty(property)) {
            return props[property];
        }
    }

    return null;
};

var reducePropsToState = function reducePropsToState(propsList) {
    return {
        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),
        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),
        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),
        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),
        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),
        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),
        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),
        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
        onChangeClientState: getOnChangeClientState(propsList),
        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),
        title: getTitleFromPropsList(propsList),
        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)
    };
};

var rafPolyfill = function () {
    var clock = Date.now();

    return function (callback) {
        var currentTime = Date.now();

        if (currentTime - clock > 16) {
            clock = currentTime;
            callback(currentTime);
        } else {
            setTimeout(function () {
                rafPolyfill(callback);
            }, 0);
        }
    };
}();

var cafPolyfill = function cafPolyfill(id) {
    return clearTimeout(id);
};

var requestAnimationFrame = typeof window !== "undefined" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;

var cancelAnimationFrame = typeof window !== "undefined" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;

var warn = function warn(msg) {
    return console && typeof console.warn === "function" && console.warn(msg);
};

var _helmetCallback = null;

var handleClientStateChange = function handleClientStateChange(newState) {
    if (_helmetCallback) {
        cancelAnimationFrame(_helmetCallback);
    }

    if (newState.defer) {
        _helmetCallback = requestAnimationFrame(function () {
            commitTagChanges(newState, function () {
                _helmetCallback = null;
            });
        });
    } else {
        commitTagChanges(newState);
        _helmetCallback = null;
    }
};

var commitTagChanges = function commitTagChanges(newState, cb) {
    var baseTag = newState.baseTag,
        bodyAttributes = newState.bodyAttributes,
        htmlAttributes = newState.htmlAttributes,
        linkTags = newState.linkTags,
        metaTags = newState.metaTags,
        noscriptTags = newState.noscriptTags,
        onChangeClientState = newState.onChangeClientState,
        scriptTags = newState.scriptTags,
        styleTags = newState.styleTags,
        title = newState.title,
        titleAttributes = newState.titleAttributes;

    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);
    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);

    updateTitle(title, titleAttributes);

    var tagUpdates = {
        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),
        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),
        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),
        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),
        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),
        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)
    };

    var addedTags = {};
    var removedTags = {};

    Object.keys(tagUpdates).forEach(function (tagType) {
        var _tagUpdates$tagType = tagUpdates[tagType],
            newTags = _tagUpdates$tagType.newTags,
            oldTags = _tagUpdates$tagType.oldTags;


        if (newTags.length) {
            addedTags[tagType] = newTags;
        }
        if (oldTags.length) {
            removedTags[tagType] = tagUpdates[tagType].oldTags;
        }
    });

    cb && cb();

    onChangeClientState(newState, addedTags, removedTags);
};

var flattenArray = function flattenArray(possibleArray) {
    return Array.isArray(possibleArray) ? possibleArray.join("") : possibleArray;
};

var updateTitle = function updateTitle(title, attributes) {
    if (typeof title !== "undefined" && document.title !== title) {
        document.title = flattenArray(title);
    }

    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);
};

var updateAttributes = function updateAttributes(tagName, attributes) {
    var elementTag = document.getElementsByTagName(tagName)[0];

    if (!elementTag) {
        return;
    }

    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);
    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(",") : [];
    var attributesToRemove = [].concat(helmetAttributes);
    var attributeKeys = Object.keys(attributes);

    for (var i = 0; i < attributeKeys.length; i++) {
        var attribute = attributeKeys[i];
        var value = attributes[attribute] || "";

        if (elementTag.getAttribute(attribute) !== value) {
            elementTag.setAttribute(attribute, value);
        }

        if (helmetAttributes.indexOf(attribute) === -1) {
            helmetAttributes.push(attribute);
        }

        var indexToSave = attributesToRemove.indexOf(attribute);
        if (indexToSave !== -1) {
            attributesToRemove.splice(indexToSave, 1);
        }
    }

    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {
        elementTag.removeAttribute(attributesToRemove[_i]);
    }

    if (helmetAttributes.length === attributesToRemove.length) {
        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);
    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(",")) {
        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(","));
    }
};

var updateTags = function updateTags(type, tags) {
    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);
    var tagNodes = headElement.querySelectorAll(type + "[" + _HelmetConstants.HELMET_ATTRIBUTE + "]");
    var oldTags = Array.prototype.slice.call(tagNodes);
    var newTags = [];
    var indexToDelete = void 0;

    if (tags && tags.length) {
        tags.forEach(function (tag) {
            var newElement = document.createElement(type);

            for (var attribute in tag) {
                if (tag.hasOwnProperty(attribute)) {
                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {
                        newElement.innerHTML = tag.innerHTML;
                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {
                        if (newElement.styleSheet) {
                            newElement.styleSheet.cssText = tag.cssText;
                        } else {
                            newElement.appendChild(document.createTextNode(tag.cssText));
                        }
                    } else {
                        var value = typeof tag[attribute] === "undefined" ? "" : tag[attribute];
                        newElement.setAttribute(attribute, value);
                    }
                }
            }

            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, "true");

            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.
            if (oldTags.some(function (existingTag, index) {
                indexToDelete = index;
                return newElement.isEqualNode(existingTag);
            })) {
                oldTags.splice(indexToDelete, 1);
            } else {
                newTags.push(newElement);
            }
        });
    }

    oldTags.forEach(function (tag) {
        return tag.parentNode.removeChild(tag);
    });
    newTags.forEach(function (tag) {
        return headElement.appendChild(tag);
    });

    return {
        oldTags: oldTags,
        newTags: newTags
    };
};

var generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {
    return Object.keys(attributes).reduce(function (str, key) {
        var attr = typeof attributes[key] !== "undefined" ? key + "=\"" + attributes[key] + "\"" : "" + key;
        return str ? str + " " + attr : attr;
    }, "");
};

var generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {
    var attributeString = generateElementAttributesAsString(attributes);
    var flattenedTitle = flattenArray(title);
    return attributeString ? "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\" " + attributeString + ">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">" : "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">";
};

var generateTagsAsString = function generateTagsAsString(type, tags, encode) {
    return tags.reduce(function (str, tag) {
        var attributeHtml = Object.keys(tag).filter(function (attribute) {
            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);
        }).reduce(function (string, attribute) {
            var attr = typeof tag[attribute] === "undefined" ? attribute : attribute + "=\"" + encodeSpecialCharacters(tag[attribute], encode) + "\"";
            return string ? string + " " + attr : attr;
        }, "");

        var tagContent = tag.innerHTML || tag.cssText || "";

        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;

        return str + "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\" " + attributeHtml + (isSelfClosing ? "/>" : ">" + tagContent + "</" + type + ">");
    }, "");
};

var convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {
    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return Object.keys(attributes).reduce(function (obj, key) {
        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];
        return obj;
    }, initProps);
};

var convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {
    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return Object.keys(props).reduce(function (obj, key) {
        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];
        return obj;
    }, initAttributes);
};

var generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {
    var _initProps;

    // assigning into an array to define toString function on it
    var initProps = (_initProps = {
        key: title
    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);
    var props = convertElementAttributestoReactProps(attributes, initProps);

    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];
};

var generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {
    return tags.map(function (tag, i) {
        var _mappedTag;

        var mappedTag = (_mappedTag = {
            key: i
        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);

        Object.keys(tag).forEach(function (attribute) {
            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;

            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {
                var content = tag.innerHTML || tag.cssText;
                mappedTag.dangerouslySetInnerHTML = { __html: content };
            } else {
                mappedTag[mappedAttribute] = tag[attribute];
            }
        });

        return _react2.default.createElement(type, mappedTag);
    });
};

var getMethodsForTag = function getMethodsForTag(type, tags, encode) {
    switch (type) {
        case _HelmetConstants.TAG_NAMES.TITLE:
            return {
                toComponent: function toComponent() {
                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);
                },
                toString: function toString() {
                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);
                }
            };
        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:
        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:
            return {
                toComponent: function toComponent() {
                    return convertElementAttributestoReactProps(tags);
                },
                toString: function toString() {
                    return generateElementAttributesAsString(tags);
                }
            };
        default:
            return {
                toComponent: function toComponent() {
                    return generateTagsAsReactComponent(type, tags);
                },
                toString: function toString() {
                    return generateTagsAsString(type, tags, encode);
                }
            };
    }
};

var mapStateOnServer = function mapStateOnServer(_ref) {
    var baseTag = _ref.baseTag,
        bodyAttributes = _ref.bodyAttributes,
        encode = _ref.encode,
        htmlAttributes = _ref.htmlAttributes,
        linkTags = _ref.linkTags,
        metaTags = _ref.metaTags,
        noscriptTags = _ref.noscriptTags,
        scriptTags = _ref.scriptTags,
        styleTags = _ref.styleTags,
        _ref$title = _ref.title,
        title = _ref$title === undefined ? "" : _ref$title,
        titleAttributes = _ref.titleAttributes;
    return {
        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),
        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),
        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),
        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),
        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),
        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),
        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),
        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),
        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)
    };
};

exports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;
exports.handleClientStateChange = handleClientStateChange;
exports.mapStateOnServer = mapStateOnServer;
exports.reducePropsToState = reducePropsToState;
exports.requestAnimationFrame = requestAnimationFrame;
exports.warn = warn;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(153)))

/***/ }),

/***/ 1104:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1105);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(768)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!./Slick-theme.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!./Slick-theme.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1105:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(767)(false);
// imports


// module
exports.push([module.i, "/* Arrows */\r\n.slick-prev,\r\n.slick-next\r\n{\r\n    font-size: 0;\r\n    line-height: 0;\r\n\r\n    position: absolute;\r\n    top: 50%;\r\n\r\n    display: block;\r\n\r\n    width: 20px;\r\n    height: 20px;\r\n    padding: 0;\r\n    -webkit-transform: translate(0, -50%);\r\n    -ms-transform: translate(0, -50%);\r\n    transform: translate(0, -50%);\r\n\r\n    cursor: pointer;\r\n\r\n    color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    background: transparent;\r\n}\r\n.slick-prev:hover,\r\n.slick-prev:focus,\r\n.slick-next:hover,\r\n.slick-next:focus\r\n{\r\n    color: transparent;\r\n    outline: none;\r\n    background: transparent;\r\n}\r\n.slick-prev:hover:before,\r\n.slick-prev:focus:before,\r\n.slick-next:hover:before,\r\n.slick-next:focus:before\r\n{\r\n    opacity: 1;\r\n}\r\n.slick-prev.slick-disabled:before,\r\n.slick-next.slick-disabled:before\r\n{\r\n    opacity: .25;\r\n}\r\n\r\n.slick-prev:before,\r\n.slick-next:before\r\n{\r\n    font-family: 'slick';\r\n    font-size: 20px;\r\n    line-height: 1;\r\n\r\n    opacity: .75;\r\n    color: white;\r\n\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.slick-prev\r\n{\r\n    left: -25px;\r\n}\r\n[dir='rtl'] .slick-prev\r\n{\r\n    right: -25px;\r\n    left: auto;\r\n}\r\n.slick-prev:before\r\n{\r\n    content: '\\2190';\r\n}\r\n[dir='rtl'] .slick-prev:before\r\n{\r\n    content: '\\2192';\r\n}\r\n\r\n.slick-next\r\n{\r\n    right: -25px;\r\n}\r\n[dir='rtl'] .slick-next\r\n{\r\n    right: auto;\r\n    left: -25px;\r\n}\r\n.slick-next:before\r\n{\r\n    content: '\\2192';\r\n}\r\n[dir='rtl'] .slick-next:before\r\n{\r\n    content: '\\2190';\r\n}\r\n\r\n/* Dots */\r\n.slick-dotted.slick-slider\r\n{\r\n    margin-bottom: 30px;\r\n}\r\n\r\n.slick-dots\r\n{\r\n    position: absolute;\r\n    bottom: -25px;\r\n\r\n    display: block;\r\n\r\n    width: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    list-style: none;\r\n\r\n    text-align: center;\r\n}\r\n.slick-dots li\r\n{\r\n    position: relative;\r\n\r\n    display: inline-block;\r\n\r\n    width: 20px;\r\n    height: 20px;\r\n    margin: 0 5px;\r\n    padding: 0;\r\n\r\n    cursor: pointer;\r\n}\r\n.slick-dots li button\r\n{\r\n    font-size: 0;\r\n    line-height: 0;\r\n\r\n    display: block;\r\n\r\n    width: 20px;\r\n    height: 20px;\r\n    padding: 5px;\r\n\r\n    cursor: pointer;\r\n\r\n    color: transparent;\r\n    border: 0;\r\n    outline: none;\r\n    background: transparent;\r\n}\r\n.slick-dots li button:hover,\r\n.slick-dots li button:focus\r\n{\r\n    outline: none;\r\n}\r\n.slick-dots li button:hover:before,\r\n.slick-dots li button:focus:before\r\n{\r\n    opacity: 1;\r\n}\r\n.slick-dots li button:before\r\n{\r\n    font-family: 'slick';\r\n    font-size: 6px;\r\n    line-height: 20px;\r\n\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    content: '\\2022';\r\n    text-align: center;\r\n\r\n    opacity: .25;\r\n    color: black;\r\n\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n.slick-dots li.slick-active button:before\r\n{\r\n    opacity: .75;\r\n    color: black;\r\n}\r\n", ""]);

// exports


/***/ }),

/***/ 1106:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1107);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(768)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!./Slick.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!./Slick.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1107:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(767)(false);
// imports


// module
exports.push([module.i, "/* Slider */\r\n.slick-slider\r\n{\r\n    position: relative;\r\n\r\n    display: block;\r\n    box-sizing: border-box;\r\n\r\n    -webkit-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n\r\n    -webkit-touch-callout: none;\r\n    -khtml-user-select: none;\r\n    -ms-touch-action: pan-y;\r\n        touch-action: pan-y;\r\n    -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n.slick-list\r\n{\r\n    position: relative;\r\n\r\n    display: block;\r\n    overflow: hidden;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n.slick-list:focus\r\n{\r\n    outline: none;\r\n}\r\n.slick-list.dragging\r\n{\r\n    cursor: pointer;\r\n    cursor: hand;\r\n}\r\n\r\n.slick-slider .slick-track,\r\n.slick-slider .slick-list\r\n{\r\n    -webkit-transform: translate3d(0, 0, 0);\r\n       -moz-transform: translate3d(0, 0, 0);\r\n        -ms-transform: translate3d(0, 0, 0);\r\n         -o-transform: translate3d(0, 0, 0);\r\n            transform: translate3d(0, 0, 0);\r\n}\r\n\r\n.slick-track\r\n{\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n.slick-track:before,\r\n.slick-track:after\r\n{\r\n    display: table;\r\n\r\n    content: '';\r\n}\r\n.slick-track:after\r\n{\r\n    clear: both;\r\n}\r\n.slick-loading .slick-track\r\n{\r\n    visibility: hidden;\r\n}\r\n\r\n.slick-slide\r\n{\r\n    display: none;\r\n    float: left;\r\n\r\n    height: 100%;\r\n    min-height: 1px;\r\n}\r\n[dir='rtl'] .slick-slide\r\n{\r\n    float: right;\r\n}\r\n.slick-slide img\r\n{\r\n    display: block;\r\n}\r\n.slick-slide.slick-loading img\r\n{\r\n    display: none;\r\n}\r\n.slick-slide.dragging img\r\n{\r\n    pointer-events: none;\r\n}\r\n.slick-initialized .slick-slide\r\n{\r\n    display: block;\r\n}\r\n.slick-loading .slick-slide\r\n{\r\n    visibility: hidden;\r\n}\r\n.slick-vertical .slick-slide\r\n{\r\n    display: block;\r\n\r\n    height: auto;\r\n\r\n    border: 1px solid transparent;\r\n}\r\n.slick-arrow.slick-hidden {\r\n    display: none;\r\n}\r\n", ""]);

// exports


/***/ }),

/***/ 1120:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _inputRange = __webpack_require__(1165);

var _inputRange2 = _interopRequireDefault(_inputRange);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @ignore
 * @typedef {Object} ClientRect
 * @property {number} height
 * @property {number} left
 * @property {number} top
 * @property {number} width
 */

/**
 * @typedef {Object} InputRangeClassNames
 * @property {string} activeTrack
 * @property {string} disabledInputRange
 * @property {string} inputRange
 * @property {string} labelContainer
 * @property {string} maxLabel
 * @property {string} minLabel
 * @property {string} slider
 * @property {string} sliderContainer
 * @property {string} track
 * @property {string} valueLabel
 */

/**
 * @typedef {Function} LabelFormatter
 * @param {number} value
 * @param {string} type
 * @return {string}
 */

/**
 * @ignore
 * @typedef {Object} Point
 * @property {number} x
 * @property {number} y
 */

/**
 * @typedef {Object} Range
 * @property {number} min - Min value
 * @property {number} max - Max value
 */

exports.default = _inputRange2.default;
module.exports = exports['default'];
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 1121:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

/**
 * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.
 * @public
 * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.
 * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.
 * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.
 */
utils.forEach = function(collection, callback) {
    for(var i = 0; i < collection.length; i++) {
        var result = callback(collection[i]);
        if(result) {
            return result;
        }
    }
};


/***/ }),

/***/ 1122:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var detector = module.exports = {};

detector.isIE = function(version) {
    function isAnyIeVersion() {
        var agent = navigator.userAgent.toLowerCase();
        return agent.indexOf("msie") !== -1 || agent.indexOf("trident") !== -1 || agent.indexOf(" edge/") !== -1;
    }

    if(!isAnyIeVersion()) {
        return false;
    }

    if(!version) {
        return true;
    }

    //Shamelessly stolen from https://gist.github.com/padolsey/527683
    var ieVersion = (function(){
        var undef,
            v = 3,
            div = document.createElement("div"),
            all = div.getElementsByTagName("i");

        do {
            div.innerHTML = "<!--[if gt IE " + (++v) + "]><i></i><![endif]-->";
        }
        while (all[0]);

        return v > 4 ? v : undef;
    }());

    return version === ieVersion;
};

detector.isLegacyOpera = function() {
    return !!window.opera;
};


/***/ }),

/***/ 1162:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRecaptcha = __webpack_require__(992);

var _reactRecaptcha2 = _interopRequireDefault(_reactRecaptcha);

var _apiCookie = __webpack_require__(941);

var _modalThankYou = __webpack_require__(1069);

var _modalThankYou2 = _interopRequireDefault(_modalThankYou);

var _modalIfBadRating = __webpack_require__(1163);

var _modalIfBadRating2 = _interopRequireDefault(_modalIfBadRating);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WriteRatingModal = function (_Component) {
    (0, _inherits3.default)(WriteRatingModal, _Component);

    function WriteRatingModal(props) {
        (0, _classCallCheck3.default)(this, WriteRatingModal);

        var _this = (0, _possibleConstructorReturn3.default)(this, (WriteRatingModal.__proto__ || Object.getPrototypeOf(WriteRatingModal)).call(this, props));

        _this.state = {
            isAnonymous: false,
            starTitle: '',
            captcha: {
                isCheckCaptcha: false,
                errorCaptcha: false
            },
            errorStars: false,
            userData: {
                firstname: '',
                lastname: '',
                email: ''
            },
            ratingText: '',
            errorMaxLength: false,
            showModalWriteRating: false,
            showModalIfBadRating: false
        };

        _this.changeAnonymous = _this.changeAnonymous.bind(_this);
        _this.changeStarsValue = _this.changeStarsValue.bind(_this);
        _this.mouseOverStar = _this.mouseOverStar.bind(_this);
        _this.publishRating = _this.publishRating.bind(_this);
        _this.publishIsBadRating = _this.publishIsBadRating.bind(_this);
        _this.verifyCaptchaCallback = _this.verifyCaptchaCallback.bind(_this);
        _this.handleChangeUserData = _this.handleChangeUserData.bind(_this);
        _this.changeRatingText = _this.changeRatingText.bind(_this);
        _this.writeRating = _this.writeRating.bind(_this);
        _this.closeModal = _this.closeModal.bind(_this);
        _this.closeModalIfBadRating = _this.closeModalIfBadRating.bind(_this);
        _this.showThankYou = _this.showThankYou.bind(_this);
        _this._checkIsLogin = _this._checkIsLogin.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(WriteRatingModal, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.showModalWriteRating !== this.props.showModalWriteRating && nextProps.showModalWriteRating === true) {
                this.writeRating();
            }
        }
    }, {
        key: '_checkIsLogin',
        value: function _checkIsLogin() {
            if (this.props.user.isLogin && this.props.user.data) {
                this.setState({ userData: (0, _extends3.default)({}, this.state.userData, {
                        firstname: this.props.user.data.systemAddress.first_name,
                        lastname: this.props.user.data.systemAddress.last_name,
                        email: this.props.user.data.systemAddress.email
                    })
                });
            }
        }
    }, {
        key: 'changeRatingText',
        value: function changeRatingText(e) {
            if (e.target.value.length > 500) {
                this.setState({ errorMaxLength: true });
            } else this.setState({ ratingText: e.target.value, errorMaxLength: false });
        }
    }, {
        key: 'handleChangeUserData',
        value: function handleChangeUserData(e) {
            var _e$target = e.target,
                value = _e$target.value,
                name = _e$target.name,
                userData = this.state.userData;

            userData[name] = value;
            this.setState({ userData: userData });
        }
    }, {
        key: 'verifyCaptchaCallback',
        value: function verifyCaptchaCallback(res) {
            this.setState({ captcha: (0, _extends3.default)({}, this.state.captcha, { isCheckCaptcha: true, errorCaptcha: false }) });
        }
    }, {
        key: 'changeAnonymous',
        value: function changeAnonymous(e) {
            var checked = e.target.checked;

            this.setState({ isAnonymous: checked });
            this.setState({ captcha: (0, _extends3.default)({}, this.state.captcha, { isCheckCaptcha: false }) });
        }
    }, {
        key: 'mouseOverStar',
        value: function mouseOverStar() {
            var values = ['Ungenügend', 'Befriedigend', 'Gut', 'Sehr gut', 'Ausgezeichnet'],
                element = document.querySelector('input[name="stars"]:checked');
            if (element) this.setState({ starTitle: values[element.value - 1] });else this.setState({ starTitle: '' });
        }
    }, {
        key: 'changeStarsValue',
        value: function changeStarsValue(e) {
            var values = ['Ungenügend', 'Befriedigend', 'Gut', 'Sehr gut', 'Ausgezeichnet'],
                value = e.target.value,
                starHover = e.target.getAttribute('data-star');

            if (starHover) {
                this.setState({ starTitle: values[starHover - 1], errorStars: false });
            } else this.setState({ starTitle: values[value - 1], errorStars: false });
        }
    }, {
        key: 'closeModal',
        value: function closeModal(data) {
            if (data) {
                this.setState({ formData: data,
                    captcha: {
                        isCheckCaptcha: false,
                        errorCaptcha: false
                    },
                    isAnonymous: false,
                    starTitle: '',
                    ratingText: '',
                    errorMaxLength: false,
                    errorStars: false,
                    userData: {
                        firstname: '',
                        lastname: '',
                        email: ''
                    },
                    showModalWriteRating: false,
                    showModalIfBadRating: true }, function () {
                    return $('#modalBadRating').modal();
                });
            } else {
                this.setState({ captcha: {
                        isCheckCaptcha: false,
                        errorCaptcha: false
                    },
                    userData: {
                        firstname: '',
                        lastname: '',
                        email: ''
                    },
                    showModalWriteRating: false,
                    isAnonymous: false,
                    starTitle: '',
                    ratingText: '',
                    errorMaxLength: false,
                    errorStars: false });
            }
            if (this.props.closeShowModalWriteRating) this.props.closeShowModalWriteRating();
        }
    }, {
        key: 'showThankYou',
        value: function showThankYou() {
            var selector = window.isMobile ? '.thankYou' : '.thankYou .wrap';
            $('.thankYou').css({ display: 'block' });
            setTimeout(function () {
                return $(selector).css({ opacity: '1' });
            }, 500);

            setTimeout(function () {
                $(selector).css({ opacity: '0' });
                setTimeout(function () {
                    return $('.thankYou').css({ display: 'none' });
                }, 2500);
            }, 5000);
        }
    }, {
        key: 'publishRating',
        value: function publishRating(e) {
            var _this2 = this;

            e.preventDefault();
            var isStarsChecked = document.querySelector('input[name="stars"]:checked'),
                captcha = this.state.captcha;

            if (isStarsChecked && captcha.isCheckCaptcha) {
                var data = new FormData(document.forms.formWriteRating);
                data.append('anonym', this.state.isAnonymous ? 1 : 0);
                if (isStarsChecked.value > 3) {
                    document.getElementById('spinner-box-load').style.display = 'block';
                    axios.post('/api/addRating', data).then(function (result) {
                        document.getElementById('spinner-box-load').style.display = 'none';
                        if (result.status === 200) {
                            $('#modalWriteRating').modal('toggle');
                            _this2.closeModal();
                            _this2.showThankYou();
                            _apiCookie.cookieApi.setCookie('writeRating', 'true', { path: '/', expires: window.expireTimeWriteRating });
                        }
                    });
                } else {
                    $('#modalWriteRating').modal('toggle');
                    this.closeModal(data);
                }
            } else {
                if (!isStarsChecked) this.setState({ errorStars: 'Bitte Sterne auswählen' });
                if (!window.isGoogleConnection) {
                    this.setState({ captcha: (0, _extends3.default)({}, this.state.captcha, { isCheckCaptcha: true }) });
                } else if (!captcha.isCheckCaptcha) this.setState({ captcha: (0, _extends3.default)({}, this.state.captcha, { errorCaptcha: true }) });
            }
        }
    }, {
        key: 'writeRating',
        value: function writeRating() {
            var _this3 = this;

            if (!_apiCookie.cookieApi.getCookie('writeRating')) {
                this._checkIsLogin();
                this.setState({ showModalWriteRating: true }, function () {
                    return $('#modalWriteRating').modal();
                });
            } else {
                this.setState({ writeRatingToday: true });
                setTimeout(function () {
                    return _this3.setState({ writeRatingToday: false });
                }, 3000);
            }
        }
    }, {
        key: 'closeModalIfBadRating',
        value: function closeModalIfBadRating() {
            this.setState({ formData: null, showModalIfBadRating: false });
        }
    }, {
        key: 'publishIsBadRating',
        value: function publishIsBadRating(e) {
            var _this4 = this;

            e.preventDefault();
            var formData = this.state.formData,
                feedback = {
                type: document.forms.formIfBadRating.feedbackStatus.value,
                message: document.forms.formIfBadRating.feedbackText.value
            };

            formData.append('feedback', JSON.stringify(feedback));

            document.getElementById('spinner-box-load').style.display = 'block';
            axios.post('/api/addRating', formData).then(function (result) {
                document.getElementById('spinner-box-load').style.display = 'none';
                if (result.status === 200) {
                    $('#modalBadRating').modal('toggle');
                    _this4.closeModalIfBadRating();
                    _this4.showThankYou();
                    _apiCookie.cookieApi.setCookie('writeRating', 'true', { path: '/', expires: window.expireTimeWriteRating });
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            var _state = this.state,
                isAnonymous = _state.isAnonymous,
                starTitle = _state.starTitle,
                captcha = _state.captcha,
                errorStars = _state.errorStars,
                userData = _state.userData,
                ratingText = _state.ratingText,
                errorMaxLength = _state.errorMaxLength,
                writeRatingToday = _state.writeRatingToday,
                showModalIfBadRating = _state.showModalIfBadRating,
                showModalWriteRating = _state.showModalWriteRating;

            return _react2.default.createElement(
                'div',
                { className: 'add-rating' },
                showModalWriteRating && _react2.default.createElement(
                    'div',
                    { className: 'modal',
                        id: 'modalWriteRating',
                        tabIndex: '-1',
                        role: 'dialog',
                        'data-keyboard': 'false',
                        'aria-labelledby': 'modalWriteRating' },
                    _react2.default.createElement(
                        'div',
                        { className: 'modal-dialog', role: 'document' },
                        _react2.default.createElement(
                            'div',
                            { className: 'modal-content' },
                            _react2.default.createElement(
                                'div',
                                { className: 'modal-header' },
                                _react2.default.createElement(
                                    'button',
                                    { onClick: function onClick() {
                                            return _this5.closeModal(false);
                                        }, type: 'button', className: 'close',
                                        'data-dismiss': 'modal', 'aria-label': 'Close' },
                                    _react2.default.createElement(
                                        'span',
                                        { 'aria-hidden': 'true' },
                                        '\xD7'
                                    )
                                ),
                                _react2.default.createElement(
                                    'h4',
                                    { className: 'modal-title', id: 'modalWriteRating' },
                                    'Neue Bewertung'
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'modal-body' },
                                _react2.default.createElement(
                                    'form',
                                    { name: 'formWriteRating', onSubmit: this.publishRating },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'stars' },
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'wrapStars' },
                                            _react2.default.createElement('input', { type: 'radio', value: '5', id: 'star-5', name: 'stars' }),
                                            _react2.default.createElement('label', { onMouseOut: this.mouseOverStar,
                                                onMouseOver: this.changeStarsValue, 'data-star': '5', htmlFor: 'star-5' }),
                                            _react2.default.createElement('input', { type: 'radio', value: '4', id: 'star-4', name: 'stars' }),
                                            _react2.default.createElement('label', { onMouseOut: this.mouseOverStar,
                                                onMouseOver: this.changeStarsValue, 'data-star': '4', htmlFor: 'star-4' }),
                                            _react2.default.createElement('input', { type: 'radio', value: '3', id: 'star-3', name: 'stars' }),
                                            _react2.default.createElement('label', { onMouseOut: this.mouseOverStar,
                                                onMouseOver: this.changeStarsValue, 'data-star': '3', htmlFor: 'star-3' }),
                                            _react2.default.createElement('input', { type: 'radio', value: '2', id: 'star-2', name: 'stars' }),
                                            _react2.default.createElement('label', { onMouseOut: this.mouseOverStar,
                                                onMouseOver: this.changeStarsValue, 'data-star': '2', htmlFor: 'star-2' }),
                                            _react2.default.createElement('input', { type: 'radio', value: '1', id: 'star-1', name: 'stars' }),
                                            _react2.default.createElement('label', { onMouseOut: this.mouseOverStar,
                                                onMouseOver: this.changeStarsValue, 'data-star': '1', htmlFor: 'star-1' })
                                        ),
                                        _react2.default.createElement(
                                            'span',
                                            null,
                                            starTitle
                                        )
                                    ),
                                    errorStars && _react2.default.createElement(
                                        'p',
                                        { className: 'errorText' },
                                        errorStars
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'commentField' },
                                        errorMaxLength && _react2.default.createElement(
                                            'p',
                                            { className: 'error' },
                                            'Der Bewertungstext darf maximal aus 500 Zeichen bestehen'
                                        ),
                                        _react2.default.createElement('textarea', { name: 'message',
                                            value: ratingText,
                                            onChange: this.changeRatingText,
                                            required: true })
                                    ),
                                    !isAnonymous && _react2.default.createElement(
                                        'div',
                                        { className: 'userInfo' },
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'rowInput' },
                                            _react2.default.createElement('input', { type: 'text',
                                                value: userData.firstname,
                                                onChange: this.handleChangeUserData,
                                                required: true,
                                                name: 'firstname',
                                                placeholder: 'Vorname' }),
                                            _react2.default.createElement('input', { type: 'text',
                                                value: userData.lastname,
                                                onChange: this.handleChangeUserData,
                                                required: true,
                                                name: 'lastname',
                                                placeholder: 'Nachname' })
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'rowInput' },
                                            _react2.default.createElement('input', { type: 'email',
                                                value: userData.email,
                                                onChange: this.handleChangeUserData,
                                                required: true,
                                                name: 'email',
                                                placeholder: 'E-Mail' }),
                                            _react2.default.createElement(_reactRecaptcha2.default, {
                                                sitekey: window.captchaSitekey.key,
                                                render: 'explicit',
                                                hl: "de",
                                                verifyCallback: this.verifyCaptchaCallback,
                                                onloadCallback: function onloadCallback() {
                                                    return false;
                                                }
                                            })
                                        ),
                                        captcha.errorCaptcha && _react2.default.createElement(
                                            'div',
                                            { className: 'wrapErrorCaptcha' },
                                            _react2.default.createElement(
                                                'p',
                                                { style: { color: 'red' } },
                                                'Bitte best\xE4tigen Sie, dass Sie kein Roboter sind.'
                                            )
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'buttons' },
                                        _react2.default.createElement(
                                            'label',
                                            null,
                                            _react2.default.createElement('input', { onChange: this.changeAnonymous, type: 'checkbox', name: 'anonymous' }),
                                            _react2.default.createElement('span', { className: 'check' }),
                                            'Anonym ver\xF6ffentlichen'
                                        ),
                                        isAnonymous && window.isGoogleConnection && _react2.default.createElement(
                                            'div',
                                            { className: 'wrapCaptcha' },
                                            _react2.default.createElement(_reactRecaptcha2.default, {
                                                sitekey: window.captchaSitekey.key,
                                                render: 'explicit',
                                                hl: "de",
                                                verifyCallback: this.verifyCaptchaCallback,
                                                onloadCallback: function onloadCallback() {
                                                    return false;
                                                } }),
                                            captcha.errorCaptcha && _react2.default.createElement(
                                                'p',
                                                { style: { color: 'red' } },
                                                'Bitte best\xE4tigen Sie, dass Sie kein Roboter sind.'
                                            )
                                        ),
                                        !isAnonymous && _react2.default.createElement(
                                            'button',
                                            { className: 'btn', onSubmit: this.publishRating },
                                            'Ver\xF6ffentlichen'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'text-right' },
                                        isAnonymous && _react2.default.createElement(
                                            'button',
                                            { className: 'btn', onSubmit: this.publishRating },
                                            'Ver\xF6ffentlichen'
                                        )
                                    )
                                )
                            )
                        )
                    )
                ),
                showModalIfBadRating && _react2.default.createElement(_modalIfBadRating2.default, { closeModal: this.closeModalIfBadRating,
                    publishIfBadRating: this.publishIsBadRating }),
                _react2.default.createElement(_modalThankYou2.default, null)
            );
        }
    }]);
    return WriteRatingModal;
}(_react.Component);

WriteRatingModal.propTypes = {};
WriteRatingModal.defaultProps = {};

exports.default = WriteRatingModal;

/***/ }),

/***/ 1163:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModalIfBadRating = function ModalIfBadRating(_ref) {
    var publishIfBadRating = _ref.publishIfBadRating,
        closeModal = _ref.closeModal;

    return _react2.default.createElement(
        "div",
        { className: "modal fade",
            id: "modalBadRating",
            tabIndex: "-1",
            role: "dialog",
            "aria-labelledby": "modalBadRating" },
        _react2.default.createElement(
            "div",
            { className: "modal-dialog", role: "document" },
            _react2.default.createElement(
                "div",
                { className: "modal-content" },
                _react2.default.createElement(
                    "div",
                    { className: "modal-header" },
                    _react2.default.createElement(
                        "button",
                        { onClick: closeModal, type: "button", className: "close", "data-dismiss": "modal", "aria-label": "Close" },
                        _react2.default.createElement(
                            "span",
                            { "aria-hidden": "true" },
                            "\xD7"
                        )
                    ),
                    _react2.default.createElement(
                        "h4",
                        { className: "modal-title" },
                        _react2.default.createElement("img", { loading: "lazy", src: "/images/design/sad.svg", alt: "" })
                    )
                ),
                _react2.default.createElement(
                    "div",
                    { className: "modal-body" },
                    _react2.default.createElement(
                        "p",
                        { className: "head" },
                        "Das tut uns Leid zu h\xF6ren, wie k\xF6nnen wir uns verbessern?"
                    ),
                    _react2.default.createElement(
                        "form",
                        { name: "formIfBadRating", onSubmit: publishIfBadRating },
                        _react2.default.createElement(
                            "label",
                            null,
                            _react2.default.createElement("input", { type: "radio", name: "feedbackStatus", value: "1", required: true }),
                            _react2.default.createElement("span", null),
                            "Support-Dienstleistung (Ladenlokal, E-Mail, Telefon etc.)"
                        ),
                        _react2.default.createElement(
                            "label",
                            null,
                            _react2.default.createElement("input", { type: "radio", name: "feedbackStatus", value: "2", required: true }),
                            _react2.default.createElement("span", null),
                            "Lieferzeiten (Zu lange Lieferzeiten oder \xE4hnliches)"
                        ),
                        _react2.default.createElement(
                            "label",
                            null,
                            _react2.default.createElement("input", { type: "radio", name: "feedbackStatus", value: "3", required: true }),
                            _react2.default.createElement("span", null),
                            "Zustandsbeschreibung (nicht wie online beschrieben, Garantiefall etc.)"
                        ),
                        _react2.default.createElement(
                            "label",
                            null,
                            _react2.default.createElement("input", { type: "radio", name: "feedbackStatus", value: "4", required: true }),
                            _react2.default.createElement("span", null),
                            "Zahlungsm\xF6glichkeiten (Probleme bei der Zahlung, Preisgestaltung etc.)"
                        ),
                        _react2.default.createElement(
                            "div",
                            { className: "message" },
                            _react2.default.createElement(
                                "p",
                                null,
                                "Zus\xE4tzliches Feedback"
                            ),
                            _react2.default.createElement("textarea", { name: "feedbackText", placeholder: "Optional..." })
                        ),
                        _react2.default.createElement(
                            "div",
                            { className: "text-right" },
                            _react2.default.createElement(
                                "button",
                                { className: "btn", onSubmit: publishIfBadRating },
                                "Ver\xF6ffentlichen"
                            )
                        )
                    )
                )
            )
        )
    );
};

ModalIfBadRating.propTypes = {};
ModalIfBadRating.defaultProps = {};

exports.default = ModalIfBadRating;

/***/ }),

/***/ 1164:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _toConsumableArray2 = __webpack_require__(316);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRecaptcha = __webpack_require__(992);

var _reactRecaptcha2 = _interopRequireDefault(_reactRecaptcha);

var _reactInputRange = __webpack_require__(1120);

var _reactInputRange2 = _interopRequireDefault(_reactInputRange);

var _modalThankYou = __webpack_require__(1069);

var _modalThankYou2 = _interopRequireDefault(_modalThankYou);

var _modalIfBadRatingMobile = __webpack_require__(1180);

var _modalIfBadRatingMobile2 = _interopRequireDefault(_modalIfBadRatingMobile);

var _apiCookie = __webpack_require__(941);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WriteRatingModalMobile = function (_Component) {
    (0, _inherits3.default)(WriteRatingModalMobile, _Component);

    function WriteRatingModalMobile(props) {
        (0, _classCallCheck3.default)(this, WriteRatingModalMobile);

        var _this = (0, _possibleConstructorReturn3.default)(this, (WriteRatingModalMobile.__proto__ || Object.getPrototypeOf(WriteRatingModalMobile)).call(this, props));

        _this.state = {
            isAnonymous: false,
            starTitle: '',
            captcha: {
                isCheckCaptcha: false,
                errorCaptcha: false
            },
            errorStars: false,
            starsCount: 0,
            userData: {
                firstname: '',
                lastname: '',
                email: ''
            },
            ratingText: '',
            errorMaxLength: false,
            writeRatingToday: false,
            showModalWriteRating: false,
            showModalIfBadRating: false
        };

        _this.publishRating = _this.publishRating.bind(_this);
        _this.changeAnonymous = _this.changeAnonymous.bind(_this);
        _this.changeStarsInput = _this.changeStarsInput.bind(_this);
        _this.verifyCaptchaCallback = _this.verifyCaptchaCallback.bind(_this);
        _this.handleChangeUserData = _this.handleChangeUserData.bind(_this);
        _this.changeRatingText = _this.changeRatingText.bind(_this);
        _this.publishIsBadRating = _this.publishIsBadRating.bind(_this);
        _this.writeRating = _this.writeRating.bind(_this);
        _this.closeModal = _this.closeModal.bind(_this);
        _this.closeModalIfBadRating = _this.closeModalIfBadRating.bind(_this);
        _this.showThankYou = _this.showThankYou.bind(_this);
        _this._checkIsLogin = _this._checkIsLogin.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(WriteRatingModalMobile, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.showModalWriteRating !== this.props.showModalWriteRating && nextProps.showModalWriteRating === true) {
                this.writeRating();
            }
        }
    }, {
        key: '_checkIsLogin',
        value: function _checkIsLogin() {
            if (this.props.user.isLogin && this.props.user.data) {
                this.setState({
                    userData: (0, _extends3.default)({}, this.state.userData, {
                        firstname: this.props.user.data.systemAddress.first_name,
                        lastname: this.props.user.data.systemAddress.last_name,
                        email: this.props.user.data.systemAddress.email
                    })
                });
            }
        }
    }, {
        key: 'changeRatingText',
        value: function changeRatingText(e) {
            if (e.target.value.length > 500) {
                this.setState({ errorMaxLength: true });
            } else this.setState({ ratingText: e.target.value, errorMaxLength: false });
        }
    }, {
        key: 'handleChangeUserData',
        value: function handleChangeUserData(e) {
            var _e$target = e.target,
                value = _e$target.value,
                name = _e$target.name,
                userData = this.state.userData;

            userData[name] = value;
            this.setState({ userData: userData });
        }
    }, {
        key: 'verifyCaptchaCallback',
        value: function verifyCaptchaCallback(res) {
            this.setState({ captcha: (0, _extends3.default)({}, this.state.captcha, { isCheckCaptcha: true, errorCaptcha: false }) });
        }
    }, {
        key: 'changeStarsInput',
        value: function changeStarsInput(value) {
            var values = ['Ungenügend', 'Befriedigend', 'Gut', 'Sehr gut', 'Ausgezeichnet'];
            if (value > 0) {
                document.querySelector('#star-' + value).checked = true;
                this.setState({ starTitle: values[value - 1], errorStars: false, starsCount: value });
            } else {
                [].concat((0, _toConsumableArray3.default)(document.querySelectorAll('input[name="stars"]'))).forEach(function (item) {
                    return item.checked = false;
                });
                this.setState({ starTitle: '', errorStars: false, starsCount: value });
            }
        }
    }, {
        key: 'closeModal',
        value: function closeModal(data) {
            if (data) {
                this.setState({
                    formData: data,
                    captcha: {
                        isCheckCaptcha: false,
                        errorCaptcha: false
                    },
                    isAnonymous: false,
                    starTitle: '',
                    ratingText: '',
                    errorMaxLength: false,
                    errorStars: false,
                    starsCount: 0,
                    userData: {
                        firstname: '',
                        lastname: '',
                        email: ''
                    },
                    showModalWriteRating: false,
                    showModalIfBadRating: true
                }, function () {
                    return $('#modalBadRating').modal();
                });
            } else {
                this.setState({
                    captcha: {
                        isCheckCaptcha: false,
                        errorCaptcha: false
                    },
                    userData: {
                        firstname: '',
                        lastname: '',
                        email: ''
                    },
                    showModalWriteRating: false,
                    isAnonymous: false,
                    starTitle: '',
                    ratingText: '',
                    starsCount: 0,
                    errorMaxLength: false,
                    errorStars: false
                });
            }

            if (this.props.closeShowModalWriteRating) this.props.closeShowModalWriteRating();
        }
    }, {
        key: 'showThankYou',
        value: function showThankYou() {
            var selector = window.isMobile ? '.thankYou' : '.thankYou .wrap';
            $('.thankYou').css({ display: 'block' });
            setTimeout(function () {
                return $(selector).css({ opacity: '1' });
            }, 500);

            setTimeout(function () {
                $(selector).css({ opacity: '0' });
                setTimeout(function () {
                    return $('.thankYou').css({ display: 'none' });
                }, 2500);
            }, 5000);
        }
    }, {
        key: 'changeAnonymous',
        value: function changeAnonymous(e) {
            var checked = e.target.checked;

            this.setState({ isAnonymous: checked });
        }
    }, {
        key: 'publishRating',
        value: function publishRating(e) {
            var _this2 = this;

            e.preventDefault();
            var isStarsChecked = document.querySelector('input[name="stars"]:checked'),
                captcha = this.state.captcha;

            if (isStarsChecked && captcha.isCheckCaptcha) {
                var data = new FormData(document.forms.formWriteRating);
                data.append('anonym', this.state.isAnonymous ? 1 : 0);
                if (isStarsChecked.value > 3) {
                    document.getElementById('spinner-box-load').style.display = 'block';
                    axios.post('/api/addRating', data).then(function (result) {
                        document.getElementById('spinner-box-load').style.display = 'none';
                        if (result.status === 200) {
                            $('#modalWriteRating').modal('toggle');
                            _this2.closeModal();
                            _this2.showThankYou();
                            _apiCookie.cookieApi.setCookie('writeRating', 'true', { path: '/', expires: window.expireTimeWriteRating });
                        }
                    });
                } else {
                    $('#modalWriteRating').modal('toggle');
                    this.closeModal(data);
                }
            } else {
                if (!isStarsChecked) this.setState({ errorStars: 'Bitte Sterne auswählen' });
                if (!window.isGoogleConnection) {
                    this.setState({ captcha: (0, _extends3.default)({}, this.state.captcha, { isCheckCaptcha: true }) });
                } else if (!captcha.isCheckCaptcha) this.setState({ captcha: (0, _extends3.default)({}, this.state.captcha, { errorCaptcha: true }) });
            }
        }
    }, {
        key: 'writeRating',
        value: function writeRating() {
            var _this3 = this;

            if (!_apiCookie.cookieApi.getCookie('writeRating')) {
                this._checkIsLogin();
                this.setState({ showModalWriteRating: true }, function () {
                    return $('#modalWriteRating').modal();
                });
            } else {
                this.setState({ writeRatingToday: true });
                setTimeout(function () {
                    return _this3.setState({ writeRatingToday: false });
                }, 3000);
            }
        }
    }, {
        key: 'closeModalIfBadRating',
        value: function closeModalIfBadRating() {
            this.setState({ formData: null, showModalIfBadRating: false });
        }
    }, {
        key: 'publishIsBadRating',
        value: function publishIsBadRating(e) {
            var _this4 = this;

            e.preventDefault();
            var formData = this.state.formData,
                feedback = {
                type: document.forms.formIfBadRating.feedbackStatus.value,
                message: document.forms.formIfBadRating.feedbackText.value
            };

            formData.append('feedback', JSON.stringify(feedback));

            document.getElementById('spinner-box-load').style.display = 'block';
            axios.post('/api/addRating', formData).then(function (result) {
                document.getElementById('spinner-box-load').style.display = 'none';
                if (result.status === 200) {
                    $('#modalBadRating').modal('toggle');
                    _this4.closeModalIfBadRating();
                    _this4.showThankYou();
                    _apiCookie.cookieApi.setCookie('writeRating', 'true', { path: '/', expires: window.expireTimeWriteRating });
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            var _state = this.state,
                isAnonymous = _state.isAnonymous,
                starTitle = _state.starTitle,
                captcha = _state.captcha,
                errorStars = _state.errorStars,
                userData = _state.userData,
                ratingText = _state.ratingText,
                errorMaxLength = _state.errorMaxLength,
                showModalIfBadRating = _state.showModalIfBadRating,
                showModalWriteRating = _state.showModalWriteRating;

            return _react2.default.createElement(
                'div',
                null,
                showModalIfBadRating && _react2.default.createElement(_modalIfBadRatingMobile2.default, { closeModal: this.closeModalIfBadRating,
                    publishIfBadRating: this.publishIsBadRating }),
                _react2.default.createElement(_modalThankYou2.default, null),
                showModalWriteRating && _react2.default.createElement(
                    'div',
                    { className: 'modal',
                        id: 'modalWriteRating',
                        tabIndex: '-1',
                        role: 'dialog',
                        'aria-labelledby': 'modalWriteRating' },
                    _react2.default.createElement(
                        'div',
                        { className: 'modal-dialog', role: 'document' },
                        _react2.default.createElement(
                            'div',
                            { className: 'modal-content' },
                            _react2.default.createElement(
                                'div',
                                { className: 'modal-header' },
                                _react2.default.createElement(
                                    'button',
                                    { onClick: function onClick() {
                                            return _this5.closeModal(false);
                                        }, type: 'button', className: 'close',
                                        'data-dismiss': 'modal', 'aria-label': 'Close' },
                                    _react2.default.createElement(
                                        'span',
                                        { 'aria-hidden': 'true' },
                                        '\xD7'
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'modal-body' },
                                _react2.default.createElement(
                                    'form',
                                    { name: 'formWriteRating', onSubmit: this.publishRating },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'wrapForm' },
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'stars' },
                                            _react2.default.createElement(
                                                'span',
                                                null,
                                                starTitle
                                            ),
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'wrapStars' },
                                                _react2.default.createElement('input', { type: 'radio', value: '5', id: 'star-5', name: 'stars' }),
                                                _react2.default.createElement('span', null),
                                                _react2.default.createElement('input', { type: 'radio', value: '4', id: 'star-4', name: 'stars' }),
                                                _react2.default.createElement('span', null),
                                                _react2.default.createElement('input', { type: 'radio', value: '3', id: 'star-3', name: 'stars' }),
                                                _react2.default.createElement('span', null),
                                                _react2.default.createElement('input', { type: 'radio', value: '2', id: 'star-2', name: 'stars' }),
                                                _react2.default.createElement('span', null),
                                                _react2.default.createElement('input', { type: 'radio', value: '1', id: 'star-1', name: 'stars' }),
                                                _react2.default.createElement('span', null)
                                            ),
                                            errorStars && _react2.default.createElement(
                                                'p',
                                                { className: 'errorText' },
                                                errorStars
                                            ),
                                            _react2.default.createElement(
                                                'h3',
                                                null,
                                                'Neue Bewertung'
                                            ),
                                            _react2.default.createElement(_reactInputRange2.default, {
                                                maxValue: 5,
                                                minValue: 0,
                                                value: this.state.starsCount,
                                                onChange: this.changeStarsInput })
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'commentField' },
                                            errorMaxLength && _react2.default.createElement(
                                                'p',
                                                { className: 'error' },
                                                'Der Bewertungstext darf maximal aus 500 Zeichen bestehen'
                                            ),
                                            _react2.default.createElement('textarea', { name: 'message',
                                                value: ratingText,
                                                onChange: this.changeRatingText,
                                                required: true })
                                        ),
                                        !isAnonymous && _react2.default.createElement(
                                            'div',
                                            { className: 'userInfo' },
                                            _react2.default.createElement('input', { type: 'text',
                                                value: userData.firstname,
                                                onChange: this.handleChangeUserData,
                                                required: true,
                                                name: 'firstname',
                                                placeholder: 'Vorname' }),
                                            _react2.default.createElement('input', { type: 'text',
                                                value: userData.lastname,
                                                onChange: this.handleChangeUserData,
                                                required: true,
                                                name: 'lastname',
                                                placeholder: 'Nachname' }),
                                            _react2.default.createElement('input', { type: 'email',
                                                value: userData.email,
                                                onChange: this.handleChangeUserData,
                                                required: true,
                                                name: 'email',
                                                placeholder: 'E-Mail' })
                                        ),
                                        _react2.default.createElement(_reactRecaptcha2.default, {
                                            sitekey: window.captchaSitekey.key,
                                            render: 'explicit',
                                            hl: "de",
                                            verifyCallback: this.verifyCaptchaCallback,
                                            onloadCallback: function onloadCallback() {
                                                return false;
                                            }
                                        }),
                                        captcha.errorCaptcha && _react2.default.createElement(
                                            'p',
                                            { style: { color: 'red' } },
                                            'Bitte best\xE4tigen Sie, dass Sie kein Roboter sind.'
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            null,
                                            _react2.default.createElement(
                                                'label',
                                                null,
                                                'Anonym ver\xF6ffentlichen',
                                                _react2.default.createElement('input', { onChange: this.changeAnonymous, type: 'checkbox', name: 'anonymous' }),
                                                _react2.default.createElement('span', { className: 'slider' })
                                            )
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'buttons' },
                                        _react2.default.createElement(
                                            'button',
                                            { onClick: function onClick() {
                                                    return _this5.closeModal(false);
                                                },
                                                type: 'button',
                                                className: 'btn closeBtn',
                                                'data-dismiss': 'modal',
                                                'aria-label': 'Close' },
                                            'Abbrechen'
                                        ),
                                        _react2.default.createElement(
                                            'button',
                                            { className: 'btn', onSubmit: this.publishRating },
                                            'Ver\xF6ffentlichen'
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);
    return WriteRatingModalMobile;
}(_react.Component);

WriteRatingModalMobile.propTypes = {};
WriteRatingModalMobile.defaultProps = {};

exports.default = WriteRatingModalMobile;

/***/ }),

/***/ 1165:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _autobindDecorator = __webpack_require__(1040);

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _valueTransformer = __webpack_require__(1166);

var valueTransformer = _interopRequireWildcard(_valueTransformer);

var _defaultClassNames = __webpack_require__(1174);

var _defaultClassNames2 = _interopRequireDefault(_defaultClassNames);

var _label = __webpack_require__(1070);

var _label2 = _interopRequireDefault(_label);

var _rangePropType = __webpack_require__(1175);

var _rangePropType2 = _interopRequireDefault(_rangePropType);

var _valuePropType = __webpack_require__(1176);

var _valuePropType2 = _interopRequireDefault(_valuePropType);

var _slider = __webpack_require__(1177);

var _slider2 = _interopRequireDefault(_slider);

var _track = __webpack_require__(1178);

var _track2 = _interopRequireDefault(_track);

var _utils = __webpack_require__(987);

var _keyCodes = __webpack_require__(1179);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

/**
 * A React component that allows users to input numeric values within a range
 * by dragging its sliders.
 */
var InputRange = (_class = function (_React$Component) {
  _inherits(InputRange, _React$Component);

  _createClass(InputRange, null, [{
    key: 'propTypes',

    /**
     * @ignore
     * @override
     * @return {Object}
     */
    get: function get() {
      return {
        allowSameValues: _propTypes2.default.bool,
        ariaLabelledby: _propTypes2.default.string,
        ariaControls: _propTypes2.default.string,
        classNames: _propTypes2.default.objectOf(_propTypes2.default.string),
        disabled: _propTypes2.default.bool,
        draggableTrack: _propTypes2.default.bool,
        formatLabel: _propTypes2.default.func,
        maxValue: _rangePropType2.default,
        minValue: _rangePropType2.default,
        name: _propTypes2.default.string,
        onChangeStart: _propTypes2.default.func,
        onChange: _propTypes2.default.func.isRequired,
        onChangeComplete: _propTypes2.default.func,
        step: _propTypes2.default.number,
        value: _valuePropType2.default
      };
    }

    /**
     * @ignore
     * @override
     * @return {Object}
     */

  }, {
    key: 'defaultProps',
    get: function get() {
      return {
        allowSameValues: false,
        classNames: _defaultClassNames2.default,
        disabled: false,
        maxValue: 10,
        minValue: 0,
        step: 1
      };
    }

    /**
     * @param {Object} props
     * @param {boolean} [props.allowSameValues]
     * @param {string} [props.ariaLabelledby]
     * @param {string} [props.ariaControls]
     * @param {InputRangeClassNames} [props.classNames]
     * @param {boolean} [props.disabled = false]
     * @param {Function} [props.formatLabel]
     * @param {number|Range} [props.maxValue = 10]
     * @param {number|Range} [props.minValue = 0]
     * @param {string} [props.name]
     * @param {string} props.onChange
     * @param {Function} [props.onChangeComplete]
     * @param {Function} [props.onChangeStart]
     * @param {number} [props.step = 1]
     * @param {number|Range} props.value
     */

  }]);

  function InputRange(props) {
    _classCallCheck(this, InputRange);

    /**
     * @private
     * @type {?number}
     */
    var _this = _possibleConstructorReturn(this, (InputRange.__proto__ || Object.getPrototypeOf(InputRange)).call(this, props));

    _this.startValue = null;

    /**
     * @private
     * @type {?Component}
     */
    _this.node = null;

    /**
     * @private
     * @type {?Component}
     */
    _this.trackNode = null;

    /**
     * @private
     * @type {bool}
     */
    _this.isSliderDragging = false;

    /**
     * @private
     * @type {?string}
     */
    _this.lastKeyMoved = null;
    return _this;
  }

  /**
   * @ignore
   * @override
   * @return {void}
   */


  _createClass(InputRange, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.removeDocumentMouseUpListener();
      this.removeDocumentTouchEndListener();
    }

    /**
     * Return the CSS class name of the component
     * @private
     * @return {string}
     */

  }, {
    key: 'getComponentClassName',
    value: function getComponentClassName() {
      if (!this.props.disabled) {
        return this.props.classNames.inputRange;
      }

      return this.props.classNames.disabledInputRange;
    }

    /**
     * Return the bounding rect of the track
     * @private
     * @return {ClientRect}
     */

  }, {
    key: 'getTrackClientRect',
    value: function getTrackClientRect() {
      return this.trackNode.getClientRect();
    }

    /**
     * Return the slider key closest to a point
     * @private
     * @param {Point} position
     * @return {string}
     */

  }, {
    key: 'getKeyByPosition',
    value: function getKeyByPosition(position) {
      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());
      var positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());

      if (this.isMultiValue()) {
        var distanceToMin = (0, _utils.distanceTo)(position, positions.min);
        var distanceToMax = (0, _utils.distanceTo)(position, positions.max);

        if (distanceToMin < distanceToMax) {
          return 'min';
        }
      }

      return 'max';
    }

    /**
     * Return all the slider keys
     * @private
     * @return {string[]}
     */

  }, {
    key: 'getKeys',
    value: function getKeys() {
      if (this.isMultiValue()) {
        return ['min', 'max'];
      }

      return ['max'];
    }

    /**
     * Return true if the difference between the new and the current value is
     * greater or equal to the step amount of the component
     * @private
     * @param {Range} values
     * @return {boolean}
     */

  }, {
    key: 'hasStepDifference',
    value: function hasStepDifference(values) {
      var currentValues = valueTransformer.getValueFromProps(this.props, this.isMultiValue());

      return (0, _utils.length)(values.min, currentValues.min) >= this.props.step || (0, _utils.length)(values.max, currentValues.max) >= this.props.step;
    }

    /**
     * Return true if the component accepts a min and max value
     * @private
     * @return {boolean}
     */

  }, {
    key: 'isMultiValue',
    value: function isMultiValue() {
      return (0, _utils.isObject)(this.props.value);
    }

    /**
     * Return true if the range is within the max and min value of the component
     * @private
     * @param {Range} values
     * @return {boolean}
     */

  }, {
    key: 'isWithinRange',
    value: function isWithinRange(values) {
      if (this.isMultiValue()) {
        return values.min >= this.props.minValue && values.max <= this.props.maxValue && this.props.allowSameValues ? values.min <= values.max : values.min < values.max;
      }

      return values.max >= this.props.minValue && values.max <= this.props.maxValue;
    }

    /**
     * Return true if the new value should trigger a render
     * @private
     * @param {Range} values
     * @return {boolean}
     */

  }, {
    key: 'shouldUpdate',
    value: function shouldUpdate(values) {
      return this.isWithinRange(values) && this.hasStepDifference(values);
    }

    /**
     * Update the position of a slider
     * @private
     * @param {string} key
     * @param {Point} position
     * @return {void}
     */

  }, {
    key: 'updatePosition',
    value: function updatePosition(key, position) {
      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());
      var positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());

      positions[key] = position;
      this.lastKeyMoved = key;

      this.updatePositions(positions);
    }

    /**
     * Update the positions of multiple sliders
     * @private
     * @param {Object} positions
     * @param {Point} positions.min
     * @param {Point} positions.max
     * @return {void}
     */

  }, {
    key: 'updatePositions',
    value: function updatePositions(positions) {
      var values = {
        min: valueTransformer.getValueFromPosition(positions.min, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),
        max: valueTransformer.getValueFromPosition(positions.max, this.props.minValue, this.props.maxValue, this.getTrackClientRect())
      };

      var transformedValues = {
        min: valueTransformer.getStepValueFromValue(values.min, this.props.step),
        max: valueTransformer.getStepValueFromValue(values.max, this.props.step)
      };

      this.updateValues(transformedValues);
    }

    /**
     * Update the value of a slider
     * @private
     * @param {string} key
     * @param {number} value
     * @return {void}
     */

  }, {
    key: 'updateValue',
    value: function updateValue(key, value) {
      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());

      values[key] = value;

      this.updateValues(values);
    }

    /**
     * Update the values of multiple sliders
     * @private
     * @param {Range|number} values
     * @return {void}
     */

  }, {
    key: 'updateValues',
    value: function updateValues(values) {
      if (!this.shouldUpdate(values)) {
        return;
      }

      this.props.onChange(this.isMultiValue() ? values : values.max);
    }

    /**
     * Increment the value of a slider by key name
     * @private
     * @param {string} key
     * @return {void}
     */

  }, {
    key: 'incrementValue',
    value: function incrementValue(key) {
      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());
      var value = values[key] + this.props.step;

      this.updateValue(key, value);
    }

    /**
     * Decrement the value of a slider by key name
     * @private
     * @param {string} key
     * @return {void}
     */

  }, {
    key: 'decrementValue',
    value: function decrementValue(key) {
      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());
      var value = values[key] - this.props.step;

      this.updateValue(key, value);
    }

    /**
     * Listen to mouseup event
     * @private
     * @return {void}
     */

  }, {
    key: 'addDocumentMouseUpListener',
    value: function addDocumentMouseUpListener() {
      this.removeDocumentMouseUpListener();
      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);
    }

    /**
     * Listen to touchend event
     * @private
     * @return {void}
     */

  }, {
    key: 'addDocumentTouchEndListener',
    value: function addDocumentTouchEndListener() {
      this.removeDocumentTouchEndListener();
      this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);
    }

    /**
     * Stop listening to mouseup event
     * @private
     * @return {void}
     */

  }, {
    key: 'removeDocumentMouseUpListener',
    value: function removeDocumentMouseUpListener() {
      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);
    }

    /**
     * Stop listening to touchend event
     * @private
     * @return {void}
     */

  }, {
    key: 'removeDocumentTouchEndListener',
    value: function removeDocumentTouchEndListener() {
      this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);
    }

    /**
     * Handle any "mousemove" event received by the slider
     * @private
     * @param {SyntheticEvent} event
     * @param {string} key
     * @return {void}
     */

  }, {
    key: 'handleSliderDrag',
    value: function handleSliderDrag(event, key) {
      var _this2 = this;

      if (this.props.disabled) {
        return;
      }

      var position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());
      this.isSliderDragging = true;
      requestAnimationFrame(function () {
        return _this2.updatePosition(key, position);
      });
    }

    /**
     * Handle any "mousemove" event received by the track
     * @private
     * @param {SyntheticEvent} event
     * @return {void}
     */

  }, {
    key: 'handleTrackDrag',
    value: function handleTrackDrag(event, prevEvent) {
      if (this.props.disabled || !this.props.draggableTrack || this.isSliderDragging) {
        return;
      }

      var _props = this.props,
          maxValue = _props.maxValue,
          minValue = _props.minValue,
          _props$value = _props.value,
          max = _props$value.max,
          min = _props$value.min;


      var position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());
      var value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());
      var stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);

      var prevPosition = valueTransformer.getPositionFromEvent(prevEvent, this.getTrackClientRect());
      var prevValue = valueTransformer.getValueFromPosition(prevPosition, minValue, maxValue, this.getTrackClientRect());
      var prevStepValue = valueTransformer.getStepValueFromValue(prevValue, this.props.step);

      var offset = prevStepValue - stepValue;

      var transformedValues = {
        min: min - offset,
        max: max - offset
      };

      this.updateValues(transformedValues);
    }

    /**
     * Handle any "keydown" event received by the slider
     * @private
     * @param {SyntheticEvent} event
     * @param {string} key
     * @return {void}
     */

  }, {
    key: 'handleSliderKeyDown',
    value: function handleSliderKeyDown(event, key) {
      if (this.props.disabled) {
        return;
      }

      switch (event.keyCode) {
        case _keyCodes.LEFT_ARROW:
        case _keyCodes.DOWN_ARROW:
          event.preventDefault();
          this.decrementValue(key);
          break;

        case _keyCodes.RIGHT_ARROW:
        case _keyCodes.UP_ARROW:
          event.preventDefault();
          this.incrementValue(key);
          break;

        default:
          break;
      }
    }

    /**
     * Handle any "mousedown" event received by the track
     * @private
     * @param {SyntheticEvent} event
     * @param {Point} position
     * @return {void}
     */

  }, {
    key: 'handleTrackMouseDown',
    value: function handleTrackMouseDown(event, position) {
      if (this.props.disabled) {
        return;
      }

      var _props2 = this.props,
          maxValue = _props2.maxValue,
          minValue = _props2.minValue,
          _props2$value = _props2.value,
          max = _props2$value.max,
          min = _props2$value.min;


      event.preventDefault();

      var value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());
      var stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);

      if (!this.props.draggableTrack || stepValue > max || stepValue < min) {
        this.updatePosition(this.getKeyByPosition(position), position);
      }
    }

    /**
     * Handle the start of any mouse/touch event
     * @private
     * @return {void}
     */

  }, {
    key: 'handleInteractionStart',
    value: function handleInteractionStart() {
      if (this.props.onChangeStart) {
        this.props.onChangeStart(this.props.value);
      }

      if (this.props.onChangeComplete && !(0, _utils.isDefined)(this.startValue)) {
        this.startValue = this.props.value;
      }
    }

    /**
     * Handle the end of any mouse/touch event
     * @private
     * @return {void}
     */

  }, {
    key: 'handleInteractionEnd',
    value: function handleInteractionEnd() {
      if (this.isSliderDragging) {
        this.isSliderDragging = false;
      }

      if (!this.props.onChangeComplete || !(0, _utils.isDefined)(this.startValue)) {
        return;
      }

      if (this.startValue !== this.props.value) {
        this.props.onChangeComplete(this.props.value);
      }

      this.startValue = null;
    }

    /**
     * Handle any "keydown" event received by the component
     * @private
     * @param {SyntheticEvent} event
     * @return {void}
     */

  }, {
    key: 'handleKeyDown',
    value: function handleKeyDown(event) {
      this.handleInteractionStart(event);
    }

    /**
     * Handle any "keyup" event received by the component
     * @private
     * @param {SyntheticEvent} event
     * @return {void}
     */

  }, {
    key: 'handleKeyUp',
    value: function handleKeyUp(event) {
      this.handleInteractionEnd(event);
    }

    /**
     * Handle any "mousedown" event received by the component
     * @private
     * @param {SyntheticEvent} event
     * @return {void}
     */

  }, {
    key: 'handleMouseDown',
    value: function handleMouseDown(event) {
      this.handleInteractionStart(event);
      this.addDocumentMouseUpListener();
    }

    /**
     * Handle any "mouseup" event received by the component
     * @private
     * @param {SyntheticEvent} event
     */

  }, {
    key: 'handleMouseUp',
    value: function handleMouseUp(event) {
      this.handleInteractionEnd(event);
      this.removeDocumentMouseUpListener();
    }

    /**
     * Handle any "touchstart" event received by the component
     * @private
     * @param {SyntheticEvent} event
     * @return {void}
     */

  }, {
    key: 'handleTouchStart',
    value: function handleTouchStart(event) {
      this.handleInteractionStart(event);
      this.addDocumentTouchEndListener();
    }

    /**
     * Handle any "touchend" event received by the component
     * @private
     * @param {SyntheticEvent} event
     */

  }, {
    key: 'handleTouchEnd',
    value: function handleTouchEnd(event) {
      this.handleInteractionEnd(event);
      this.removeDocumentTouchEndListener();
    }

    /**
     * Return JSX of sliders
     * @private
     * @return {JSX.Element}
     */

  }, {
    key: 'renderSliders',
    value: function renderSliders() {
      var _this3 = this;

      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());
      var percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);
      var keys = this.props.allowSameValues && this.lastKeyMoved === 'min' ? this.getKeys().reverse() : this.getKeys();

      return keys.map(function (key) {
        var value = values[key];
        var percentage = percentages[key];

        var _props3 = _this3.props,
            maxValue = _props3.maxValue,
            minValue = _props3.minValue;


        if (key === 'min') {
          maxValue = values.max;
        } else {
          minValue = values.min;
        }

        var slider = _react2.default.createElement(_slider2.default, {
          ariaLabelledby: _this3.props.ariaLabelledby,
          ariaControls: _this3.props.ariaControls,
          classNames: _this3.props.classNames,
          formatLabel: _this3.props.formatLabel,
          key: key,
          maxValue: maxValue,
          minValue: minValue,
          onSliderDrag: _this3.handleSliderDrag,
          onSliderKeyDown: _this3.handleSliderKeyDown,
          percentage: percentage,
          type: key,
          value: value });

        return slider;
      });
    }

    /**
     * Return JSX of hidden inputs
     * @private
     * @return {JSX.Element}
     */

  }, {
    key: 'renderHiddenInputs',
    value: function renderHiddenInputs() {
      var _this4 = this;

      if (!this.props.name) {
        return [];
      }

      var isMultiValue = this.isMultiValue();
      var values = valueTransformer.getValueFromProps(this.props, isMultiValue);

      return this.getKeys().map(function (key) {
        var value = values[key];
        var name = isMultiValue ? '' + _this4.props.name + (0, _utils.captialize)(key) : _this4.props.name;

        return _react2.default.createElement('input', { key: key, type: 'hidden', name: name, value: value });
      });
    }

    /**
     * @ignore
     * @override
     * @return {JSX.Element}
     */

  }, {
    key: 'render',
    value: function render() {
      var _this5 = this;

      var componentClassName = this.getComponentClassName();
      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());
      var percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);

      return _react2.default.createElement(
        'div',
        {
          'aria-disabled': this.props.disabled,
          ref: function ref(node) {
            _this5.node = node;
          },
          className: componentClassName,
          onKeyDown: this.handleKeyDown,
          onKeyUp: this.handleKeyUp,
          onMouseDown: this.handleMouseDown,
          onTouchStart: this.handleTouchStart },
        _react2.default.createElement(
          _label2.default,
          {
            classNames: this.props.classNames,
            formatLabel: this.props.formatLabel,
            type: 'min' },
          this.props.minValue
        ),
        _react2.default.createElement(
          _track2.default,
          {
            classNames: this.props.classNames,
            draggableTrack: this.props.draggableTrack,
            ref: function ref(trackNode) {
              _this5.trackNode = trackNode;
            },
            percentages: percentages,
            onTrackDrag: this.handleTrackDrag,
            onTrackMouseDown: this.handleTrackMouseDown },
          this.renderSliders()
        ),
        _react2.default.createElement(
          _label2.default,
          {
            classNames: this.props.classNames,
            formatLabel: this.props.formatLabel,
            type: 'max' },
          this.props.maxValue
        ),
        this.renderHiddenInputs()
      );
    }
  }]);

  return InputRange;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleSliderDrag', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleSliderDrag'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTrackDrag', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTrackDrag'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleSliderKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleSliderKeyDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTrackMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTrackMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleInteractionStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleInteractionStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleInteractionEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleInteractionEnd'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchEnd'), _class.prototype)), _class);
exports.default = InputRange;
module.exports = exports['default'];
//# sourceMappingURL=input-range.js.map

/***/ }),

/***/ 1166:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.getPercentageFromPosition = getPercentageFromPosition;
exports.getValueFromPosition = getValueFromPosition;
exports.getValueFromProps = getValueFromProps;
exports.getPercentageFromValue = getPercentageFromValue;
exports.getPercentagesFromValues = getPercentagesFromValues;
exports.getPositionFromValue = getPositionFromValue;
exports.getPositionsFromValues = getPositionsFromValues;
exports.getPositionFromEvent = getPositionFromEvent;
exports.getStepValueFromValue = getStepValueFromValue;

var _utils = __webpack_require__(987);

/**
 * Convert a point into a percentage value
 * @ignore
 * @param {Point} position
 * @param {ClientRect} clientRect
 * @return {number} Percentage value
 */
function getPercentageFromPosition(position, clientRect) {
  var length = clientRect.width;
  var sizePerc = position.x / length;

  return sizePerc || 0;
}

/**
 * Convert a point into a model value
 * @ignore
 * @param {Point} position
 * @param {number} minValue
 * @param {number} maxValue
 * @param {ClientRect} clientRect
 * @return {number}
 */
function getValueFromPosition(position, minValue, maxValue, clientRect) {
  var sizePerc = getPercentageFromPosition(position, clientRect);
  var valueDiff = maxValue - minValue;

  return minValue + valueDiff * sizePerc;
}

/**
 * Convert props into a range value
 * @ignore
 * @param {Object} props
 * @param {boolean} isMultiValue
 * @return {Range}
 */
function getValueFromProps(props, isMultiValue) {
  if (isMultiValue) {
    return _extends({}, props.value);
  }

  return {
    min: props.minValue,
    max: props.value
  };
}

/**
 * Convert a model value into a percentage value
 * @ignore
 * @param {number} value
 * @param {number} minValue
 * @param {number} maxValue
 * @return {number}
 */
function getPercentageFromValue(value, minValue, maxValue) {
  var validValue = (0, _utils.clamp)(value, minValue, maxValue);
  var valueDiff = maxValue - minValue;
  var valuePerc = (validValue - minValue) / valueDiff;

  return valuePerc || 0;
}

/**
 * Convert model values into percentage values
 * @ignore
 * @param {Range} values
 * @param {number} minValue
 * @param {number} maxValue
 * @return {Range}
 */
function getPercentagesFromValues(values, minValue, maxValue) {
  return {
    min: getPercentageFromValue(values.min, minValue, maxValue),
    max: getPercentageFromValue(values.max, minValue, maxValue)
  };
}

/**
 * Convert a value into a point
 * @ignore
 * @param {number} value
 * @param {number} minValue
 * @param {number} maxValue
 * @param {ClientRect} clientRect
 * @return {Point} Position
 */
function getPositionFromValue(value, minValue, maxValue, clientRect) {
  var length = clientRect.width;
  var valuePerc = getPercentageFromValue(value, minValue, maxValue);
  var positionValue = valuePerc * length;

  return {
    x: positionValue,
    y: 0
  };
}

/**
 * Convert a range of values into points
 * @ignore
 * @param {Range} values
 * @param {number} minValue
 * @param {number} maxValue
 * @param {ClientRect} clientRect
 * @return {Range}
 */
function getPositionsFromValues(values, minValue, maxValue, clientRect) {
  return {
    min: getPositionFromValue(values.min, minValue, maxValue, clientRect),
    max: getPositionFromValue(values.max, minValue, maxValue, clientRect)
  };
}

/**
 * Convert an event into a point
 * @ignore
 * @param {Event} event
 * @param {ClientRect} clientRect
 * @return {Point}
 */
function getPositionFromEvent(event, clientRect) {
  var length = clientRect.width;

  var _ref = event.touches ? event.touches[0] : event,
      clientX = _ref.clientX;

  return {
    x: (0, _utils.clamp)(clientX - clientRect.left, 0, length),
    y: 0
  };
}

/**
 * Convert a value into a step value
 * @ignore
 * @param {number} value
 * @param {number} valuePerStep
 * @return {number}
 */
function getStepValueFromValue(value, valuePerStep) {
  return Math.round(value / valuePerStep) * valuePerStep;
}
//# sourceMappingURL=value-transformer.js.map

/***/ }),

/***/ 1167:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = captialize;
/**
 * Captialize a string
 * @ignore
 * @param {string} string
 * @return {string}
 */
function captialize(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}
module.exports = exports["default"];
//# sourceMappingURL=captialize.js.map

/***/ }),

/***/ 1168:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = clamp;
/**
 * Clamp a value between a min and max value
 * @ignore
 * @param {number} value
 * @param {number} min
 * @param {number} max
 * @return {number}
 */
function clamp(value, min, max) {
  return Math.min(Math.max(value, min), max);
}
module.exports = exports["default"];
//# sourceMappingURL=clamp.js.map

/***/ }),

/***/ 1169:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = distanceTo;
/**
 * Calculate the distance between pointA and pointB
 * @ignore
 * @param {Point} pointA
 * @param {Point} pointB
 * @return {number} Distance
 */
function distanceTo(pointA, pointB) {
  var xDiff = Math.pow(pointB.x - pointA.x, 2);
  var yDiff = Math.pow(pointB.y - pointA.y, 2);

  return Math.sqrt(xDiff + yDiff);
}
module.exports = exports["default"];
//# sourceMappingURL=distance-to.js.map

/***/ }),

/***/ 1170:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDefined;
/**
 * Check if a value is defined
 * @ignore
 * @param {*} value
 * @return {boolean}
 */
function isDefined(value) {
  return value !== undefined && value !== null;
}
module.exports = exports["default"];
//# sourceMappingURL=is-defined.js.map

/***/ }),

/***/ 1171:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isNumber;
/**
 * Check if a value is a number
 * @ignore
 * @param {*} value
 * @return {boolean}
 */
function isNumber(value) {
  return typeof value === 'number';
}
module.exports = exports['default'];
//# sourceMappingURL=is-number.js.map

/***/ }),

/***/ 1172:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isObject;
/**
 * Check if a value is an object
 * @ignore
 * @param {*} value
 * @return {boolean}
 */
function isObject(value) {
  return value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';
}
module.exports = exports['default'];
//# sourceMappingURL=is-object.js.map

/***/ }),

/***/ 1173:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = length;
/**
 * Calculate the absolute difference between two numbers
 * @ignore
 * @param {number} numA
 * @param {number} numB
 * @return {number}
 */
function length(numA, numB) {
  return Math.abs(numA - numB);
}
module.exports = exports["default"];
//# sourceMappingURL=length.js.map

/***/ }),

/***/ 1174:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Default CSS class names
 * @ignore
 * @type {InputRangeClassNames}
 */
var DEFAULT_CLASS_NAMES = {
  activeTrack: 'input-range__track input-range__track--active',
  disabledInputRange: 'input-range input-range--disabled',
  inputRange: 'input-range',
  labelContainer: 'input-range__label-container',
  maxLabel: 'input-range__label input-range__label--max',
  minLabel: 'input-range__label input-range__label--min',
  slider: 'input-range__slider',
  sliderContainer: 'input-range__slider-container',
  track: 'input-range__track input-range__track--background',
  valueLabel: 'input-range__label input-range__label--value'
};

exports.default = DEFAULT_CLASS_NAMES;
module.exports = exports['default'];
//# sourceMappingURL=default-class-names.js.map

/***/ }),

/***/ 1175:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rangePropType;

var _utils = __webpack_require__(987);

/**
 * @ignore
 * @param {Object} props - React component props
 * @return {?Error} Return Error if validation fails
 */
function rangePropType(props) {
  var maxValue = props.maxValue,
      minValue = props.minValue;


  if (!(0, _utils.isNumber)(minValue) || !(0, _utils.isNumber)(maxValue)) {
    return new Error('"minValue" and "maxValue" must be a number');
  }

  if (minValue >= maxValue) {
    return new Error('"minValue" must be smaller than "maxValue"');
  }
}
module.exports = exports['default'];
//# sourceMappingURL=range-prop-type.js.map

/***/ }),

/***/ 1176:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = valuePropType;

var _utils = __webpack_require__(987);

/**
 * @ignore
 * @param {Object} props
 * @return {?Error} Return Error if validation fails
 */
function valuePropType(props, propName) {
  var maxValue = props.maxValue,
      minValue = props.minValue;

  var value = props[propName];

  if (!(0, _utils.isNumber)(value) && (!(0, _utils.isObject)(value) || !(0, _utils.isNumber)(value.min) || !(0, _utils.isNumber)(value.max))) {
    return new Error('"' + propName + '" must be a number or a range object');
  }

  if ((0, _utils.isNumber)(value) && (value < minValue || value > maxValue)) {
    return new Error('"' + propName + '" must be in between "minValue" and "maxValue"');
  }

  if ((0, _utils.isObject)(value) && (value.min < minValue || value.min > maxValue || value.max < minValue || value.max > maxValue)) {
    return new Error('"' + propName + '" must be in between "minValue" and "maxValue"');
  }
}
module.exports = exports['default'];
//# sourceMappingURL=value-prop-type.js.map

/***/ }),

/***/ 1177:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _autobindDecorator = __webpack_require__(1040);

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _label = __webpack_require__(1070);

var _label2 = _interopRequireDefault(_label);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

/**
 * @ignore
 */
var Slider = (_class = function (_React$Component) {
  _inherits(Slider, _React$Component);

  _createClass(Slider, null, [{
    key: 'propTypes',

    /**
     * Accepted propTypes of Slider
     * @override
     * @return {Object}
     * @property {Function} ariaLabelledby
     * @property {Function} ariaControls
     * @property {Function} className
     * @property {Function} formatLabel
     * @property {Function} maxValue
     * @property {Function} minValue
     * @property {Function} onSliderDrag
     * @property {Function} onSliderKeyDown
     * @property {Function} percentage
     * @property {Function} type
     * @property {Function} value
     */
    get: function get() {
      return {
        ariaLabelledby: _propTypes2.default.string,
        ariaControls: _propTypes2.default.string,
        classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,
        formatLabel: _propTypes2.default.func,
        maxValue: _propTypes2.default.number,
        minValue: _propTypes2.default.number,
        onSliderDrag: _propTypes2.default.func.isRequired,
        onSliderKeyDown: _propTypes2.default.func.isRequired,
        percentage: _propTypes2.default.number.isRequired,
        type: _propTypes2.default.string.isRequired,
        value: _propTypes2.default.number.isRequired
      };
    }

    /**
     * @param {Object} props
     * @param {string} [props.ariaLabelledby]
     * @param {string} [props.ariaControls]
     * @param {InputRangeClassNames} props.classNames
     * @param {Function} [props.formatLabel]
     * @param {number} [props.maxValue]
     * @param {number} [props.minValue]
     * @param {Function} props.onSliderKeyDown
     * @param {Function} props.onSliderDrag
     * @param {number} props.percentage
     * @param {number} props.type
     * @param {number} props.value
     */

  }]);

  function Slider(props) {
    _classCallCheck(this, Slider);

    /**
     * @private
     * @type {?Component}
     */
    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));

    _this.node = null;
    return _this;
  }

  /**
   * @ignore
   * @override
   * @return {void}
   */


  _createClass(Slider, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.removeDocumentMouseMoveListener();
      this.removeDocumentMouseUpListener();
      this.removeDocumentTouchEndListener();
      this.removeDocumentTouchMoveListener();
    }

    /**
     * @private
     * @return {Object}
     */

  }, {
    key: 'getStyle',
    value: function getStyle() {
      var perc = (this.props.percentage || 0) * 100;
      var style = {
        position: 'absolute',
        left: perc + '%'
      };

      return style;
    }

    /**
     * Listen to mousemove event
     * @private
     * @return {void}
     */

  }, {
    key: 'addDocumentMouseMoveListener',
    value: function addDocumentMouseMoveListener() {
      this.removeDocumentMouseMoveListener();
      this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);
    }

    /**
     * Listen to mouseup event
     * @private
     * @return {void}
     */

  }, {
    key: 'addDocumentMouseUpListener',
    value: function addDocumentMouseUpListener() {
      this.removeDocumentMouseUpListener();
      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);
    }

    /**
     * Listen to touchmove event
     * @private
     * @return {void}
     */

  }, {
    key: 'addDocumentTouchMoveListener',
    value: function addDocumentTouchMoveListener() {
      this.removeDocumentTouchMoveListener();
      this.node.ownerDocument.addEventListener('touchmove', this.handleTouchMove);
    }

    /**
     * Listen to touchend event
     * @private
     * @return {void}
     */

  }, {
    key: 'addDocumentTouchEndListener',
    value: function addDocumentTouchEndListener() {
      this.removeDocumentTouchEndListener();
      this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'removeDocumentMouseMoveListener',
    value: function removeDocumentMouseMoveListener() {
      this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'removeDocumentMouseUpListener',
    value: function removeDocumentMouseUpListener() {
      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'removeDocumentTouchMoveListener',
    value: function removeDocumentTouchMoveListener() {
      this.node.ownerDocument.removeEventListener('touchmove', this.handleTouchMove);
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'removeDocumentTouchEndListener',
    value: function removeDocumentTouchEndListener() {
      this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'handleMouseDown',
    value: function handleMouseDown() {
      this.addDocumentMouseMoveListener();
      this.addDocumentMouseUpListener();
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'handleMouseUp',
    value: function handleMouseUp() {
      this.removeDocumentMouseMoveListener();
      this.removeDocumentMouseUpListener();
    }

    /**
     * @private
     * @param {SyntheticEvent} event
     * @return {void}
     */

  }, {
    key: 'handleMouseMove',
    value: function handleMouseMove(event) {
      this.props.onSliderDrag(event, this.props.type);
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'handleTouchStart',
    value: function handleTouchStart() {
      this.addDocumentTouchEndListener();
      this.addDocumentTouchMoveListener();
    }

    /**
     * @private
     * @param {SyntheticEvent} event
     * @return {void}
     */

  }, {
    key: 'handleTouchMove',
    value: function handleTouchMove(event) {
      this.props.onSliderDrag(event, this.props.type);
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'handleTouchEnd',
    value: function handleTouchEnd() {
      this.removeDocumentTouchMoveListener();
      this.removeDocumentTouchEndListener();
    }

    /**
     * @private
     * @param {SyntheticEvent} event
     * @return {void}
     */

  }, {
    key: 'handleKeyDown',
    value: function handleKeyDown(event) {
      this.props.onSliderKeyDown(event, this.props.type);
    }

    /**
     * @override
     * @return {JSX.Element}
     */

  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var style = this.getStyle();

      return _react2.default.createElement(
        'span',
        {
          className: this.props.classNames.sliderContainer,
          ref: function ref(node) {
            _this2.node = node;
          },
          style: style },
        _react2.default.createElement(
          _label2.default,
          {
            classNames: this.props.classNames,
            formatLabel: this.props.formatLabel,
            type: 'value' },
          this.props.value
        ),
        _react2.default.createElement('div', {
          'aria-labelledby': this.props.ariaLabelledby,
          'aria-controls': this.props.ariaControls,
          'aria-valuemax': this.props.maxValue,
          'aria-valuemin': this.props.minValue,
          'aria-valuenow': this.props.value,
          className: this.props.classNames.slider,
          draggable: 'false',
          onKeyDown: this.handleKeyDown,
          onMouseDown: this.handleMouseDown,
          onTouchStart: this.handleTouchStart,
          role: 'slider',
          tabIndex: '0' })
      );
    }
  }]);

  return Slider;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchEnd'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyDown'), _class.prototype)), _class);
exports.default = Slider;
module.exports = exports['default'];
//# sourceMappingURL=slider.js.map

/***/ }),

/***/ 1178:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _autobindDecorator = __webpack_require__(1040);

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

/**
 * @ignore
 */
var Track = (_class = function (_React$Component) {
  _inherits(Track, _React$Component);

  _createClass(Track, null, [{
    key: 'propTypes',

    /**
     * @override
     * @return {Object}
     * @property {Function} children
     * @property {Function} classNames
     * @property {Boolean} draggableTrack
     * @property {Function} onTrackDrag
     * @property {Function} onTrackMouseDown
     * @property {Function} percentages
     */
    get: function get() {
      return {
        children: _propTypes2.default.node.isRequired,
        classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,
        draggableTrack: _propTypes2.default.bool,
        onTrackDrag: _propTypes2.default.func,
        onTrackMouseDown: _propTypes2.default.func.isRequired,
        percentages: _propTypes2.default.objectOf(_propTypes2.default.number).isRequired
      };
    }

    /**
     * @param {Object} props
     * @param {InputRangeClassNames} props.classNames
     * @param {Boolean} props.draggableTrack
     * @param {Function} props.onTrackDrag
     * @param {Function} props.onTrackMouseDown
     * @param {number} props.percentages
     */

  }]);

  function Track(props) {
    _classCallCheck(this, Track);

    /**
     * @private
     * @type {?Component}
     */
    var _this = _possibleConstructorReturn(this, (Track.__proto__ || Object.getPrototypeOf(Track)).call(this, props));

    _this.node = null;
    _this.trackDragEvent = null;
    return _this;
  }

  /**
   * @private
   * @return {ClientRect}
   */


  _createClass(Track, [{
    key: 'getClientRect',
    value: function getClientRect() {
      return this.node.getBoundingClientRect();
    }

    /**
     * @private
     * @return {Object} CSS styles
     */

  }, {
    key: 'getActiveTrackStyle',
    value: function getActiveTrackStyle() {
      var width = (this.props.percentages.max - this.props.percentages.min) * 100 + '%';
      var left = this.props.percentages.min * 100 + '%';

      return { left: left, width: width };
    }

    /**
     * Listen to mousemove event
     * @private
     * @return {void}
     */

  }, {
    key: 'addDocumentMouseMoveListener',
    value: function addDocumentMouseMoveListener() {
      this.removeDocumentMouseMoveListener();
      this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);
    }

    /**
     * Listen to mouseup event
     * @private
     * @return {void}
     */

  }, {
    key: 'addDocumentMouseUpListener',
    value: function addDocumentMouseUpListener() {
      this.removeDocumentMouseUpListener();
      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'removeDocumentMouseMoveListener',
    value: function removeDocumentMouseMoveListener() {
      this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'removeDocumentMouseUpListener',
    value: function removeDocumentMouseUpListener() {
      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);
    }

    /**
     * @private
     * @param {SyntheticEvent} event
     * @return {void}
     */

  }, {
    key: 'handleMouseMove',
    value: function handleMouseMove(event) {
      if (!this.props.draggableTrack) {
        return;
      }

      if (this.trackDragEvent !== null) {
        this.props.onTrackDrag(event, this.trackDragEvent);
      }

      this.trackDragEvent = event;
    }

    /**
     * @private
     * @return {void}
     */

  }, {
    key: 'handleMouseUp',
    value: function handleMouseUp() {
      if (!this.props.draggableTrack) {
        return;
      }

      this.removeDocumentMouseMoveListener();
      this.removeDocumentMouseUpListener();
      this.trackDragEvent = null;
    }

    /**
     * @private
     * @param {SyntheticEvent} event - User event
     */

  }, {
    key: 'handleMouseDown',
    value: function handleMouseDown(event) {
      var clientX = event.touches ? event.touches[0].clientX : event.clientX;
      var trackClientRect = this.getClientRect();
      var position = {
        x: clientX - trackClientRect.left,
        y: 0
      };

      this.props.onTrackMouseDown(event, position);

      if (this.props.draggableTrack) {
        this.addDocumentMouseMoveListener();
        this.addDocumentMouseUpListener();
      }
    }

    /**
     * @private
     * @param {SyntheticEvent} event - User event
     */

  }, {
    key: 'handleTouchStart',
    value: function handleTouchStart(event) {
      event.preventDefault();

      this.handleMouseDown(event);
    }

    /**
     * @override
     * @return {JSX.Element}
     */

  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var activeTrackStyle = this.getActiveTrackStyle();

      return _react2.default.createElement(
        'div',
        {
          className: this.props.classNames.track,
          onMouseDown: this.handleMouseDown,
          onTouchStart: this.handleTouchStart,
          ref: function ref(node) {
            _this2.node = node;
          } },
        _react2.default.createElement('div', {
          style: activeTrackStyle,
          className: this.props.classNames.activeTrack }),
        this.props.children
      );
    }
  }]);

  return Track;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMouseMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype)), _class);
exports.default = Track;
module.exports = exports['default'];
//# sourceMappingURL=track.js.map

/***/ }),

/***/ 1179:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/** @ignore */
var DOWN_ARROW = exports.DOWN_ARROW = 40;

/** @ignore */
var LEFT_ARROW = exports.LEFT_ARROW = 37;

/** @ignore */
var RIGHT_ARROW = exports.RIGHT_ARROW = 39;

/** @ignore */
var UP_ARROW = exports.UP_ARROW = 38;
//# sourceMappingURL=key-codes.js.map

/***/ }),

/***/ 1180:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModalIfBadRatingMobile = function ModalIfBadRatingMobile(_ref) {
    var publishIfBadRating = _ref.publishIfBadRating,
        closeModal = _ref.closeModal;

    return _react2.default.createElement(
        "div",
        { className: "modal fade",
            id: "modalBadRating",
            tabIndex: "-1",
            role: "dialog",
            "aria-labelledby": "modalBadRating" },
        _react2.default.createElement(
            "div",
            { className: "modal-dialog", role: "document" },
            _react2.default.createElement(
                "div",
                { className: "modal-content" },
                _react2.default.createElement(
                    "div",
                    { className: "modal-body" },
                    _react2.default.createElement(
                        "form",
                        { name: "formIfBadRating", onSubmit: publishIfBadRating },
                        _react2.default.createElement(
                            "div",
                            { className: "wrapForm" },
                            _react2.default.createElement(
                                "div",
                                { className: "modal-title" },
                                _react2.default.createElement("img", { loading: "lazy", src: "/images/design/sad.svg", alt: "" })
                            ),
                            _react2.default.createElement(
                                "p",
                                { className: "head" },
                                "We are sorry to hear that, what could we change to do better?"
                            ),
                            _react2.default.createElement(
                                "label",
                                null,
                                _react2.default.createElement("input", { type: "radio", name: "feedbackStatus", value: "1", required: true }),
                                _react2.default.createElement("span", null),
                                "support (in store, mail or phone)"
                            ),
                            _react2.default.createElement(
                                "label",
                                null,
                                _react2.default.createElement("input", { type: "radio", name: "feedbackStatus", value: "2", required: true }),
                                _react2.default.createElement("span", null),
                                "Delivery (long waiting time or else)"
                            ),
                            _react2.default.createElement(
                                "label",
                                null,
                                _react2.default.createElement("input", { type: "radio", name: "feedbackStatus", value: "3", required: true }),
                                _react2.default.createElement("span", null),
                                "Condition (not as online stated, doa)"
                            ),
                            _react2.default.createElement(
                                "label",
                                null,
                                _react2.default.createElement("input", { type: "radio", name: "feedbackStatus", value: "4", required: true }),
                                _react2.default.createElement("span", null),
                                "Payment (pricing, problems with payment)"
                            ),
                            _react2.default.createElement(
                                "div",
                                { className: "message" },
                                _react2.default.createElement("input", { type: "text", name: "feedbackText", placeholder: "Additional Feedback..." })
                            )
                        ),
                        _react2.default.createElement(
                            "div",
                            { className: "buttons" },
                            _react2.default.createElement(
                                "button",
                                { onClick: closeModal,
                                    type: "button",
                                    className: "btn closeBtn",
                                    "data-dismiss": "modal",
                                    "aria-label": "Close" },
                                "Dismiss"
                            ),
                            _react2.default.createElement(
                                "button",
                                { className: "btn", onSubmit: publishIfBadRating },
                                "Publish"
                            )
                        )
                    )
                )
            )
        )
    );
};

ModalIfBadRatingMobile.propTypes = {};
ModalIfBadRatingMobile.defaultProps = {};

exports.default = ModalIfBadRatingMobile;

/***/ }),

/***/ 1181:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray2 = __webpack_require__(334);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactAnimatedCss = __webpack_require__(953);

var _reactRouter = __webpack_require__(206);

var _helpersFunction = __webpack_require__(315);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AdditionalInfoBlock = function AdditionalInfoBlock(_ref) {
    var model = _ref.model,
        deviceStatus = _ref.deviceStatus,
        basketData = _ref.basketData,
        addModelToBasket = _ref.addModelToBasket,
        domain = _ref.domain,
        warranty = _ref.warranty,
        isAccessory = _ref.isAccessory,
        deadline = _ref.deadline,
        activateCountDownCoupon = _ref.activateCountDownCoupon,
        deadlineIsActive = _ref.deadlineIsActive,
        deadlineExpired = _ref.deadlineExpired,
        deadlineTimer = _ref.deadlineTimer,
        _ref$className = _ref.className,
        className = _ref$className === undefined ? '' : _ref$className;

    var _useState = (0, _react.useState)(3),
        _useState2 = (0, _slicedToArray3.default)(_useState, 2),
        month = _useState2[0],
        setMonth = _useState2[1];

    var _useState3 = (0, _react.useState)(1),
        _useState4 = (0, _slicedToArray3.default)(_useState3, 2),
        rentMonth = _useState4[0],
        setRentMonth = _useState4[1];

    var _useState5 = (0, _react.useState)(20),
        _useState6 = (0, _slicedToArray3.default)(_useState5, 2),
        positionSlide = _useState6[0],
        setPositionSlide = _useState6[1];

    var _useState7 = (0, _react.useState)(10),
        _useState8 = (0, _slicedToArray3.default)(_useState7, 2),
        positionSlideRent = _useState8[0],
        setPositionSlideRent = _useState8[1];

    var _useState9 = (0, _react.useState)('00.00'),
        _useState10 = (0, _slicedToArray3.default)(_useState9, 2),
        monthPrice = _useState10[0],
        setMonthPrice = _useState10[1];

    var _useState11 = (0, _react.useState)(true),
        _useState12 = (0, _slicedToArray3.default)(_useState11, 2),
        firstLoaded = _useState12[0],
        setFirstLoaded = _useState12[1];

    var sellPrice = model.price;
    if (model.discountPrice) sellPrice = model.discountPrice;

    /*
    // disable this rule for swissbilling
    let showLevel = 0
    if (parseFloat(sellPrice) < 150 ) {
        showLevel = 0
    } else if (parseFloat(sellPrice) >= 150 && parseFloat(sellPrice) < 300) {
        showLevel = 1
    } else if (parseFloat(sellPrice) >= 300 && parseFloat(sellPrice) < 600) {
        showLevel = 2
    } else if (parseFloat(sellPrice) >= 600) {
        showLevel = 3
    }
    */

    var showLevel = 3;

    (0, _react.useEffect)(function () {
        setMonthPrice((sellPrice / showLevel).toFixed(2));
    }, [showLevel, sellPrice]);

    // This is for hedipay

    // if not device, use original logic
    // if (model.productTypeId !== 7 && model.productTypeId !== 4) {
    //     showLevel = 0
    // }


    function _calculateDeliveryDateShop() {
        var nowDate = new Date(),
            dayOfWeek = nowDate.getDay(),
            hour = nowDate.getHours(),
            minutes = nowDate.getMinutes(),
            deliveryDate = null,
            formatter = new Intl.DateTimeFormat("ru");
        switch (dayOfWeek) {
            case 6:
                if (hour < 18 || hour === 18 && minutes === 0) {
                    deliveryDate = formatter.format(nowDate);
                } else {
                    deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 2));
                }
                break;
            case 0:
                deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 1));
                break;
            default:
                if (hour < 18 || hour === 18 && minutes <= 30) {
                    deliveryDate = formatter.format(nowDate);
                } else {
                    deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 1));
                }

        }
        return deliveryDate;
    }
    function _calculateDeliveryDateHome() {
        var nowDate = new Date(),
            dayOfWeek = nowDate.getDay(),
            hour = nowDate.getHours(),
            minutes = nowDate.getMinutes(),
            deliveryDate = null,
            formatter = new Intl.DateTimeFormat("ru");
        if (dayOfWeek >= 1 && dayOfWeek <= 4 && hour < 15) {
            deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 1));
        }
        if (dayOfWeek >= 1 && dayOfWeek <= 3) {
            if (hour >= 15) {
                deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 2));
            }
        }
        if (dayOfWeek === 4 && hour >= 15) {
            deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 4));
        }
        if (dayOfWeek === 5) {
            if (hour < 15) deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 3));
            if (hour >= 15) deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 4));
        }
        if (dayOfWeek === 6) {
            deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 3));
        }
        if (dayOfWeek === 0) {
            deliveryDate = formatter.format(new Date(nowDate).setDate(nowDate.getDate() + 2));
        }
        return deliveryDate;
    }
    var shopDeliveryDate = _calculateDeliveryDateShop(),
        homeDeliveryDate = _calculateDeliveryDateHome();

    var handleChangeMonth = function handleChangeMonth(month) {
        setMonth(month);
        setMonthPrice((sellPrice / month).toFixed(2));
        if (parseFloat(showLevel) === 2) {
            if (month === 3) {
                setPositionSlide(20);
            } else {
                setPositionSlide(175);
            }
        } else if (parseFloat(showLevel) === 3) {
            if (month === 3) {
                setPositionSlide(20);
            } else if (month === 6) {
                setPositionSlide(95);
            } else {
                setPositionSlide(175);
            }
        }
    };

    var handleChangeRentMonth = function handleChangeRentMonth(month) {
        setRentMonth(month);
        if (month == 1) setPositionSlideRent(10);else if (month == 12) setPositionSlideRent(60 * 3);else setPositionSlideRent(60 * month / 3);
    };

    var handleAddProductToBasket = function handleAddProductToBasket(e, model) {
        addModelToBasket(e, model);
        $("#addProductToBasket").addClass('added');
        setTimeout(function () {
            $("#addProductToBasket").removeClass('added');
        }, 1800);
    };

    var handleAddModelToBasket = function handleAddModelToBasket(e, model) {
        setFirstLoaded(false);
        addModelToBasket(e, model);
    };

    return _react2.default.createElement(
        'div',
        { className: 'col-md-3 additionalInfo ' + className },
        _react2.default.createElement(
            'div',
            { className: 'additionalInfoWrapper' },
            parseFloat(showLevel) <= 0 && _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'p',
                    { className: 'head head-price' },
                    'preis'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'price-wrap' },
                    model.discountPrice && _react2.default.createElement(
                        'p',
                        { className: 'price discount-price' },
                        (0, _helpersFunction.formatPrice)(model.discountPrice),
                        ' ',
                        window.currencyValue
                    ),
                    _react2.default.createElement(
                        'p',
                        { className: model.discountPrice ? 'price old-price' : 'price', 'data-price-amount': (0, _helpersFunction.formatPrice)(model.price) },
                        (0, _helpersFunction.formatPrice)(model.price),
                        ' ',
                        window.currencyValue
                    )
                )
            ),
            parseFloat(showLevel) > 0 && _react2.default.createElement(
                'div',
                { className: 'priceInfo' },
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'div',
                        { className: 'installment-payment' },
                        _react2.default.createElement(
                            'h3',
                            { className: 'title' },
                            'Ratenzahlung / per Rechnung',
                            _react2.default.createElement(
                                'div',
                                { className: 'question-sign' },
                                _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/bi_question-circle.svg', alt: '' }),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'info-icon-text' },
                                    'Sie k\xF6nnen den Kaufpreis in mehreren Monatsraten bezahlen ohne zus\xE4tzliche Zinskosten!'
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'h3',
                            { className: 'description' },
                            'bezahlen Sie bequem monatlich'
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'cost' },
                        _react2.default.createElement(
                            'h4',
                            null,
                            (0, _helpersFunction.formatPrice)(monthPrice),
                            ' CHF'
                        ),
                        _react2.default.createElement(
                            'span',
                            null,
                            'x ',
                            month,
                            ' Monate'
                        ),
                        _react2.default.createElement(
                            'p',
                            null,
                            'Sie k\xF6nnen diesen Betrag ganz einfach per Einzahlungschein oder Kreditkarte bezahlen. ',
                            _react2.default.createElement(
                                'strong',
                                null,
                                'Jetzt mit 0%-Zinszahlung!'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'per-month-tab' },
                        _react2.default.createElement(
                            'div',
                            { className: 'slide-toggle', style: { transform: 'translate(' + positionSlide + 'px, 0)' } },
                            month,
                            ' ',
                            _react2.default.createElement(
                                'span',
                                null,
                                'Monate'
                            )
                        ),
                        parseFloat(showLevel) >= 1 && _react2.default.createElement(
                            'div',
                            { className: 'month-panel', onClick: function onClick() {
                                    return handleChangeMonth(3);
                                } },
                            _react2.default.createElement(
                                'div',
                                { className: 'month-desc' },
                                '3'
                            )
                        ),
                        parseFloat(showLevel) >= 2 && _react2.default.createElement(
                            'div',
                            { className: 'month-panel', onClick: function onClick() {
                                    return handleChangeMonth(6);
                                } },
                            _react2.default.createElement(
                                'div',
                                { className: 'month-desc' },
                                '6'
                            )
                        ),
                        parseFloat(showLevel) >= 3 && _react2.default.createElement(
                            'div',
                            { className: 'month-panel', onClick: function onClick() {
                                    return handleChangeMonth(12);
                                } },
                            _react2.default.createElement(
                                'div',
                                { className: 'month-desc' },
                                '12'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'or-panel' },
                        _react2.default.createElement('div', { className: 'vector-3' }),
                        _react2.default.createElement(
                            'span',
                            { className: 'or' },
                            'oder'
                        ),
                        _react2.default.createElement('div', { className: 'vector-4' })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'one-time-price' },
                        _react2.default.createElement(
                            'h3',
                            { className: 'title' },
                            'Sofort-Kaufen Preis'
                        ),
                        _react2.default.createElement(
                            'h3',
                            { className: 'description' },
                            'ohne Ratenzahlung'
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'div',
                        { className: 'price-wrap' },
                        model.discountPrice && _react2.default.createElement(
                            'p',
                            { className: 'price discount-price' },
                            (0, _helpersFunction.formatPrice)(model.discountPrice),
                            ' ',
                            window.currencyValue
                        ),
                        _react2.default.createElement(
                            'p',
                            { className: model.discountPrice ? 'price old-price' : 'price', 'data-price-amount': (0, _helpersFunction.formatPrice)(model.price) },
                            (0, _helpersFunction.formatPrice)(model.price),
                            ' ',
                            window.currencyValue
                        )
                    )
                )
            ),
            !window.isMobile && deviceStatus.statusId === 1 && isAccessory && model.quantity > 0 && _react2.default.createElement(
                'button',
                {
                    'data-status': 'out',
                    'data-source': 'accessoryDetailPage',
                    className: 'btn addToBasket pulsing add-to-cart add-Product-To-Basket',
                    onClick: function onClick(e) {
                        return handleAddProductToBasket(e, model);
                    } },
                _react2.default.createElement(
                    'div',
                    { className: 'default' },
                    'Zum Warenkorb hinzuf\xFCgen'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'success' },
                    'Zum Warenkorb hinzuf\xFCgen'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'cart' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement('div', null),
                        _react2.default.createElement('div', null)
                    )
                ),
                _react2.default.createElement('div', { className: 'dots' })
            ),
            !window.isMobile && deviceStatus.statusId === 1 && !isAccessory && _react2.default.createElement(
                'button',
                { 'data-status': basketData.some(function (item) {
                        return item.shortcode === model.shortcode;
                    }) ? 'in' : 'out',
                    'data-source': 'quickViewPage',
                    className: !basketData.some(function (item) {
                        return item.shortcode === model.shortcode;
                    }) ? 'btn addToBasket pulsing add-to-cart' : !firstLoaded ? 'btn addToBasket pulsing add-to-cart added' : 'btn addToBasket pulsing add-to-cart added noEffect',
                    onClick: function onClick(e) {
                        return handleAddModelToBasket(e, model);
                    } },
                _react2.default.createElement(
                    'div',
                    { className: 'default' },
                    'Zum Warenkorb hinzuf\xFCgen'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'success' },
                    'Vom Warenkorb entfernen'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'cart' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement('div', null),
                        _react2.default.createElement('div', null)
                    )
                ),
                _react2.default.createElement('div', { className: 'dots' })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'additionalInfoWrapper renting' },
            parseFloat(showLevel) > 0 && model.productTypeId !== 4 && _react2.default.createElement(
                'div',
                { className: 'priceInfo' },
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'div',
                        { className: 'installment-payment' },
                        _react2.default.createElement(
                            'h3',
                            { className: 'title' },
                            'Mieten',
                            _react2.default.createElement(
                                'div',
                                { className: 'question-sign' },
                                _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/bi_question-circle.svg', alt: '' })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'cost' },
                        _react2.default.createElement(
                            'h4',
                            null,
                            '69.00 CHF'
                        ),
                        _react2.default.createElement(
                            'span',
                            null,
                            'pro Monat'
                        ),
                        _react2.default.createElement(
                            'p',
                            null,
                            'Mietdauer f\xFCr 3 Monate, danach monatlich k\xFCndbar'
                        ),
                        _react2.default.createElement(
                            'p',
                            null,
                            'W\xE4hle deine ',
                            _react2.default.createElement(
                                'strong',
                                null,
                                'deine Mindestmietdauer'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'per-month-tab' },
                        _react2.default.createElement(
                            'div',
                            { className: 'slide-toggle', style: { transform: 'translate(' + positionSlideRent + 'px, 0)' } },
                            rentMonth,
                            ' ',
                            _react2.default.createElement(
                                'span',
                                null,
                                'Monate'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'month-panel', onClick: function onClick() {
                                    return handleChangeRentMonth(1);
                                } },
                            _react2.default.createElement(
                                'div',
                                { className: 'month-desc' },
                                '1 ',
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'Monate'
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'month-panel', onClick: function onClick() {
                                    return handleChangeRentMonth(3);
                                } },
                            _react2.default.createElement(
                                'div',
                                { className: 'month-desc' },
                                '3 ',
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'Monate'
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'month-panel', onClick: function onClick() {
                                    return handleChangeRentMonth(6);
                                } },
                            _react2.default.createElement(
                                'div',
                                { className: 'month-desc' },
                                '6 ',
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'Monate'
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'month-panel', onClick: function onClick() {
                                    return handleChangeRentMonth(12);
                                } },
                            _react2.default.createElement(
                                'div',
                                { className: 'month-desc' },
                                '12 ',
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'Monate'
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'rent-details' },
                    _react2.default.createElement(
                        'div',
                        { className: 'item' },
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/rent-icon1.svg', alt: '' }),
                        _react2.default.createElement(
                            'p',
                            null,
                            _react2.default.createElement(
                                'strong',
                                null,
                                'GRATIS'
                            ),
                            ' ',
                            _react2.default.createElement(
                                'span',
                                null,
                                'remarket Care'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'item' },
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/rent-icon2.svg', alt: '' }),
                        _react2.default.createElement(
                            'p',
                            null,
                            'Beinhaltet ',
                            _react2.default.createElement(
                                'span',
                                null,
                                'Kaufoption'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'item' },
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/rent-icon3.svg', alt: '' }),
                        _react2.default.createElement(
                            'p',
                            null,
                            'Lieferug 1-3 Werktage'
                        )
                    )
                )
            ),
            parseFloat(showLevel) > 0 && model.productTypeId !== 4 && _react2.default.createElement(
                'div',
                {
                    'data-status': 'out',
                    'data-source': 'accessoryDetailPage',
                    className: 'btn addToRent pulsing'
                },
                'JETZT MIETEN F\xDCR 3 MONATE'
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'delivery-pay-blocks' },
            (isAccessory && model.quantity > 0 || !isAccessory) && _react2.default.createElement(
                'div',
                { className: 'deliveryBlock' },
                _react2.default.createElement(
                    'h3',
                    { className: 'title' },
                    'Voraussichtliche Lieferung',
                    _react2.default.createElement(
                        'div',
                        { className: 'question-sign' },
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/bi_question-circle.svg', alt: '' }),
                        _react2.default.createElement(
                            'div',
                            { className: 'info-icon-text' },
                            'Die voraussichtlichen Lieferzeiten beziehen sich auf sofortige Zahlungsmethoden wie Kreditkarte, E-Payment (Postfinance), PayPal und kann bei der Zahlungsmethode Vorauskasse nicht angewendet werden.'
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'date-item' },
                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/delivery-icon1.svg', alt: '' }),
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'p',
                            { className: 'date' },
                            shopDeliveryDate
                        ),
                        _react2.default.createElement(
                            'p',
                            { className: 'title' },
                            _react2.default.createElement(
                                'strong',
                                null,
                                'bei Abholung in der Filiale ',
                                model.placeDescription
                            ),
                            _react2.default.createElement(
                                'span',
                                { className: 'speedy' },
                                'EXPRESS'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'date-item' },
                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/delivery-icon2.svg', alt: '' }),
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'p',
                            { className: 'date delivery-date' },
                            'ca. ',
                            homeDeliveryDate
                        ),
                        _react2.default.createElement(
                            'p',
                            { className: 'title' },
                            _react2.default.createElement(
                                'strong',
                                null,
                                'bei Postversand'
                            )
                        )
                    )
                )
            ),
            _react2.default.createElement('span', { className: 'separator-line' }),
            _react2.default.createElement(
                'div',
                { className: 'pays' },
                _react2.default.createElement(
                    'ul',
                    { className: 'pay-icons' },
                    _react2.default.createElement(
                        'li',
                        null,
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/visa.svg', alt: '' })
                    ),
                    _react2.default.createElement(
                        'li',
                        null,
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/mastercard.svg', alt: '' })
                    ),
                    _react2.default.createElement(
                        'li',
                        null,
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/paypal.svg', alt: '' })
                    ),
                    domain !== 'de' && _react2.default.createElement(
                        'li',
                        null,
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/postfinance.svg', alt: '' })
                    ),
                    domain !== 'de' && _react2.default.createElement(
                        'li',
                        null,
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/twint.svg', alt: '' })
                    ),
                    domain !== 'ch' && _react2.default.createElement(
                        'li',
                        null,
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/stripe.svg', alt: '' })
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'pay-services' },
                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/swissbilling.png' }),
                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/heidipay.svg' })
                )
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'installments-block' },
            _react2.default.createElement(
                'div',
                { className: 'installments-block-badge' },
                'NEU'
            ),
            _react2.default.createElement(
                'h3',
                null,
                'Rechnung und Ratenzahlung',
                _react2.default.createElement(
                    'strong',
                    null,
                    'Jetzt mit 0% Zinszahlung'
                )
            )
        ),
        deviceStatus.boughtCurrentUser && deviceStatus.statusId != 1 && deviceStatus.statusId != null && _react2.default.createElement(
            'p',
            { className: 'boughtDevice' },
            'Sie haben diesen Artikel am ',
            deviceStatus.dateOfBought,
            ' erworben'
        ),
        !deviceStatus.boughtCurrentUser && deviceStatus.statusId != 1 && deviceStatus.statusId !== null && _react2.default.createElement(
            'p',
            { className: 'boughtDevice' },
            'Dieser Artikel ist leider nicht mehr verf\xFCgbar, da dieser schon verkauft wurde'
        )
    );
};

AdditionalInfoBlock.propTypes = {};
AdditionalInfoBlock.defaultProps = {};

exports.default = AdditionalInfoBlock;

/***/ }),

/***/ 1182:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SoldoutInfoBlock = function SoldoutInfoBlock(_ref) {
    var _ref$className = _ref.className,
        className = _ref$className === undefined ? '' : _ref$className;

    return _react2.default.createElement(
        'div',
        { className: 'col-md-3 additionalInfo ' + className },
        _react2.default.createElement(
            'div',
            { className: 'additionalInfoWrapper' },
            _react2.default.createElement(
                'div',
                { className: 'soldoutInfo' },
                _react2.default.createElement(
                    'div',
                    { className: 'title' },
                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/soldout.png', alt: '' }),
                    _react2.default.createElement(
                        'span',
                        null,
                        'Ausverkauft'
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'desc' },
                    'Leider ist dieser Artikel in der Zwischenzeit verkauft worden'
                )
            )
        )
    );
};

SoldoutInfoBlock.propTypes = {};
SoldoutInfoBlock.defaultProps = {};

exports.default = SoldoutInfoBlock;

/***/ }),

/***/ 1183:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactHelmet = __webpack_require__(1057);

var _lightboxImg = __webpack_require__(1062);

var _lightboxImg2 = _interopRequireDefault(_lightboxImg);

var _reactSlick = __webpack_require__(929);

var _reactSlick2 = _interopRequireDefault(_reactSlick);

__webpack_require__(1104);

__webpack_require__(1106);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SampleNextArrow(props) {
  var className = props.className,
      style = props.style,
      onClick = props.onClick;

  return _react2.default.createElement(
    'div',
    {
      className: className,
      style: (0, _extends3.default)({}, style),
      onClick: onClick
    },
    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/slick-arrow.svg', alt: '' })
  );
}

function SamplePrevArrow(props) {
  var className = props.className,
      style = props.style,
      onClick = props.onClick;

  return _react2.default.createElement(
    'div',
    {
      className: className,
      style: (0, _extends3.default)({}, style),
      onClick: onClick
    },
    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/slick-arrow.svg', alt: '' })
  );
}

var ModelInfoBlockImage = function (_Component) {
  (0, _inherits3.default)(ModelInfoBlockImage, _Component);

  function ModelInfoBlockImage(props) {
    (0, _classCallCheck3.default)(this, ModelInfoBlockImage);

    var _this = (0, _possibleConstructorReturn3.default)(this, (ModelInfoBlockImage.__proto__ || Object.getPrototypeOf(ModelInfoBlockImage)).call(this, props));

    _this.state = {
      dimensions: {},
      nav1: null,
      nav2: null
    };
    _this.onImgLoad = _this.onImgLoad.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(ModelInfoBlockImage, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      $('.zoomContainer').remove();
      $('#zoom_01').elevateZoom({ zoomType: "inner" });
      if (this.props.quickPreview) $('#app').addClass('quickPreview');
      this.setState({
        nav1: this.slider1,
        nav2: this.slider2
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      $('.zoomContainer').remove();
      $('#app').removeClass('quickPreview');
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(nextProps) {
      if (nextProps.blockImageState.currentMainImage !== this.props.blockImageState.currentMainImage) {
        $('.zoomContainer').remove();
        $('#zoom_01').elevateZoom({ zoomType: "inner" });
      }
    }
  }, {
    key: 'mapRealImg',
    value: function mapRealImg(item, i) {
      var altTitle = this.props.altTitle;

      var className = this.props.blockImageState.currentMainImage === item.src ? "col-xs-3 modelInfoBlock-img-small active" : "col-xs-3 modelInfoBlock-img-small";
      return _react2.default.createElement(
        'div',
        { className: className, key: i },
        _react2.default.createElement('img', { loading: 'lazy', src: item.src, onClick: this.props.clickSmallImg, alt: altTitle + ' - Teil ' + (i + 2) })
      );
    }
  }, {
    key: 'onImgLoad',
    value: function onImgLoad(_ref) {
      var img = _ref.target;

      this.setState({ dimensions: { imgHeight: img.naturalHeight,
          imgWidth: img.naturalWidth } });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var settings = {
        infinite: false,
        speed: 500,
        slidesToShow: 1,
        slidesToScroll: 1,
        swipeToSlide: true,
        arrows: true,
        nextArrow: _react2.default.createElement(SampleNextArrow, null),
        prevArrow: _react2.default.createElement(SamplePrevArrow, null),
        responsive: [{
          breakpoint: 768,
          settings: {
            slidesToShow: 1,
            infinite: true
          }
        }]
      };
      var settingsSmallImg = {
        infinite: false,
        speed: 500,
        slidesToScroll: 1,
        swipeToSlide: true,
        arrows: true,
        nextArrow: _react2.default.createElement(SampleNextArrow, null),
        prevArrow: _react2.default.createElement(SamplePrevArrow, null),
        focusOnSelect: true,
        variableWidth: true,
        responsive: [{
          breakpoint: 768,
          settings: {
            infinite: true
          }
        }]
      };
      var _props = this.props,
          image = _props.image,
          clickSmallImg = _props.clickSmallImg,
          openLightBox = _props.openLightBox,
          closeLightBox = _props.closeLightBox,
          blockImageState = _props.blockImageState,
          showDescription = _props.showDescription,
          altTitle = _props.altTitle,
          addModelToWishlist = _props.addModelToWishlist,
          productIsAddedToWishlist = _props.productIsAddedToWishlist;
      var _state$dimensions = this.state.dimensions,
          imgHeight = _state$dimensions.imgHeight,
          imgWidth = _state$dimensions.imgWidth;

      var className = blockImageState.currentMainImage === image.mainImg.src ? "col-xs-3 modelInfoBlock-img-small" : "col-xs-3 modelInfoBlock-img-small";

      return _react2.default.createElement(
        'div',
        { className: 'col-md-6 modelInfoBlock-img ' },
        _react2.default.createElement(_reactHelmet.Helmet, {
          meta: [{ "property": "og:image:width", "content": imgWidth }, { "property": "og:image:height", "content": imgHeight }]
        }),
        _react2.default.createElement(
          'div',
          { className: 'row imageDetailOnly' },
          image.realImg.length ? _react2.default.createElement(
            _reactSlick2.default,
            (0, _extends3.default)({ asNavFor: this.state.nav2,
              ref: function ref(slider) {
                return _this2.slider1 = slider;
              }
            }, settings),
            image.realImg.length > 0 && image.realImg.map(function (el, i) {
              return _react2.default.createElement(
                'div',
                { className: 'item', key: 'slider-item' + i },
                _react2.default.createElement(
                  'div',
                  { className: 'col-md-12 modelInfoBlock-img-big' },
                  _react2.default.createElement('img', { loading: 'lazy', onLoad: _this2.onImgLoad,
                    onClick: openLightBox,
                    src: el.src, alt: altTitle }),
                  _react2.default.createElement(
                    'i',
                    { className: 'modelInfoBlock-img-big-searchBtn',
                      onClick: openLightBox,
                      'aria-hidden': 'true' },
                    _react2.default.createElement(
                      'svg',
                      { width: '30', height: '30', viewBox: '0 0 30 30', fill: 'none',
                        xmlns: 'http://www.w3.org/2000/svg' },
                      _react2.default.createElement('path', {
                        d: 'M27.8527 26.5212L20.1089 18.7493C21.8011 16.7076 22.6417 14.0926 22.4562 11.4473C22.2707 8.80207 21.0733 6.32994 19.1128 4.54439C17.1523 2.75885 14.5793 1.79714 11.9283 1.85901C9.27729 1.92089 6.75198 3.0016 4.87691 4.87667C3.00184 6.75173 1.92113 9.27704 1.85926 11.9281C1.79738 14.5791 2.75909 17.1521 4.54464 19.1126C6.33018 21.0731 8.80232 22.2704 11.4476 22.4559C14.0928 22.6414 16.7079 21.8008 18.7496 20.1087L26.4933 27.8524C26.6698 28.029 26.9093 28.1281 27.1589 28.1281C27.4086 28.1281 27.648 28.029 27.8246 27.8524C28.0011 27.6759 28.1003 27.4365 28.1003 27.1868C28.1003 26.9372 28.0011 26.6977 27.8246 26.5212H27.8527ZM3.74955 12.1868C3.74955 10.518 4.2444 8.88672 5.17153 7.49919C6.09865 6.11165 7.41641 5.03019 8.95816 4.39158C10.4999 3.75296 12.1964 3.58587 13.8331 3.91143C15.4698 4.237 16.9733 5.04059 18.1533 6.2206C19.3333 7.4006 20.1369 8.90402 20.4624 10.5407C20.788 12.1774 20.6209 13.8739 19.9823 15.4157C19.3437 16.9575 18.2622 18.2752 16.8747 19.2023C15.4871 20.1295 13.8558 20.6243 12.1871 20.6243C9.94929 20.6243 7.80318 19.7354 6.22084 18.153C4.6385 16.5707 3.74955 14.4246 3.74955 12.1868Z',
                        fill: '#BED3CB' }),
                      _react2.default.createElement('path', {
                        d: 'M15.9375 11.25H13.125V8.4375C13.125 8.18886 13.0262 7.9504 12.8504 7.77459C12.6746 7.59877 12.4361 7.5 12.1875 7.5C11.9389 7.5 11.7004 7.59877 11.5246 7.77459C11.3488 7.9504 11.25 8.18886 11.25 8.4375V11.25H8.4375C8.18886 11.25 7.9504 11.3488 7.77459 11.5246C7.59877 11.7004 7.5 11.9389 7.5 12.1875C7.5 12.4361 7.59877 12.6746 7.77459 12.8504C7.9504 13.0262 8.18886 13.125 8.4375 13.125H11.25V15.9375C11.25 16.1861 11.3488 16.4246 11.5246 16.6004C11.7004 16.7762 11.9389 16.875 12.1875 16.875C12.4361 16.875 12.6746 16.7762 12.8504 16.6004C13.0262 16.4246 13.125 16.1861 13.125 15.9375V13.125H15.9375C16.1861 13.125 16.4246 13.0262 16.6004 12.8504C16.7762 12.6746 16.875 12.4361 16.875 12.1875C16.875 11.9389 16.7762 11.7004 16.6004 11.5246C16.4246 11.3488 16.1861 11.25 15.9375 11.25Z',
                        fill: '#BED3CB' })
                    )
                  ),
                  _react2.default.createElement(
                    'i',
                    { className: productIsAddedToWishlist ? 'modelInfoBlock-img-big-wishBtn on' : 'modelInfoBlock-img-big-wishBtn',
                      onClick: function onClick(e) {
                        return addModelToWishlist(e);
                      } },
                    _react2.default.createElement(
                      'svg',
                      { viewBox: '0 0 24 24' },
                      _react2.default.createElement('use', { href: '#heart' }),
                      _react2.default.createElement('use', { href: '#heart' })
                    ),
                    _react2.default.createElement(
                      'svg',
                      { className: 'hide', viewBox: '0 0 24 24' },
                      _react2.default.createElement(
                        'defs',
                        null,
                        _react2.default.createElement('path', { id: 'heart', d: 'M12 4.435c-1.989-5.399-12-4.597-12 3.568 0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-8.118-10-8.999-12-3.568z' })
                      )
                    )
                  )
                )
              );
            })
          ) : _react2.default.createElement(
            'div',
            { className: 'col-md-12 modelInfoBlock-img-big' },
            _react2.default.createElement('img', { loading: 'lazy', onLoad: this.onImgLoad,
              onClick: openLightBox,
              src: image.mainImg.src, alt: altTitle }),
            _react2.default.createElement(
              'i',
              { className: 'modelInfoBlock-img-big-searchBtn',
                onClick: openLightBox,
                'aria-hidden': 'true' },
              _react2.default.createElement(
                'svg',
                { width: '30', height: '30', viewBox: '0 0 30 30', fill: 'none',
                  xmlns: 'http://www.w3.org/2000/svg' },
                _react2.default.createElement('path', {
                  d: 'M27.8527 26.5212L20.1089 18.7493C21.8011 16.7076 22.6417 14.0926 22.4562 11.4473C22.2707 8.80207 21.0733 6.32994 19.1128 4.54439C17.1523 2.75885 14.5793 1.79714 11.9283 1.85901C9.27729 1.92089 6.75198 3.0016 4.87691 4.87667C3.00184 6.75173 1.92113 9.27704 1.85926 11.9281C1.79738 14.5791 2.75909 17.1521 4.54464 19.1126C6.33018 21.0731 8.80232 22.2704 11.4476 22.4559C14.0928 22.6414 16.7079 21.8008 18.7496 20.1087L26.4933 27.8524C26.6698 28.029 26.9093 28.1281 27.1589 28.1281C27.4086 28.1281 27.648 28.029 27.8246 27.8524C28.0011 27.6759 28.1003 27.4365 28.1003 27.1868C28.1003 26.9372 28.0011 26.6977 27.8246 26.5212H27.8527ZM3.74955 12.1868C3.74955 10.518 4.2444 8.88672 5.17153 7.49919C6.09865 6.11165 7.41641 5.03019 8.95816 4.39158C10.4999 3.75296 12.1964 3.58587 13.8331 3.91143C15.4698 4.237 16.9733 5.04059 18.1533 6.2206C19.3333 7.4006 20.1369 8.90402 20.4624 10.5407C20.788 12.1774 20.6209 13.8739 19.9823 15.4157C19.3437 16.9575 18.2622 18.2752 16.8747 19.2023C15.4871 20.1295 13.8558 20.6243 12.1871 20.6243C9.94929 20.6243 7.80318 19.7354 6.22084 18.153C4.6385 16.5707 3.74955 14.4246 3.74955 12.1868Z',
                  fill: '#BED3CB' }),
                _react2.default.createElement('path', {
                  d: 'M15.9375 11.25H13.125V8.4375C13.125 8.18886 13.0262 7.9504 12.8504 7.77459C12.6746 7.59877 12.4361 7.5 12.1875 7.5C11.9389 7.5 11.7004 7.59877 11.5246 7.77459C11.3488 7.9504 11.25 8.18886 11.25 8.4375V11.25H8.4375C8.18886 11.25 7.9504 11.3488 7.77459 11.5246C7.59877 11.7004 7.5 11.9389 7.5 12.1875C7.5 12.4361 7.59877 12.6746 7.77459 12.8504C7.9504 13.0262 8.18886 13.125 8.4375 13.125H11.25V15.9375C11.25 16.1861 11.3488 16.4246 11.5246 16.6004C11.7004 16.7762 11.9389 16.875 12.1875 16.875C12.4361 16.875 12.6746 16.7762 12.8504 16.6004C13.0262 16.4246 13.125 16.1861 13.125 15.9375V13.125H15.9375C16.1861 13.125 16.4246 13.0262 16.6004 12.8504C16.7762 12.6746 16.875 12.4361 16.875 12.1875C16.875 11.9389 16.7762 11.7004 16.6004 11.5246C16.4246 11.3488 16.1861 11.25 15.9375 11.25Z',
                  fill: '#BED3CB' })
              )
            ),
            _react2.default.createElement(
              'i',
              { className: productIsAddedToWishlist ? 'modelInfoBlock-img-big-wishBtn on' : 'modelInfoBlock-img-big-wishBtn',
                onClick: function onClick(e) {
                  return addModelToWishlist(e);
                } },
              _react2.default.createElement(
                'svg',
                { viewBox: '0 0 24 24' },
                _react2.default.createElement('use', { href: '#heart' }),
                _react2.default.createElement('use', { href: '#heart' })
              ),
              _react2.default.createElement(
                'svg',
                { className: 'hide', viewBox: '0 0 24 24' },
                _react2.default.createElement(
                  'defs',
                  null,
                  _react2.default.createElement('path', { id: 'heart', d: 'M12 4.435c-1.989-5.399-12-4.597-12 3.568 0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-8.118-10-8.999-12-3.568z' })
                )
              )
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'row smallImageWrapper' },
          image.realImg.length ? _react2.default.createElement(
            _reactSlick2.default,
            (0, _extends3.default)({
              asNavFor: this.state.nav1,
              ref: function ref(slider) {
                return _this2.slider2 = slider;
              }
            }, settingsSmallImg),
            image.realImg.map(function (el, i) {
              return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                  'div',
                  { className: className, key: i },
                  _react2.default.createElement('img', { loading: 'lazy', src: el.src, alt: '', onClick: _this2.props.clickSmallImg })
                )
              );
            })
          ) : ''
        ),
        blockImageState.isOpenLightBox && _react2.default.createElement(_lightboxImg2.default, { src: blockImageState.currentMainImage,
          showFirstImage: false,
          showRealImageText: true,
          close: closeLightBox,
          array: [].concat(image.mainImg, image.realImg) })
      );
    }
  }]);
  return ModelInfoBlockImage;
}(_react.Component);

exports.default = ModelInfoBlockImage;


ModelInfoBlockImage.propTypes = {};
ModelInfoBlockImage.defaultProps = {
  showDescription: false
};

/***/ }),

/***/ 1229:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SearchBarKaufen = undefined;

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _debounce2 = __webpack_require__(899);

var _debounce3 = _interopRequireDefault(_debounce2);

var _reactRouter = __webpack_require__(206);

var _reactRedux = __webpack_require__(313);

var _redux = __webpack_require__(148);

var _shop = __webpack_require__(873);

var shopActions = _interopRequireWildcard(_shop);

var _reactAutosuggest = __webpack_require__(907);

var _reactAutosuggest2 = _interopRequireDefault(_reactAutosuggest);

var _reactI18next = __webpack_require__(322);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SearchBarKaufen = exports.SearchBarKaufen = function (_Component) {
    (0, _inherits3.default)(SearchBarKaufen, _Component);

    function SearchBarKaufen(props) {
        (0, _classCallCheck3.default)(this, SearchBarKaufen);

        var _this = (0, _possibleConstructorReturn3.default)(this, (SearchBarKaufen.__proto__ || Object.getPrototypeOf(SearchBarKaufen)).call(this, props));

        _this.renderSuggestion = function (suggestion) {
            //suggestion.title for produsts
            var value = _this.state.value,
                pathname = _this.props.location.pathname,
                suggestionName = suggestion.name || suggestion.model || suggestion.title,
                suggestionCount = suggestion.count || 1,
                cssClass = '';


            if (suggestionName.toLowerCase().indexOf(value.toLowerCase()) >= 0) {
                var name = suggestionName.toLowerCase().trim(),
                    index = name.indexOf(value.trim().toLowerCase()),
                    text = suggestionName.slice(0, index);

                if (value && value.split('')[value.length - 1].charCodeAt() === 32) {
                    cssClass = 'addPadding';
                }

                text += '<span class="searchText">' + suggestionName.slice(index, index + value.length) + '</span>';
                text += suggestionName.slice(index + value.length);

                return _react2.default.createElement(
                    _react2.default.Fragment,
                    null,
                    pathname === '/' ? _react2.default.createElement(
                        _react2.default.Fragment,
                        null,
                        suggestion.deviceImages && _react2.default.createElement('img', { loading: 'lazy', className: 'verkaufen-search-img', src: suggestion.deviceImages.mainImg.src, alt: suggestion.modelName }),
                        _react2.default.createElement('span', { className: cssClass, dangerouslySetInnerHTML: { __html: text } })
                    ) : _react2.default.createElement(
                        _react2.default.Fragment,
                        null,
                        _this.props.params.deviceCategory1 === "zubehör" ? _react2.default.createElement('span', { className: cssClass, dangerouslySetInnerHTML: { __html: text } }) : _react2.default.createElement('span', { className: cssClass, dangerouslySetInnerHTML: { __html: text + (' (Resultate: ' + suggestionCount + ')') } })
                    )
                );
            }
        };

        _this.onChange = function (event, _ref) {
            var newValue = _ref.newValue;

            _this.setState({
                value: newValue
            });
        };

        _this.pressEnterOnInput = function (e) {
            if (e.key === "Enter") {
                _this.setState({ pressSearch: true });
                _reactRouter.browserHistory.push('/kaufen/search/' + _this.state.value);
            }
        };

        _this.getSearchResults = function (value, page) {
            document.getElementById('spinner-box-load').style.display = 'block';
            axios.get('/api/searchShopAccessories?search=' + value + '&page=' + page).then(function (result) {
                document.getElementById('spinner-box-load').style.display = 'none';
                _this.setState({
                    suggestions: result.data.accessories
                });
            });
        };

        _this.onSuggestionsFetchRequested = function (_ref2) {
            var value = _ref2.value;

            _this.debouncedLoadSuggestions(value);
        };

        _this.onSuggestionSelected = function (event, _ref3) {
            var suggestion = _ref3.suggestion;
            var filteredByShortcode = _this.state.filteredByShortcode;

            if (filteredByShortcode) {
                var modelName = suggestion.model.split(" ").join('-').toLowerCase(),
                    color = suggestion.color.toLowerCase() || 'color',
                    capacity = suggestion.capacity.toLowerCase() || 'capacity',
                    deviceName = suggestion.deviceName.replace(/ /g, '-').toLowerCase();

                _reactRouter.browserHistory.push('/kaufen/detail/' + deviceName + '/' + modelName + '/' + capacity + '/' + color + '/' + suggestion.shortcode);
            }
            if (_this.props.params.deviceCategory1 === "zubehör") {
                var _modelName = suggestion.title.split(" ").join('-').toLowerCase();
                _modelName = _modelName.split('/');
                _reactRouter.browserHistory.push('/kaufen/detail/zubehoer/' + suggestion.categoryName + '/' + _modelName[_modelName.length - 1] + '/' + suggestion.shortcode);
            } else _reactRouter.browserHistory.push('/kaufen/search/' + suggestion.name);
        };

        _this.onSuggestionsClearRequested = function () {
            _this.setState({
                suggestions: []
            });
        };

        _this.pressSearchBtn = function () {
            if (_this.state.value) {
                _reactRouter.browserHistory.push('/kaufen/search/' + _this.state.value);
            }
        };

        _this.state = {
            value: '',
            suggestions: [],
            filteredByShortcode: false
        };

        _this.debouncedLoadSuggestions = (0, _debounce3.default)(_this.loadSuggestions, 100);
        return _this;
    }

    (0, _createClass3.default)(SearchBarKaufen, [{
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.debouncedLoadSuggestions.cancel();
        }
    }, {
        key: 'loadSuggestions',
        value: function loadSuggestions(value) {
            var _this2 = this;

            var objForRequest = {
                search: value
            };
            //for products
            if (this.props.params && this.props.params.deviceCategory1 === "zubehör") {
                this.getSearchResults(value, 'all');
            }

            //for devices
            else {
                    axios.post('/api/models', objForRequest).then(function (result) {
                        if (result.data.meta.filteredByShortcode) {
                            _this2.setState({ suggestions: result.data.data, filteredByShortcode: true });
                        } else _this2.setState({ suggestions: result.data.meta.namesList.values, filteredByShortcode: false });
                    });
                }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                value = _state.value,
                suggestions = _state.suggestions;
            var pathname = this.props.location.pathname;
            var showBtn = this.props.showBtn;

            var inputProps = {
                placeholder: this.props.placeholder || '',
                value: value,
                onChange: this.onChange,
                onKeyUp: this.pressEnterOnInput
            };
            if (window.isMobile) return _react2.default.createElement(
                'section',
                { className: 'row search-input-block phone-search-section d-none', style: { display: 'flex', justifyContent: 'space-around' } },
                _react2.default.createElement(
                    'div',
                    { className: 'searchBarBeta' },
                    pathname === '/' ? null : null,
                    _react2.default.createElement(_reactAutosuggest2.default, {
                        suggestions: suggestions,
                        onSuggestionSelected: this.onSuggestionSelected,
                        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,
                        onSuggestionsClearRequested: this.onSuggestionsClearRequested,
                        getSuggestionValue: getSuggestionValue,
                        renderSuggestion: this.renderSuggestion,
                        inputProps: inputProps
                    })
                ),
                showBtn && _react2.default.createElement('div', { className: 'lable verkaufen-search', onClick: function onClick() {
                        return _this3.pressSearchBtn();
                    } })
            );else return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'searchBar' },
                    pathname === '/' ? null : null,
                    _react2.default.createElement(_reactAutosuggest2.default, {
                        suggestions: suggestions,
                        onSuggestionSelected: this.onSuggestionSelected,
                        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,
                        onSuggestionsClearRequested: this.onSuggestionsClearRequested,
                        getSuggestionValue: getSuggestionValue,
                        renderSuggestion: this.renderSuggestion,
                        inputProps: inputProps
                    })
                ),
                showBtn && _react2.default.createElement(
                    'div',
                    { className: 'lable verkaufen-search', onClick: function onClick() {
                            return _this3.pressSearchBtn();
                        } },
                    this.props.t('searchBarKaufen.rightSearchButton')
                )
            );
        }
    }]);
    return SearchBarKaufen;
}(_react.Component);

SearchBarKaufen.propTypes = {};
SearchBarKaufen.defaultProps = {};

function mapStateToProps(state) {
    return {};
}
function mapDispatchToProps(dispatch) {
    return {
        shopActions: (0, _redux.bindActionCreators)(shopActions, dispatch)
    };
}

exports.default = (0, _reactRouter.withRouter)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _reactI18next.withTranslation)()(SearchBarKaufen)));


var getSuggestionValue = function getSuggestionValue(suggestion) {
    return suggestion.name || suggestion.model;
};

/***/ }),

/***/ 1245:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _PaginationBoxView = __webpack_require__(1246);

var _PaginationBoxView2 = _interopRequireDefault(_PaginationBoxView);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _PaginationBoxView2.default;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 1246:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _PageView = __webpack_require__(1247);

var _PageView2 = _interopRequireDefault(_PageView);

var _BreakView = __webpack_require__(1248);

var _BreakView2 = _interopRequireDefault(_BreakView);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PaginationBoxView = function (_Component) {
  _inherits(PaginationBoxView, _Component);

  function PaginationBoxView(props) {
    _classCallCheck(this, PaginationBoxView);

    var _this = _possibleConstructorReturn(this, (PaginationBoxView.__proto__ || Object.getPrototypeOf(PaginationBoxView)).call(this, props));

    _this.handlePreviousPage = function (evt) {
      var selected = _this.state.selected;

      evt.preventDefault ? evt.preventDefault() : evt.returnValue = false;
      if (selected > 0) {
        _this.handlePageSelected(selected - 1, evt);
      }
    };

    _this.handleNextPage = function (evt) {
      var selected = _this.state.selected;
      var pageCount = _this.props.pageCount;


      evt.preventDefault ? evt.preventDefault() : evt.returnValue = false;
      if (selected < pageCount - 1) {
        _this.handlePageSelected(selected + 1, evt);
      }
    };

    _this.handlePageSelected = function (selected, evt) {
      evt.preventDefault ? evt.preventDefault() : evt.returnValue = false;

      if (_this.state.selected === selected) return;

      _this.setState({ selected: selected });

      // Call the callback with the new selected item:
      _this.callCallback(selected);
    };

    _this.callCallback = function (selectedItem) {
      if (typeof _this.props.onPageChange !== "undefined" && typeof _this.props.onPageChange === "function") {
        _this.props.onPageChange({ selected: selectedItem });
      }
    };

    _this.pagination = function () {
      var items = [];
      var _this$props = _this.props,
          pageRangeDisplayed = _this$props.pageRangeDisplayed,
          pageCount = _this$props.pageCount,
          marginPagesDisplayed = _this$props.marginPagesDisplayed,
          breakLabel = _this$props.breakLabel,
          breakClassName = _this$props.breakClassName;
      var selected = _this.state.selected;


      if (pageCount <= pageRangeDisplayed) {

        for (var index = 0; index < pageCount; index++) {
          items.push(_this.getPageElement(index));
        }
      } else {

        var leftSide = pageRangeDisplayed / 2;
        var rightSide = pageRangeDisplayed - leftSide;

        // If the selected page index is on the default right side of the pagination,
        // we consider that the new right side is made up of it (= only one break element).
        // If the selected page index is on the default left side of the pagination,
        // we consider that the new left side is made up of it (= only one break element).
        if (selected > pageCount - pageRangeDisplayed / 2) {
          rightSide = pageCount - selected;
          leftSide = pageRangeDisplayed - rightSide;
        } else if (selected < pageRangeDisplayed / 2) {
          leftSide = selected;
          rightSide = pageRangeDisplayed - leftSide;
        }

        var _index = void 0;
        var page = void 0;
        var breakView = void 0;
        var createPageView = function createPageView(index) {
          return _this.getPageElement(index);
        };

        for (_index = 0; _index < pageCount; _index++) {

          page = _index + 1;

          // If the page index is lower than the margin defined,
          // the page has to be displayed on the left side of
          // the pagination.
          if (page <= marginPagesDisplayed) {
            items.push(createPageView(_index));
            continue;
          }

          // If the page index is greater than the page count
          // minus the margin defined, the page has to be
          // displayed on the right side of the pagination.
          if (page > pageCount - marginPagesDisplayed) {
            items.push(createPageView(_index));
            continue;
          }

          // If the page index is near the selected page index
          // and inside the defined range (pageRangeDisplayed)
          // we have to display it (it will create the center
          // part of the pagination).
          if (_index >= selected - leftSide && _index <= selected + rightSide) {
            items.push(createPageView(_index));
            continue;
          }

          // If the page index doesn't meet any of the conditions above,
          // we check if the last item of the current "items" array
          // is a break element. If not, we add a break element, else,
          // we do nothing (because we don't want to display the page).
          if (breakLabel && items[items.length - 1] !== breakView) {
            breakView = _react2.default.createElement(_BreakView2.default, {
              key: _index,
              breakLabel: breakLabel,
              breakClassName: breakClassName
            });
            items.push(breakView);
          }
        }
      }

      return items;
    };

    _this.state = {
      selected: props.initialPage ? props.initialPage : props.forcePage ? props.forcePage : 0
    };
    return _this;
  }

  _createClass(PaginationBoxView, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          initialPage = _props.initialPage,
          disableInitialCallback = _props.disableInitialCallback;
      // Call the callback with the initialPage item:

      if (typeof initialPage !== 'undefined' && !disableInitialCallback) {
        this.callCallback(initialPage);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (typeof nextProps.forcePage !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {
        this.setState({ selected: nextProps.forcePage });
      }
    }
  }, {
    key: 'hrefBuilder',
    value: function hrefBuilder(pageIndex) {
      var _props2 = this.props,
          hrefBuilder = _props2.hrefBuilder,
          pageCount = _props2.pageCount;

      if (hrefBuilder && pageIndex !== this.state.selected && pageIndex >= 0 && pageIndex < pageCount) {
        return hrefBuilder(pageIndex + 1);
      }
    }
  }, {
    key: 'getPageElement',
    value: function getPageElement(index) {
      var selected = this.state.selected;
      var _props3 = this.props,
          pageClassName = _props3.pageClassName,
          pageLinkClassName = _props3.pageLinkClassName,
          activeClassName = _props3.activeClassName,
          activeLinkClassName = _props3.activeLinkClassName,
          extraAriaContext = _props3.extraAriaContext;


      return _react2.default.createElement(_PageView2.default, {
        key: index,
        onClick: this.handlePageSelected.bind(null, index),
        selected: selected === index,
        pageClassName: pageClassName,
        pageLinkClassName: pageLinkClassName,
        activeClassName: activeClassName,
        activeLinkClassName: activeLinkClassName,
        extraAriaContext: extraAriaContext,
        href: this.hrefBuilder(index),
        page: index + 1 });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props4 = this.props,
          disabledClassName = _props4.disabledClassName,
          previousClassName = _props4.previousClassName,
          nextClassName = _props4.nextClassName,
          pageCount = _props4.pageCount,
          containerClassName = _props4.containerClassName,
          previousLinkClassName = _props4.previousLinkClassName,
          previousLabel = _props4.previousLabel,
          nextLinkClassName = _props4.nextLinkClassName,
          nextLabel = _props4.nextLabel;
      var selected = this.state.selected;


      var previousClasses = previousClassName + (selected === 0 ? ' ' + disabledClassName : '');
      var nextClasses = nextClassName + (selected === pageCount - 1 ? ' ' + disabledClassName : '');

      return _react2.default.createElement(
        'ul',
        { className: containerClassName },
        _react2.default.createElement(
          'li',
          { className: previousClasses },
          _react2.default.createElement(
            'a',
            { onClick: this.handlePreviousPage,
              className: previousLinkClassName,
              href: this.hrefBuilder(selected - 1),
              tabIndex: '0',
              role: 'button',
              onKeyPress: this.handlePreviousPage },
            previousLabel
          )
        ),
        this.pagination(),
        _react2.default.createElement(
          'li',
          { className: nextClasses },
          _react2.default.createElement(
            'a',
            { onClick: this.handleNextPage,
              className: nextLinkClassName,
              href: this.hrefBuilder(selected + 1),
              tabIndex: '0',
              role: 'button',
              onKeyPress: this.handleNextPage },
            nextLabel
          )
        )
      );
    }
  }]);

  return PaginationBoxView;
}(_react.Component);

PaginationBoxView.propTypes = {
  pageCount: _propTypes2.default.number.isRequired,
  pageRangeDisplayed: _propTypes2.default.number.isRequired,
  marginPagesDisplayed: _propTypes2.default.number.isRequired,
  previousLabel: _propTypes2.default.node,
  nextLabel: _propTypes2.default.node,
  breakLabel: _propTypes2.default.node,
  hrefBuilder: _propTypes2.default.func,
  onPageChange: _propTypes2.default.func,
  initialPage: _propTypes2.default.number,
  forcePage: _propTypes2.default.number,
  disableInitialCallback: _propTypes2.default.bool,
  containerClassName: _propTypes2.default.string,
  pageClassName: _propTypes2.default.string,
  pageLinkClassName: _propTypes2.default.string,
  activeClassName: _propTypes2.default.string,
  activeLinkClassName: _propTypes2.default.string,
  previousClassName: _propTypes2.default.string,
  nextClassName: _propTypes2.default.string,
  previousLinkClassName: _propTypes2.default.string,
  nextLinkClassName: _propTypes2.default.string,
  disabledClassName: _propTypes2.default.string,
  breakClassName: _propTypes2.default.string
};
PaginationBoxView.defaultProps = {
  pageCount: 10,
  pageRangeDisplayed: 2,
  marginPagesDisplayed: 3,
  activeClassName: "selected",
  previousClassName: "previous",
  nextClassName: "next",
  previousLabel: "Previous",
  nextLabel: "Next",
  breakLabel: "...",
  disabledClassName: "disabled",
  disableInitialCallback: false
};
exports.default = PaginationBoxView;
;
//# sourceMappingURL=PaginationBoxView.js.map

/***/ }),

/***/ 1247:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PageView = function PageView(props) {
  var pageClassName = props.pageClassName;
  var pageLinkClassName = props.pageLinkClassName;

  var onClick = props.onClick;
  var href = props.href;

  var ariaLabel = 'Page ' + props.page + (props.extraAriaContext ? ' ' + props.extraAriaContext : '');
  var ariaCurrent = null;

  if (props.selected) {
    ariaCurrent = 'page';
    ariaLabel = 'Page ' + props.page + ' is your current page';

    if (typeof pageClassName !== 'undefined') {
      pageClassName = pageClassName + ' ' + props.activeClassName;
    } else {
      pageClassName = props.activeClassName;
    }

    if (typeof pageLinkClassName !== 'undefined') {
      pageLinkClassName = pageLinkClassName;

      if (typeof props.activeLinkClassName !== 'undefined') {
        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;
      }
    } else {
      pageLinkClassName = props.activeLinkClassName;
    }
  }

  return _react2.default.createElement(
    'li',
    { className: pageClassName },
    _react2.default.createElement(
      'a',
      { onClick: onClick,
        role: 'button',
        className: pageLinkClassName,
        href: href,
        tabIndex: '0',
        'aria-label': ariaLabel,
        'aria-current': ariaCurrent,
        onKeyPress: onClick },
      props.page
    )
  );
};

exports.default = PageView;
//# sourceMappingURL=PageView.js.map

/***/ }),

/***/ 1248:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BreakView = function BreakView(props) {
  var label = props.breakLabel;
  var className = props.breakClassName || 'break';

  return _react2.default.createElement(
    'li',
    { className: className },
    label
  );
};

exports.default = BreakView;
//# sourceMappingURL=BreakView.js.map

/***/ }),

/***/ 1249:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(149);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Banner = function (_Component) {
  (0, _inherits3.default)(Banner, _Component);

  function Banner(props) {
    (0, _classCallCheck3.default)(this, Banner);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Banner.__proto__ || Object.getPrototypeOf(Banner)).call(this, props));

    _this.state = {
      inputField: '',
      errorInputData: '',
      showInput: true,
      showOkMessage: false
    };

    _this.send = _this.send.bind(_this);
    _this.changeInput = _this.changeInput.bind(_this);
    _this.handleNoEmail = _this.handleNoEmail.bind(_this);
    _this._validateInput = _this._validateInput.bind(_this);
    _this._gtag_report_conversion = _this._gtag_report_conversion.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(Banner, [{
    key: '_validateInput',
    value: function _validateInput(value) {
      var error = "",
          domain = window.domainName.name.split('.')[window.domainName.name.split('.').length - 1],
          phonenoCh = /^\(?([0-9]{4})\)?[ ]?([0-9]{2})\)?[ ]?([0-9]{3})[ ]?([0-9]{2})\)?[ ]?([0-9]{2})$/,
          phoneno2Ch = /^\+([0-9]{2})\)?[ ]?([0-9]{2})\)?[ ]?([0-9]{3})[ ]?([0-9]{2})\)?[ ]?([0-9]{2})$/,
          phoneno3Ch = /^\(?([0-9]{3})\)?[ ]?([0-9]{3})\)?[ ]?([0-9]{2})[ ]?([0-9]{2})$/,
          phonenoDe = /^\(?([0-9]{4})\)?[ ]?([0-9]{3})\)?[ ]?([0-9]{2})[ ]?([0-9]{2})$/,
          phoneno2De = /^\(?([0-9]{5})\)?[ ]?([0-9]{3})\)?[ ]?([0-9]{2})[ ]?([0-9]{2})$/;

      if (value === "") {
        error = "Sie haben keine Telefonnummer bzw. E-Mail eingegeben.";
      } else if (isNaN(+value.replace(/ /g, ''))) {
        if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(value)) {
          return true;
        } else {
          error = "Telefonnummer bzw. E-Mail enthält unzulässige Zeichen";
          document.forms.coupon.email.value = "";
        }
      } else if (domain === 'ch' && !phonenoCh.test(value) && !phoneno2Ch.test(value) && !phoneno3Ch.test(value) || domain === 'de' && !phonenoDe.test(value) && !phoneno2De.test(value)) {
        document.forms.coupon.email.value = "";
        error = domain === 'ch' ? "Die Telefonnummer muss aus mindestens 10 Zeichen bestehen, z.B. 079 123 45 67" : "Die Telefonnummer muss aus mindestens 11 Zeichen bestehen, z.B. 0150 123 45 67";
      }
      if (error) {
        this.setState({ errorInputData: error });
        return false;
      } else return true;
    }
  }, {
    key: 'handleNoEmail',
    value: function handleNoEmail(e) {
      e.preventDefault();
      this.setState({ showOkMessage: false, showInput: true });
    }
  }, {
    key: 'changeInput',
    value: function changeInput() {
      this.setState({ errorInputData: '' });
    }
  }, {
    key: '_gtag_report_conversion',
    value: function _gtag_report_conversion(url) {
      var callback = function callback() {
        if (typeof url != 'undefined') {
          window.location = url;
        }
      };
      gtag('event', 'conversion', {
        'send_to': 'AW-827036726/3tyqCJ_ayXsQtqiuigM',
        'event_callback': callback
      });
      return false;
    }
  }, {
    key: 'send',
    value: function send(e) {
      var _this2 = this;

      e.preventDefault();
      var domain = window.domainName.name.split('.')[window.domainName.name.split('.').length - 1];

      var inputValue = document.forms.coupon.email.value,
          inputAntiSpam = document.forms.coupon.email2.value;
      document.forms.coupon.email.value = '';
      if (this._validateInput(inputValue) && !inputAntiSpam) {
        document.getElementById('spinner-box-load').style.display = 'block';
        _axios2.default.get('/api/generateCoupons?phoneOrEmail=' + inputValue.replace(/\+/g, '%2B')).then(function (result) {
          document.getElementById('spinner-box-load').style.display = 'none';
          if (window.isGoogleConnection) {
            _this2._gtag_report_conversion();
          }
          _this2.setState({ showInput: false, showOkMessage: true });
          if (window.isFBConnection) {
            if (domain === 'ch') {
              fbq('track', 'Lead', { value: 1 }); // facebook pixel
            }
          }
        });
      } else document.forms.coupon.email.value = '';
    }
  }, {
    key: 'render',
    value: function render() {
      var couponDate = new Date(new Date().getTime() + 1209600000).toJSON().slice(0, 10).split('-').reverse().join('.');
      return _react2.default.createElement(
        _react2.default.Fragment,
        null,
        _react2.default.createElement(
          'div',
          { className: 'row banner' },
          _react2.default.createElement(
            'div',
            { className: 'guy' },
            _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/Guy.svg', alt: '' })
          ),
          _react2.default.createElement(
            'div',
            { className: 'price' },
            _react2.default.createElement(
              'span',
              { className: 'price-amount' },
              '20 CHF'
            ),
            _react2.default.createElement(
              'span',
              { className: 'price-title' },
              'Gutschein'
            )
          ),
          _react2.default.createElement('div', { className: 'visible-md visible-lg visible-xl col-sm-2 col-md-2' }),
          _react2.default.createElement(
            'div',
            { className: 'col-sm-6 col-md-5 text-left' },
            _react2.default.createElement(
              'div',
              { className: 'flex-column' },
              _react2.default.createElement(
                'h3',
                null,
                'Wir feiern unser 10 j\xE4hriges ',
                _react2.default.createElement(
                  'span',
                  null,
                  'Jubil\xE4um'
                ),
                ' - Feiern Sie mit!'
              ),
              _react2.default.createElement(
                'p',
                null,
                'G\xFCltig auf alle Ank\xE4ufe ab 50.- ',
                window.currencyValue,
                ' bzw. Ger\xE4te ab 99.- ',
                window.currencyValue,
                ' mit diesem Gutschein, g\xFCltig bis ',
                couponDate,
                '. Dieser Gutschein ist nicht mit anderen Aktionen / Rabatten kumulierbar.'
              )
            )
          ),
          this.state.showInput && _react2.default.createElement(
            'div',
            { className: 'col-sm-3 col-md-4 text-right' },
            _react2.default.createElement(
              'div',
              { className: 'flex-column' },
              _react2.default.createElement(
                'span',
                { className: 'error' },
                this.state.errorInputData
              ),
              _react2.default.createElement(
                'form',
                { className: 'form', name: 'coupon', onSubmit: this.send },
                _react2.default.createElement(
                  'label',
                  { style: { display: 'inline', float: 'none', lineHeight: 'inherit' } },
                  _react2.default.createElement('input', { type: 'text',
                    name: 'email',
                    id: 'couponEmail',
                    onChange: this.changeInput,
                    placeholder: 'E-Mail oder Mobilnummer' }),
                  _react2.default.createElement('button', { 'aria-label': 'Submit', type: 'submit' }),
                  _react2.default.createElement('input', { type: 'text', name: 'email2', style: { display: 'none' } }),
                  _react2.default.createElement(
                    'p',
                    { className: 'info-text' },
                    'Wir geben Ihre Daten niemals an Dritte weiter.'
                  )
                )
              )
            )
          ),
          this.state.showOkMessage && _react2.default.createElement(
            'div',
            { className: 'col-sm-4 col-md-5 text-right', style: { margin: '0 20px' } },
            _react2.default.createElement(
              'p',
              null,
              'Vielen Dank! Sie erhalten den Gutschein innerhalb von 15 Minuten per E-Mail bzw. SMS zugesendet.\xA0',
              _react2.default.createElement(
                'a',
                { href: '#',
                  className: 'noEmail',
                  onClick: this.handleNoEmail },
                'Gutschein nicht erhalten'
              ),
              '?'
            )
          )
        ),
        _react2.default.createElement(
          'p',
          { className: 'couponDescr-mobile' },
          'Auf alle Ank\xE4ufe ab 99.- ',
          window.currencyValue,
          ' mit diesem Gutschein, g\xFCltig bis ',
          couponDate,
          '. Dieser Gutschein ist nicht mit anderen Aktionen / Rabatten kumulierbar.'
        )
      );
    }
  }]);
  return Banner;
}(_react.Component);

Banner.propTypes = {};
Banner.defaultProps = {};

exports.default = Banner;

/***/ }),

/***/ 1250:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomerAboutUs = undefined;

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

var _reactSlickMin = __webpack_require__(1251);

var _reactSlickMin2 = _interopRequireDefault(_reactSlickMin);

var _writeRatingModal = __webpack_require__(1162);

var _writeRatingModal2 = _interopRequireDefault(_writeRatingModal);

var _writeRatingModalMobile = __webpack_require__(1164);

var _writeRatingModalMobile2 = _interopRequireDefault(_writeRatingModalMobile);

var _apiCookie = __webpack_require__(941);

var _reactRedux = __webpack_require__(313);

var _reactI18next = __webpack_require__(322);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CustomerAboutUs = exports.CustomerAboutUs = function (_Component) {
  (0, _inherits3.default)(CustomerAboutUs, _Component);

  function CustomerAboutUs(props) {
    (0, _classCallCheck3.default)(this, CustomerAboutUs);

    var _this2 = (0, _possibleConstructorReturn3.default)(this, (CustomerAboutUs.__proto__ || Object.getPrototypeOf(CustomerAboutUs)).call(this, props));

    _this2.state = {
      data: [],
      hideNavArrowsPrev: true,
      hideNavArrowsNext: true,
      infoRatings: {
        total: 0,
        average: 0,
        statistics: [{ stars: 5, count: 0 }, { stars: 4, count: 0 }, { stars: 3, count: 0 }, { stars: 2, count: 0 }, { stars: 1, count: 0 }]
      },
      showModalWriteRating: false,
      writeRatingToday: false
    };

    _this2.mapItemReview = _this2.mapItemReview.bind(_this2);
    _this2.prevReview = _this2.prevReview.bind(_this2);
    _this2.nextReview = _this2.nextReview.bind(_this2);
    _this2.beforeChange = _this2.beforeChange.bind(_this2);
    _this2.showReview = _this2.showReview.bind(_this2);
    _this2._loadRatingData = _this2._loadRatingData.bind(_this2);
    _this2.closeShowModalWriteRating = _this2.closeShowModalWriteRating.bind(_this2);
    _this2.writeRating = _this2.writeRating.bind(_this2);
    return _this2;
  }

  (0, _createClass3.default)(CustomerAboutUs, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._loadRatingData();
    }
  }, {
    key: '_loadRatingData',
    value: function _loadRatingData() {
      var _this3 = this;

      if (!this.props.notShowLoader) document.getElementById('spinner-box-load').style.display = 'block';
      axios.get('/api/getRatings?page=1&&sort=newest').then(function (result) {
        if (!_this3.props.notShowLoader) document.getElementById('spinner-box-load').style.display = 'none';
        _this3.setState({
          infoRatings: result.data.info,
          hideNavArrowsNext: result.data.items.length < 3,
          data: result.data.items
        });
      });
    }
  }, {
    key: 'closeShowModalWriteRating',
    value: function closeShowModalWriteRating() {
      this.setState({ showModalWriteRating: false });
    }
  }, {
    key: 'writeRating',
    value: function writeRating() {
      var _this4 = this;

      if (!_apiCookie.cookieApi.getCookie('writeRating')) {
        this.setState({ showModalWriteRating: true });
      } else {
        this.setState({ writeRatingToday: true });
        setTimeout(function () {
          return _this4.setState({ writeRatingToday: false });
        }, 3000);
      }
    }
  }, {
    key: 'mapItemReview',
    value: function mapItemReview(item, index) {
      function mapStars(count) {
        var starsArray = [];
        for (var i = 1; i <= 5; ++i) {
          var className = count >= i ? 'fa fa-star active' : 'fa fa-star';
          starsArray.push(_react2.default.createElement('i', { className: className, key: 'ItemReviewStar-' + i, 'aria-hidden': 'true' }));
        }
        return starsArray;
      }
      return _react2.default.createElement(
        'div',
        { className: 'col-xs-12 itemCustomer', key: 'ItemReview-' + index },
        _react2.default.createElement(
          _react2.default.Fragment,
          null,
          _react2.default.createElement(
            'div',
            { className: 'avatar' },
            item.googleRating && _react2.default.createElement('img', { loading: 'lazy', src: item.photo, alt: '' }),
            !item.googleRating && item.anonym === 1 && _react2.default.createElement(
              'span',
              null,
              item.name
            ),
            !item.googleRating && item.anonym === 0 && _react2.default.createElement(
              'span',
              null,
              item.firstname.slice(0, 1).toUpperCase() + item.lastname.slice(0, 1).toUpperCase()
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'name' },
            (item.googleRating || item.anonym === 1) && _react2.default.createElement(
              'span',
              null,
              item.name
            ),
            !item.googleRating && item.anonym === 0 && _react2.default.createElement(
              'span',
              null,
              item.firstname + ' ' + item.lastname
            ),
            _react2.default.createElement(
              'div',
              { className: 'stars' },
              mapStars(item.stars)
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'text' },
            item.message.length > 150 && _react2.default.createElement(
              'p',
              null,
              item.message.substr(0, 150),
              _react2.default.createElement(
                'span',
                null,
                '...'
              ),
              _react2.default.createElement('i', { onClick: this.showReview, className: 'fa fa-angle-down', 'aria-hidden': 'true' }),
              _react2.default.createElement(
                'span',
                { style: { display: 'none' } },
                item.message.substr(150, item.message.length),
                _react2.default.createElement('i', { onClick: this.showReview, className: 'fa fa-angle-up', 'aria-hidden': 'true' })
              )
            ),
            item.message.length <= 150 && _react2.default.createElement(
              'p',
              null,
              item.message
            )
          )
        )
      );
    }
  }, {
    key: 'showReview',
    value: function showReview(e) {
      if ($(e.target).hasClass('fa-angle-down')) {
        $(e.target).hide().prev().hide();
        $(e.target).closest('.itemCustomer').css({ 'height': 'auto' });
        $(e.target).next().show('fast');
      } else {
        $(e.target).parent().hide('fast').prev().show().prev().show();
        $(e.target).closest('.itemCustomer').css({ 'height': '400px' });
      }
    }
  }, {
    key: 'prevReview',
    value: function prevReview() {
      !this.state.hideNavArrowsPrev && this.refs.slider.slickPrev();
    }
  }, {
    key: 'nextReview',
    value: function nextReview() {
      !this.state.hideNavArrowsNext && this.refs.slider.slickNext();
    }
  }, {
    key: 'beforeChange',
    value: function beforeChange(oldIndex, newIndex) {
      var hideNavArrowsNext = newIndex + 3 == this.state.data.length,
          hideNavArrowsPrev = newIndex === 0;
      this.setState({ hideNavArrowsNext: hideNavArrowsNext, hideNavArrowsPrev: hideNavArrowsPrev });
    }
  }, {
    key: 'loopRender',
    value: function loopRender() {
      var indents = [];
      for (var i = 0; i < this.state.infoRatings.average; i++) {
        indents.push(_react2.default.createElement('i', { className: 'fa fa-star', 'aria-hidden': 'true', key: 'front-stars-' + i }));
      }
      return indents;
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          data = _state.data,
          infoRatings = _state.infoRatings,
          showModalWriteRating = _state.showModalWriteRating,
          writeRatingToday = _state.writeRatingToday,
          _this = this,
          slidesToShow = window.isMobile ? 1 : 3,
          settings = {
        dots: false,
        arrows: false,
        infinite: window.isMobile,
        draggable: false,
        adaptiveHeight: data.length > 0 && window.isMobile,
        speed: 700,
        slidesToShow: 3,
        slidesToScroll: 1,
        beforeChange: _this.beforeChange,
        useTransform: false,
        responsive: [{
          breakpoint: 1024,
          settings: {
            slidesToShow: 1,
            slidesToScroll: 1
          }
        }]
      },
          classNameArrowsPrev = this.state.hideNavArrowsPrev ? 'navArrows disabled' : 'navArrows',
          classNameArrowsNext = this.state.hideNavArrowsNext ? 'navArrows disabled' : 'navArrows';

      var t = this.props.t;


      return _react2.default.createElement(
        'section',
        null,
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'div',
            { className: 'head' },
            _react2.default.createElement(
              'p',
              null,
              t('customerAboutUs.subTitle')
            ),
            _react2.default.createElement(
              'h1',
              null,
              t('customerAboutUs.mainTItle')
            )
          )
        ),
        _react2.default.createElement(
          'p',
          { className: 'link-to-ratings' },
          _react2.default.createElement(
            _reactRouter.Link,
            { to: '/bewertungen' },
            t('customerAboutUs.rightTopLinkText')
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'row rating-section' },
          _react2.default.createElement(
            'div',
            { className: 'col-xs-12 col-sm-6 col-md-3 pr-0 mobile-border' },
            _react2.default.createElement(
              'div',
              { className: 'ratings-info' },
              writeRatingToday && _react2.default.createElement(
                'span',
                { className: 'error' },
                'Sie k\xF6nnen nur eine Bewertung pro Tag abgeben'
              ),
              _react2.default.createElement(
                'div',
                { className: 'wrap-info' },
                _react2.default.createElement(
                  'div',
                  { className: 'average' },
                  infoRatings.average,
                  '/5'
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'back-stars' },
                  _react2.default.createElement('i', { className: 'fa fa-star active', 'aria-hidden': 'true', key: 'back-starts-1' }),
                  _react2.default.createElement('i', { className: 'fa fa-star active', 'aria-hidden': 'true', key: 'back-starts-2' }),
                  _react2.default.createElement('i', { className: 'fa fa-star active', 'aria-hidden': 'true', key: 'back-starts-3' }),
                  _react2.default.createElement('i', { className: 'fa fa-star active', 'aria-hidden': 'true', key: 'back-starts-4' }),
                  _react2.default.createElement('i', { className: 'fa fa-star active', 'aria-hidden': 'true', key: 'back-starts-5' }),
                  _react2.default.createElement(
                    'div',
                    { className: 'front-stars' },
                    this.loopRender()
                  )
                ),
                _react2.default.createElement(
                  'p',
                  { className: 'title' },
                  t('customerAboutUs.leftMainTitle')
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'write', onClick: this.writeRating },
                  _react2.default.createElement(
                    'span',
                    null,
                    t('customerAboutUs.leftLinkText')
                  )
                )
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'col-xs-12 col-sm-6 col-md-9 pl-0' },
            _react2.default.createElement(
              'div',
              { className: 'row wrapCustomers' },
              _react2.default.createElement(
                'div',
                { className: 'col-xs-12 col-md-12' },
                data.length > 0 && _react2.default.createElement(
                  _reactSlickMin2.default,
                  (0, _extends3.default)({ ref: 'slider'
                  }, settings),
                  data.map(this.mapItemReview)
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'row text-right' },
              _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                  'span',
                  { className: classNameArrowsPrev, onClick: this.prevReview },
                  _react2.default.createElement('i', { className: 'fa fa-chevron-left', 'aria-hidden': 'true' })
                ),
                _react2.default.createElement(
                  'span',
                  { className: classNameArrowsNext, onClick: this.nextReview },
                  _react2.default.createElement('i', { className: 'fa fa-chevron-right', 'aria-hidden': 'true' })
                )
              )
            )
          )
        ),
        !window.isMobile && _react2.default.createElement(_writeRatingModal2.default, { showModalWriteRating: showModalWriteRating,
          closeShowModalWriteRating: this.closeShowModalWriteRating,
          user: this.props.user }),
        window.isMobile && _react2.default.createElement(_writeRatingModalMobile2.default, { user: this.props.user,
          showModalWriteRating: showModalWriteRating,
          closeShowModalWriteRating: this.closeShowModalWriteRating })
      );
    }
  }]);
  return CustomerAboutUs;
}(_react.Component);

CustomerAboutUs.propTypes = {};
CustomerAboutUs.defaultProps = {};

function mapStateToProps(state) {
  return {
    user: state.user
  };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps)((0, _reactI18next.withTranslation)()(CustomerAboutUs));

/***/ }),

/***/ 1251:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

var _typeof2 = __webpack_require__(866);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

!function (t, e) {
	"object" == ( false ? "undefined" : (0, _typeof3.default)(exports)) && "object" == ( false ? "undefined" : (0, _typeof3.default)(module)) ? module.exports = e(__webpack_require__(16), __webpack_require__(321)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(16), __webpack_require__(321)], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : "object" == (typeof exports === "undefined" ? "undefined" : (0, _typeof3.default)(exports)) ? exports.Slider = e(require("react"), require("react-dom")) : t.Slider = e(t.React, t.ReactDOM);
}(undefined, function (t, e) {
	return function (t) {
		function e(s) {
			if (i[s]) return i[s].exports;var n = i[s] = { exports: {}, id: s, loaded: !1 };return t[s].call(n.exports, n, n.exports, e), n.loaded = !0, n.exports;
		}var i = {};return e.m = t, e.c = i, e.p = "", e(0);
	}([function (t, e, i) {
		"use strict";
		t.exports = i(1);
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t && t.__esModule ? t : { default: t };
		}function n(t, e) {
			if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
		}function r(t, e) {
			if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !e || "object" != (typeof e === "undefined" ? "undefined" : (0, _typeof3.default)(e)) && "function" != typeof e ? t : e;
		}function o(t, e) {
			if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + (typeof e === "undefined" ? "undefined" : (0, _typeof3.default)(e)));t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
		}e.__esModule = !0;var a = Object.assign || function (t) {
			for (var e = 1; e < arguments.length; e++) {
				var i = arguments[e];for (var s in i) {
					Object.prototype.hasOwnProperty.call(i, s) && (t[s] = i[s]);
				}
			}return t;
		},
		    l = i(2),
		    c = s(l),
		    d = i(3),
		    u = i(7),
		    p = s(u),
		    h = i(21),
		    f = s(h),
		    g = i(10),
		    y = s(g),
		    v = i(23),
		    m = s(v),
		    S = m.default && i(24),
		    w = function (t) {
			function e(i) {
				n(this, e);var s = r(this, t.call(this, i));return s.state = { breakpoint: null }, s._responsiveMediaHandlers = [], s.innerSliderRefHandler = s.innerSliderRefHandler.bind(s), s;
			}return o(e, t), e.prototype.innerSliderRefHandler = function (t) {
				this.innerSlider = t;
			}, e.prototype.media = function (t, e) {
				S.register(t, e), this._responsiveMediaHandlers.push({ query: t, handler: e });
			}, e.prototype.componentWillMount = function () {
				var t = this;if (this.props.responsive) {
					var e = this.props.responsive.map(function (t) {
						return t.breakpoint;
					});e.sort(function (t, e) {
						return t - e;
					}), e.forEach(function (i, s) {
						var n;n = 0 === s ? (0, f.default)({ minWidth: 0, maxWidth: i }) : (0, f.default)({ minWidth: e[s - 1], maxWidth: i }), m.default && t.media(n, function () {
							t.setState({ breakpoint: i });
						});
					});var i = (0, f.default)({ minWidth: e.slice(-1)[0] });m.default && this.media(i, function () {
						t.setState({ breakpoint: null });
					});
				}
			}, e.prototype.componentWillUnmount = function () {
				this._responsiveMediaHandlers.forEach(function (t) {
					S.unregister(t.query, t.handler);
				});
			}, e.prototype.slickPrev = function () {
				this.innerSlider.slickPrev();
			}, e.prototype.slickNext = function () {
				this.innerSlider.slickNext();
			}, e.prototype.slickGoTo = function (t) {
				this.innerSlider.slickGoTo(t);
			}, e.prototype.render = function () {
				var t,
				    e,
				    i = this;this.state.breakpoint ? (e = this.props.responsive.filter(function (t) {
					return t.breakpoint === i.state.breakpoint;
				}), t = "unslick" === e[0].settings ? "unslick" : (0, p.default)({}, this.props, e[0].settings)) : t = (0, p.default)({}, y.default, this.props);var s = this.props.children;return Array.isArray(s) || (s = [s]), s = s.filter(function (t) {
					return !!t;
				}), "unslick" === t ? c.default.createElement("div", { className: this.props.className + " unslicked" }, s) : c.default.createElement(d.InnerSlider, a({ ref: this.innerSliderRefHandler }, t), s);
			}, e;
		}(c.default.Component);e.default = w;
	}, function (e, i) {
		e.exports = t;
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t && t.__esModule ? t : { default: t };
		}e.__esModule = !0, e.InnerSlider = void 0;var n = Object.assign || function (t) {
			for (var e = 1; e < arguments.length; e++) {
				var i = arguments[e];for (var s in i) {
					Object.prototype.hasOwnProperty.call(i, s) && (t[s] = i[s]);
				}
			}return t;
		},
		    r = i(2),
		    o = s(r),
		    a = i(4),
		    l = s(a),
		    c = i(8),
		    d = s(c),
		    u = i(9),
		    p = s(u),
		    h = i(10),
		    f = s(h),
		    g = i(11),
		    y = s(g),
		    v = i(17),
		    m = s(v),
		    S = i(7),
		    w = s(S),
		    b = i(18),
		    T = i(19),
		    k = i(20);e.InnerSlider = (0, y.default)({ displayName: "InnerSlider", mixins: [d.default, l.default], list: null, track: null, listRefHandler: function listRefHandler(t) {
				this.list = t;
			}, trackRefHandler: function trackRefHandler(t) {
				this.track = t;
			}, getInitialState: function getInitialState() {
				return n({}, p.default, { currentSlide: this.props.initialSlide });
			}, getDefaultProps: function getDefaultProps() {
				return f.default;
			}, componentWillMount: function componentWillMount() {
				this.props.init && this.props.init(), this.setState({ mounted: !0 });for (var t = [], e = 0; e < o.default.Children.count(this.props.children); e++) {
					e >= this.state.currentSlide && e < this.state.currentSlide + this.props.slidesToShow && t.push(e);
				}this.props.lazyLoad && 0 === this.state.lazyLoadedList.length && this.setState({ lazyLoadedList: t });
			}, componentDidMount: function componentDidMount() {
				this.initialize(this.props), this.adaptHeight(), window && (window.addEventListener ? window.addEventListener("resize", this.onWindowResized) : window.attachEvent("onresize", this.onWindowResized));
			}, componentWillUnmount: function componentWillUnmount() {
				this.animationEndCallback && clearTimeout(this.animationEndCallback), window.addEventListener ? window.removeEventListener("resize", this.onWindowResized) : window.detachEvent("onresize", this.onWindowResized), this.state.autoPlayTimer && clearInterval(this.state.autoPlayTimer);
			}, componentWillReceiveProps: function componentWillReceiveProps(t) {
				this.props.slickGoTo != t.slickGoTo ? (console.warn("react-slick deprecation warning: slickGoTo prop is deprecated and it will be removed in next release. Use slickGoTo method instead"), this.changeSlide({ message: "index", index: t.slickGoTo, currentSlide: this.state.currentSlide })) : this.state.currentSlide >= t.children.length ? (this.update(t), this.changeSlide({ message: "index", index: t.children.length - t.slidesToShow, currentSlide: this.state.currentSlide })) : this.update(t);
			}, componentDidUpdate: function componentDidUpdate() {
				this.adaptHeight();
			}, onWindowResized: function onWindowResized() {
				this.update(this.props), this.setState({ animating: !1 }), clearTimeout(this.animationEndCallback), delete this.animationEndCallback;
			}, slickPrev: function slickPrev() {
				this.changeSlide({ message: "previous" });
			}, slickNext: function slickNext() {
				this.changeSlide({ message: "next" });
			}, slickGoTo: function slickGoTo(t) {
				t = Number(t), !isNaN(t) && this.changeSlide({ message: "index", index: t, currentSlide: this.state.currentSlide });
			}, render: function render() {
				var t,
				    e = (0, m.default)("slick-initialized", "slick-slider", this.props.className, { "slick-vertical": this.props.vertical }),
				    i = { fade: this.props.fade, cssEase: this.props.cssEase, speed: this.props.speed, infinite: this.props.infinite, centerMode: this.props.centerMode, focusOnSelect: this.props.focusOnSelect ? this.selectHandler : null, currentSlide: this.state.currentSlide, lazyLoad: this.props.lazyLoad, lazyLoadedList: this.state.lazyLoadedList, rtl: this.props.rtl, slideWidth: this.state.slideWidth, slidesToShow: this.props.slidesToShow, slidesToScroll: this.props.slidesToScroll, slideCount: this.state.slideCount, trackStyle: this.state.trackStyle, variableWidth: this.props.variableWidth };if (this.props.dots === !0 && this.state.slideCount >= this.props.slidesToShow) {
					var s = { dotsClass: this.props.dotsClass, slideCount: this.state.slideCount, slidesToShow: this.props.slidesToShow, currentSlide: this.state.currentSlide, slidesToScroll: this.props.slidesToScroll, clickHandler: this.changeSlide, children: this.props.children, customPaging: this.props.customPaging };t = o.default.createElement(T.Dots, s);
				}var r,
				    a,
				    l = { infinite: this.props.infinite, centerMode: this.props.centerMode, currentSlide: this.state.currentSlide, slideCount: this.state.slideCount, slidesToShow: this.props.slidesToShow, prevArrow: this.props.prevArrow, nextArrow: this.props.nextArrow, clickHandler: this.changeSlide };this.props.arrows && (r = o.default.createElement(k.PrevArrow, l), a = o.default.createElement(k.NextArrow, l));var c = null;this.props.vertical && (c = { height: this.state.listHeight });var d = null;this.props.vertical === !1 ? this.props.centerMode === !0 && (d = { padding: "0px " + this.props.centerPadding }) : this.props.centerMode === !0 && (d = { padding: this.props.centerPadding + " 0px" });var u = (0, w.default)({}, c, d);return o.default.createElement("div", { className: e, onMouseEnter: this.onInnerSliderEnter, onMouseLeave: this.onInnerSliderLeave, onMouseOver: this.onInnerSliderOver }, r, o.default.createElement("div", { ref: this.listRefHandler, className: "slick-list", style: u, onMouseDown: this.swipeStart, onMouseMove: this.state.dragging ? this.swipeMove : null, onMouseUp: this.swipeEnd, onMouseLeave: this.state.dragging ? this.swipeEnd : null, onTouchStart: this.swipeStart, onTouchMove: this.state.dragging ? this.swipeMove : null, onTouchEnd: this.swipeEnd, onTouchCancel: this.state.dragging ? this.swipeEnd : null, onKeyDown: this.props.accessibility ? this.keyHandler : null }, o.default.createElement(b.Track, n({ ref: this.trackRefHandler }, i), this.props.children)), a, t);
			} });
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t && t.__esModule ? t : { default: t };
		}e.__esModule = !0;var n = i(5),
		    r = i(8),
		    o = (s(r), i(7)),
		    a = s(o),
		    l = i(6),
		    c = s(l),
		    d = { changeSlide: function changeSlide(t) {
				var e,
				    i,
				    s,
				    n,
				    r,
				    o = this.props,
				    a = o.slidesToScroll,
				    l = o.slidesToShow,
				    c = this.state,
				    d = c.slideCount,
				    u = c.currentSlide;if (n = d % a !== 0, e = n ? 0 : (d - u) % a, "previous" === t.message) s = 0 === e ? a : l - e, r = u - s, this.props.lazyLoad && (i = u - s, r = i === -1 ? d - 1 : i);else if ("next" === t.message) s = 0 === e ? a : e, r = u + s, this.props.lazyLoad && (r = (u + a) % d + e);else if ("dots" === t.message || "children" === t.message) {
					if (r = t.index * t.slidesToScroll, r === t.currentSlide) return;
				} else if ("index" === t.message && (r = Number(t.index), r === t.currentSlide)) return;this.slideHandler(r);
			}, keyHandler: function keyHandler(t) {
				t.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === t.keyCode && this.props.accessibility === !0 ? this.changeSlide({ message: this.props.rtl === !0 ? "next" : "previous" }) : 39 === t.keyCode && this.props.accessibility === !0 && this.changeSlide({ message: this.props.rtl === !0 ? "previous" : "next" }));
			}, selectHandler: function selectHandler(t) {
				this.changeSlide(t);
			}, swipeStart: function swipeStart(t) {
				var e, i;this.props.swipe === !1 || "ontouchend" in document && this.props.swipe === !1 || this.props.draggable === !1 && t.type.indexOf("mouse") !== -1 || (e = void 0 !== t.touches ? t.touches[0].pageX : t.clientX, i = void 0 !== t.touches ? t.touches[0].pageY : t.clientY, this.setState({ dragging: !0, touchObject: { startX: e, startY: i, curX: e, curY: i } }));
			}, swipeMove: function swipeMove(t) {
				if (!this.state.dragging) return void t.preventDefault();if (!this.state.scrolling) {
					if (this.state.animating) return void t.preventDefault();this.props.vertical && this.props.swipeToSlide && this.props.verticalSwiping && t.preventDefault();var e,
					    i,
					    s,
					    r = this.state.touchObject;i = (0, n.getTrackLeft)((0, a.default)({ slideIndex: this.state.currentSlide, trackRef: this.track }, this.props, this.state)), r.curX = t.touches ? t.touches[0].pageX : t.clientX, r.curY = t.touches ? t.touches[0].pageY : t.clientY, r.swipeLength = Math.round(Math.sqrt(Math.pow(r.curX - r.startX, 2)));var o = Math.round(Math.sqrt(Math.pow(r.curY - r.startY, 2)));if (!this.props.verticalSwiping && !this.state.swiping && o > 4) return void this.setState({ scrolling: !0 });this.props.verticalSwiping && (r.swipeLength = o), s = (this.props.rtl === !1 ? 1 : -1) * (r.curX > r.startX ? 1 : -1), this.props.verticalSwiping && (s = r.curY > r.startY ? 1 : -1);var l = this.state.currentSlide,
					    c = Math.ceil(this.state.slideCount / this.props.slidesToScroll),
					    d = this.swipeDirection(this.state.touchObject),
					    u = r.swipeLength;this.props.infinite === !1 && (0 === l && "right" === d || l + 1 >= c && "left" === d) && (u = r.swipeLength * this.props.edgeFriction, this.state.edgeDragged === !1 && this.props.edgeEvent && (this.props.edgeEvent(d), this.setState({ edgeDragged: !0 }))), this.state.swiped === !1 && this.props.swipeEvent && (this.props.swipeEvent(d), this.setState({ swiped: !0 })), e = this.props.vertical ? i + u * (this.state.listHeight / this.state.listWidth) * s : i + u * s, this.props.verticalSwiping && (e = i + u * s), this.setState({ touchObject: r, swipeLeft: e, trackStyle: (0, n.getTrackCSS)((0, a.default)({ left: e }, this.props, this.state)) }), Math.abs(r.curX - r.startX) < .8 * Math.abs(r.curY - r.startY) || r.swipeLength > 4 && (this.setState({ swiping: !0 }), t.preventDefault());
				}
			}, getNavigableIndexes: function getNavigableIndexes() {
				var t = void 0,
				    e = 0,
				    i = 0,
				    s = [];for (this.props.infinite ? (e = this.props.slidesToShow * -1, i = this.props.slidesToShow * -1, t = 2 * this.state.slideCount) : t = this.state.slideCount; e < t;) {
					s.push(e), e = i + this.props.slidesToScroll, i += this.props.slidesToScroll <= this.props.slidesToShow ? this.props.slidesToScroll : this.props.slidesToShow;
				}return s;
			}, checkNavigable: function checkNavigable(t) {
				var e = this.getNavigableIndexes(),
				    i = 0;if (t > e[e.length - 1]) t = e[e.length - 1];else for (var s in e) {
					if (t < e[s]) {
						t = i;break;
					}i = e[s];
				}return t;
			}, getSlideCount: function getSlideCount() {
				var t = this,
				    e = this.props.centerMode ? this.state.slideWidth * Math.floor(this.props.slidesToShow / 2) : 0;if (this.props.swipeToSlide) {
					var i = void 0,
					    s = c.default.findDOMNode(this.list),
					    n = s.querySelectorAll(".slick-slide");Array.from(n).every(function (s) {
						if (t.props.vertical) {
							if (s.offsetTop + t.getHeight(s) / 2 > t.state.swipeLeft * -1) return i = s, !1;
						} else if (s.offsetLeft - e + t.getWidth(s) / 2 > t.state.swipeLeft * -1) return i = s, !1;return !0;
					});var r = Math.abs(i.dataset.index - this.state.currentSlide) || 1;return r;
				}return this.props.slidesToScroll;
			}, swipeEnd: function swipeEnd(t) {
				if (!this.state.dragging) return void (this.props.swipe && t.preventDefault());var e = this.state.touchObject,
				    i = this.state.listWidth / this.props.touchThreshold,
				    s = this.swipeDirection(e);this.props.verticalSwiping && (i = this.state.listHeight / this.props.touchThreshold);var r = this.state.scrolling;if (this.setState({ dragging: !1, edgeDragged: !1, scrolling: !1, swiping: !1, swiped: !1, swipeLeft: null, touchObject: {} }), !r && e.swipeLength) if (e.swipeLength > i) {
					t.preventDefault();var o = void 0,
					    l = void 0;switch (s) {case "left":case "down":
							l = this.state.currentSlide + this.getSlideCount(), o = this.props.swipeToSlide ? this.checkNavigable(l) : l, this.state.currentDirection = 0;break;case "right":case "up":
							l = this.state.currentSlide - this.getSlideCount(), o = this.props.swipeToSlide ? this.checkNavigable(l) : l, this.state.currentDirection = 1;break;default:
							o = this.state.currentSlide;}this.slideHandler(o);
				} else {
					var c = (0, n.getTrackLeft)((0, a.default)({ slideIndex: this.state.currentSlide, trackRef: this.track }, this.props, this.state));this.setState({ trackStyle: (0, n.getTrackAnimateCSS)((0, a.default)({ left: c }, this.props, this.state)) });
				}
			}, onInnerSliderEnter: function onInnerSliderEnter(t) {
				this.props.autoplay && this.props.pauseOnHover && this.pause();
			}, onInnerSliderOver: function onInnerSliderOver(t) {
				this.props.autoplay && this.props.pauseOnHover && this.pause();
			}, onInnerSliderLeave: function onInnerSliderLeave(t) {
				this.props.autoplay && this.props.pauseOnHover && this.autoPlay();
			} };e.default = d;
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t && t.__esModule ? t : { default: t };
		}e.__esModule = !0, e.getTrackLeft = e.getTrackAnimateCSS = e.getTrackCSS = void 0;var n = i(6),
		    r = s(n),
		    o = i(7),
		    a = s(o),
		    l = function l(t, e) {
			return e.reduce(function (e, i) {
				return e && t.hasOwnProperty(i);
			}, !0) ? null : console.error("Keys Missing", t);
		},
		    c = e.getTrackCSS = function (t) {
			l(t, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth"]);var e,
			    i,
			    s = t.slideCount + 2 * t.slidesToShow;t.vertical ? i = s * t.slideHeight : e = t.variableWidth ? (t.slideCount + 2 * t.slidesToShow) * t.slideWidth : t.centerMode ? (t.slideCount + 2 * (t.slidesToShow + 1)) * t.slideWidth : (t.slideCount + 2 * t.slidesToShow) * t.slideWidth;var n = { opacity: 1, WebkitTransform: t.vertical ? "translate(0px, " + t.left + "px)" : "translate(" + t.left + "px, 0px)", transform: t.vertical ? "translate(0px, " + t.left + "px)" : "translate(" + t.left + "px, 0px)", transition: "", WebkitTransition: "", msTransform: t.vertical ? "translateY(" + t.left + "px)" : "translateX(" + t.left + "px)" };return e && (0, a.default)(n, { width: e }), i && (0, a.default)(n, { height: i }), window && !window.addEventListener && window.attachEvent && (t.vertical ? n.marginTop = t.left + "px" : n.marginLeft = t.left + "px"), n;
		};e.getTrackAnimateCSS = function (t) {
			l(t, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth", "speed", "cssEase"]);var e = c(t);return e.WebkitTransition = "-webkit-transform " + t.speed + "ms " + t.cssEase, e.transition = "transform " + t.speed + "ms " + t.cssEase, e;
		}, e.getTrackLeft = function (t) {
			l(t, ["slideIndex", "trackRef", "infinite", "centerMode", "slideCount", "slidesToShow", "slidesToScroll", "slideWidth", "listWidth", "variableWidth", "slideHeight"]);var e,
			    i,
			    s = 0,
			    n = 0;if (t.fade) return 0;if (t.infinite) t.slideCount >= t.slidesToShow && (s = t.slideWidth * t.slidesToShow * -1, n = t.slideHeight * t.slidesToShow * -1), t.slideCount % t.slidesToScroll !== 0 && t.slideIndex + t.slidesToScroll > t.slideCount && t.slideCount > t.slidesToShow && (t.slideIndex > t.slideCount ? (s = (t.slidesToShow - (t.slideIndex - t.slideCount)) * t.slideWidth * -1, n = (t.slidesToShow - (t.slideIndex - t.slideCount)) * t.slideHeight * -1) : (s = t.slideCount % t.slidesToScroll * t.slideWidth * -1, n = t.slideCount % t.slidesToScroll * t.slideHeight * -1));else if (t.slideCount % t.slidesToScroll !== 0 && t.slideIndex + t.slidesToScroll > t.slideCount && t.slideCount > t.slidesToShow) {
				var o = t.slidesToShow - t.slideCount % t.slidesToScroll;s = o * t.slideWidth;
			}if (t.centerMode && (t.infinite ? s += t.slideWidth * Math.floor(t.slidesToShow / 2) : s = t.slideWidth * Math.floor(t.slidesToShow / 2)), e = t.vertical ? t.slideIndex * t.slideHeight * -1 + n : t.slideIndex * t.slideWidth * -1 + s, t.variableWidth === !0) {
				var a;t.slideCount <= t.slidesToShow || t.infinite === !1 ? i = r.default.findDOMNode(t.trackRef).childNodes[t.slideIndex] : (a = t.slideIndex + t.slidesToShow, i = r.default.findDOMNode(t.trackRef).childNodes[a]), e = i ? i.offsetLeft * -1 : 0, t.centerMode === !0 && (i = t.infinite === !1 ? r.default.findDOMNode(t.trackRef).children[t.slideIndex] : r.default.findDOMNode(t.trackRef).children[t.slideIndex + t.slidesToShow + 1], i && (e = i.offsetLeft * -1 + (t.listWidth - i.offsetWidth) / 2));
			}return e;
		};
	}, function (t, i) {
		t.exports = e;
	}, function (t, e) {
		/*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */
		"use strict";
		function i(t) {
			if (null === t || void 0 === t) throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t);
		}function s() {
			try {
				if (!Object.assign) return !1;var t = new String("abc");if (t[5] = "de", "5" === Object.getOwnPropertyNames(t)[0]) return !1;for (var e = {}, i = 0; i < 10; i++) {
					e["_" + String.fromCharCode(i)] = i;
				}var s = Object.getOwnPropertyNames(e).map(function (t) {
					return e[t];
				});if ("0123456789" !== s.join("")) return !1;var n = {};return "abcdefghijklmnopqrst".split("").forEach(function (t) {
					n[t] = t;
				}), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, n)).join("");
			} catch (t) {
				return !1;
			}
		}var n = Object.getOwnPropertySymbols,
		    r = Object.prototype.hasOwnProperty,
		    o = Object.prototype.propertyIsEnumerable;t.exports = s() ? Object.assign : function (t, e) {
			for (var s, a, l = i(t), c = 1; c < arguments.length; c++) {
				s = Object(arguments[c]);for (var d in s) {
					r.call(s, d) && (l[d] = s[d]);
				}if (n) {
					a = n(s);for (var u = 0; u < a.length; u++) {
						o.call(s, a[u]) && (l[a[u]] = s[a[u]]);
					}
				}
			}return l;
		};
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t && t.__esModule ? t : { default: t };
		}e.__esModule = !0;var n = Object.assign || function (t) {
			for (var e = 1; e < arguments.length; e++) {
				var i = arguments[e];for (var s in i) {
					Object.prototype.hasOwnProperty.call(i, s) && (t[s] = i[s]);
				}
			}return t;
		},
		    r = i(2),
		    o = s(r),
		    a = i(6),
		    l = s(a),
		    c = i(5),
		    d = i(7),
		    u = s(d),
		    p = { initialize: function initialize(t) {
				var e,
				    i = l.default.findDOMNode(this.list),
				    s = o.default.Children.count(t.children),
				    n = this.getWidth(i),
				    r = this.getWidth(l.default.findDOMNode(this.track));if (t.vertical) e = this.getWidth(l.default.findDOMNode(this));else {
					var a = t.centerMode && 2 * parseInt(t.centerPadding);e = (this.getWidth(l.default.findDOMNode(this)) - a) / t.slidesToShow;
				}var d = this.getHeight(i.querySelector('[data-index="0"]')),
				    p = d * t.slidesToShow,
				    h = t.rtl ? s - 1 - t.initialSlide : t.initialSlide;this.setState({ slideCount: s, slideWidth: e, listWidth: n, trackWidth: r, currentSlide: h, slideHeight: d, listHeight: p }, function () {
					var e = (0, c.getTrackLeft)((0, u.default)({ slideIndex: this.state.currentSlide, trackRef: this.track }, t, this.state)),
					    i = (0, c.getTrackCSS)((0, u.default)({ left: e }, t, this.state));this.setState({ trackStyle: i }), this.autoPlay();
				});
			}, update: function update(t) {
				var e,
				    i = l.default.findDOMNode(this.list),
				    s = o.default.Children.count(t.children),
				    n = this.getWidth(i),
				    r = this.getWidth(l.default.findDOMNode(this.track));if (t.vertical) e = this.getWidth(l.default.findDOMNode(this));else {
					var a = t.centerMode && 2 * parseInt(t.centerPadding);e = (this.getWidth(l.default.findDOMNode(this)) - a) / t.slidesToShow;
				}var d = this.getHeight(i.querySelector('[data-index="0"]')),
				    p = d * t.slidesToShow;t.autoplay ? this.autoPlay() : this.pause(), this.setState({ slideCount: s, slideWidth: e, listWidth: n, trackWidth: r, slideHeight: d, listHeight: p }, function () {
					var e = (0, c.getTrackLeft)((0, u.default)({ slideIndex: this.state.currentSlide, trackRef: this.track }, t, this.state)),
					    i = (0, c.getTrackCSS)((0, u.default)({ left: e }, t, this.state));this.setState({ trackStyle: i });
				});
			}, getWidth: function getWidth(t) {
				return t && (t.getBoundingClientRect().width || t.offsetWidth) || 0;
			}, getHeight: function getHeight(t) {
				return t && (t.getBoundingClientRect().height || t.offsetHeight) || 0;
			}, adaptHeight: function adaptHeight() {
				if (this.props.adaptiveHeight) {
					var t = '[data-index="' + this.state.currentSlide + '"]';if (this.list) {
						var e = l.default.findDOMNode(this.list);e.style.height = e.querySelector(t).offsetHeight + "px";
					}
				}
			}, canGoNext: function canGoNext(t) {
				var e = !0;return t.infinite || (t.centerMode ? t.currentSlide >= t.slideCount - 1 && (e = !1) : (t.slideCount <= t.slidesToShow || t.currentSlide >= t.slideCount - t.slidesToShow) && (e = !1)), e;
			}, slideHandler: function slideHandler(t) {
				var e,
				    i,
				    s,
				    n,
				    r,
				    o = this;if (!this.props.waitForAnimate || !this.state.animating) {
					if (this.props.fade) {
						if (i = this.state.currentSlide, this.props.infinite === !1 && (t < 0 || t >= this.state.slideCount)) return;return e = t < 0 ? t + this.state.slideCount : t >= this.state.slideCount ? t - this.state.slideCount : t, this.props.lazyLoad && this.state.lazyLoadedList.indexOf(e) < 0 && this.setState({ lazyLoadedList: this.state.lazyLoadedList.concat(e) }), r = function r() {
							o.setState({ animating: !1 }), o.props.afterChange && o.props.afterChange(e), delete o.animationEndCallback;
						}, this.setState({ animating: !0, currentSlide: e }, function () {
							this.animationEndCallback = setTimeout(r, this.props.speed);
						}), this.props.beforeChange && this.props.beforeChange(this.state.currentSlide, e), void this.autoPlay();
					}if (e = t, i = e < 0 ? this.props.infinite === !1 ? 0 : this.state.slideCount % this.props.slidesToScroll !== 0 ? this.state.slideCount - this.state.slideCount % this.props.slidesToScroll : this.state.slideCount + e : e >= this.state.slideCount ? this.props.infinite === !1 ? this.state.slideCount - this.props.slidesToShow : this.state.slideCount % this.props.slidesToScroll !== 0 ? 0 : e - this.state.slideCount : e, s = (0, c.getTrackLeft)((0, u.default)({ slideIndex: e, trackRef: this.track }, this.props, this.state)), n = (0, c.getTrackLeft)((0, u.default)({ slideIndex: i, trackRef: this.track }, this.props, this.state)), this.props.infinite === !1 && (s = n), this.props.beforeChange && this.props.beforeChange(this.state.currentSlide, i), this.props.lazyLoad) {
						for (var a = !0, l = [], d = e; d < e + this.props.slidesToShow; d++) {
							a = a && this.state.lazyLoadedList.indexOf(d) >= 0, a || l.push(d);
						}a || this.setState({ lazyLoadedList: this.state.lazyLoadedList.concat(l) });
					}if (this.props.useCSS === !1) this.setState({ currentSlide: i, trackStyle: (0, c.getTrackCSS)((0, u.default)({ left: n }, this.props, this.state)) }, function () {
						this.props.afterChange && this.props.afterChange(i);
					});else {
						var p = { animating: !1, currentSlide: i, trackStyle: (0, c.getTrackCSS)((0, u.default)({ left: n }, this.props, this.state)), swipeLeft: null };r = function r() {
							o.setState(p), o.props.afterChange && o.props.afterChange(i), delete o.animationEndCallback;
						}, this.setState({ animating: !0, currentSlide: i, trackStyle: (0, c.getTrackAnimateCSS)((0, u.default)({ left: s }, this.props, this.state)) }, function () {
							this.animationEndCallback = setTimeout(r, this.props.speed);
						});
					}this.autoPlay();
				}
			}, swipeDirection: function swipeDirection(t) {
				var e, i, s, n;return e = t.startX - t.curX, i = t.startY - t.curY, s = Math.atan2(i, e), n = Math.round(180 * s / Math.PI), n < 0 && (n = 360 - Math.abs(n)), n <= 45 && n >= 0 || n <= 360 && n >= 315 ? this.props.rtl === !1 ? "left" : "right" : n >= 135 && n <= 225 ? this.props.rtl === !1 ? "right" : "left" : this.props.verticalSwiping === !0 ? n >= 35 && n <= 135 ? "down" : "up" : "vertical";
			}, play: function play() {
				var t;if (!this.state.mounted) return !1;if (this.props.rtl) t = this.state.currentSlide - this.props.slidesToScroll;else {
					if (!this.canGoNext(n({}, this.props, this.state))) return !1;t = this.state.currentSlide + this.props.slidesToScroll;
				}this.slideHandler(t);
			}, autoPlay: function autoPlay() {
				this.state.autoPlayTimer && clearTimeout(this.state.autoPlayTimer), this.props.autoplay && this.setState({ autoPlayTimer: setTimeout(this.play, this.props.autoplaySpeed) });
			}, pause: function pause() {
				this.state.autoPlayTimer && (clearTimeout(this.state.autoPlayTimer), this.setState({ autoPlayTimer: null }));
			} };e.default = p;
	}, function (t, e) {
		"use strict";
		var i = { animating: !1, dragging: !1, autoPlayTimer: null, currentDirection: 0, currentLeft: null, currentSlide: 0, direction: 1, listWidth: null, listHeight: null, scrolling: !1, slideCount: null, slideWidth: null, slideHeight: null, swiping: !1, swipeLeft: null, touchObject: { startX: 0, startY: 0, curX: 0, curY: 0 }, lazyLoadedList: [], initialized: !1, edgeDragged: !1, swiped: !1, trackStyle: {}, trackWidth: 0 };t.exports = i;
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t && t.__esModule ? t : { default: t };
		}var n = i(2),
		    r = s(n),
		    o = { className: "", accessibility: !0, adaptiveHeight: !1, arrows: !0, autoplay: !1, autoplaySpeed: 3e3, centerMode: !1, centerPadding: "50px", cssEase: "ease", customPaging: function customPaging(t) {
				return r.default.createElement("button", null, t + 1);
			}, dots: !1, dotsClass: "slick-dots", draggable: !0, easing: "linear", edgeFriction: .35, fade: !1, focusOnSelect: !1, infinite: !0, initialSlide: 0, lazyLoad: !1, pauseOnHover: !0, responsive: null, rtl: !1, slide: "div", slidesToShow: 1, slidesToScroll: 1, speed: 500, swipe: !0, swipeToSlide: !1, touchMove: !0, touchThreshold: 5, useCSS: !0, variableWidth: !1, vertical: !1, waitForAnimate: !0, afterChange: null, beforeChange: null, edgeEvent: null, init: null, swipeEvent: null, nextArrow: null, prevArrow: null };t.exports = o;
	}, function (t, e, i) {
		"use strict";
		var s = i(2),
		    n = i(12);if ("undefined" == typeof s) throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");var r = new s.Component().updater;t.exports = n(s.Component, s.isValidElement, r);
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t;
		}function n(t, e, i) {
			function n(t, e, i) {
				for (var s in e) {
					e.hasOwnProperty(s) && c("function" == typeof e[s], "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", t.displayName || "ReactClass", r[i], s);
				}
			}function u(t, e) {
				var i = b.hasOwnProperty(e) ? b[e] : null;C.hasOwnProperty(e) && l("OVERRIDE_BASE" === i, "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.", e), t && l("DEFINE_MANY" === i || "DEFINE_MANY_MERGED" === i, "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", e);
			}function p(t, i) {
				if (!i) {
					var s = typeof i === "undefined" ? "undefined" : (0, _typeof3.default)(i),
					    n = "object" === s && null !== i;return void c(n, "%s: You're attempting to include a mixin that is either null or not an object. Check the mixins included by the component, as well as any mixins they include themselves. Expected object but got %s.", t.displayName || "ReactClass", null === i ? null : s);
				}l("function" != typeof i, "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."), l(!e(i), "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");var r = t.prototype,
				    o = r.__reactAutoBindPairs;i.hasOwnProperty(d) && T.mixins(t, i.mixins);for (var a in i) {
					if (i.hasOwnProperty(a) && a !== d) {
						var p = i[a],
						    h = r.hasOwnProperty(a);if (u(h, a), T.hasOwnProperty(a)) T[a](t, p);else {
							var f = b.hasOwnProperty(a),
							    v = "function" == typeof p,
							    m = v && !f && !h && i.autobind !== !1;if (m) o.push(a, p), r[a] = p;else if (h) {
								var S = b[a];l(f && ("DEFINE_MANY_MERGED" === S || "DEFINE_MANY" === S), "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.", S, a), "DEFINE_MANY_MERGED" === S ? r[a] = g(r[a], p) : "DEFINE_MANY" === S && (r[a] = y(r[a], p));
							} else r[a] = p, "function" == typeof p && i.displayName && (r[a].displayName = i.displayName + "_" + a);
						}
					}
				}
			}function h(t, e) {
				if (e) for (var i in e) {
					var s = e[i];if (e.hasOwnProperty(i)) {
						var n = i in T;l(!n, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', i);var r = i in t;l(!r, "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", i), t[i] = s;
					}
				}
			}function f(t, e) {
				l(t && e && "object" == (typeof t === "undefined" ? "undefined" : (0, _typeof3.default)(t)) && "object" == (typeof e === "undefined" ? "undefined" : (0, _typeof3.default)(e)), "mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.");for (var i in e) {
					e.hasOwnProperty(i) && (l(void 0 === t[i], "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.", i), t[i] = e[i]);
				}return t;
			}function g(t, e) {
				return function () {
					var i = t.apply(this, arguments),
					    s = e.apply(this, arguments);if (null == i) return s;if (null == s) return i;var n = {};return f(n, i), f(n, s), n;
				};
			}function y(t, e) {
				return function () {
					t.apply(this, arguments), e.apply(this, arguments);
				};
			}function v(t, e) {
				var i = e.bind(t);i.__reactBoundContext = t, i.__reactBoundMethod = e, i.__reactBoundArguments = null;var s = t.constructor.displayName,
				    n = i.bind;return i.bind = function (r) {
					for (var o = arguments.length, a = Array(o > 1 ? o - 1 : 0), l = 1; l < o; l++) {
						a[l - 1] = arguments[l];
					}if (r !== t && null !== r) c(!1, "bind(): React component methods may only be bound to the component instance. See %s", s);else if (!a.length) return c(!1, "bind(): You are binding a component method to the component. React does this for you automatically in a high-performance way, so you can safely remove this call. See %s", s), i;var d = n.apply(i, arguments);return d.__reactBoundContext = t, d.__reactBoundMethod = e, d.__reactBoundArguments = a, d;
				}, i;
			}function m(t) {
				for (var e = t.__reactAutoBindPairs, i = 0; i < e.length; i += 2) {
					var s = e[i],
					    n = e[i + 1];t[s] = v(t, n);
				}
			}function S(t) {
				var e = s(function (t, s, n) {
					c(this instanceof e, "Something is calling a React component directly. Use a factory or JSX instead. See: https://fb.me/react-legacyfactory"), this.__reactAutoBindPairs.length && m(this), this.props = t, this.context = s, this.refs = a, this.updater = n || i, this.state = null;var r = this.getInitialState ? this.getInitialState() : null;void 0 === r && this.getInitialState._isMockFunction && (r = null), l("object" == (typeof r === "undefined" ? "undefined" : (0, _typeof3.default)(r)) && !Array.isArray(r), "%s.getInitialState(): must return an object or null", e.displayName || "ReactCompositeComponent"), this.state = r;
				});e.prototype = new E(), e.prototype.constructor = e, e.prototype.__reactAutoBindPairs = [], w.forEach(p.bind(null, e)), p(e, k), p(e, t), p(e, x), e.getDefaultProps && (e.defaultProps = e.getDefaultProps()), e.getDefaultProps && (e.getDefaultProps.isReactClassApproved = {}), e.prototype.getInitialState && (e.prototype.getInitialState.isReactClassApproved = {}), l(e.prototype.render, "createClass(...): Class specification must implement a `render` method."), c(!e.prototype.componentShouldUpdate, "%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", t.displayName || "A component"), c(!e.prototype.componentWillRecieveProps, "%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", t.displayName || "A component");for (var n in b) {
					e.prototype[n] || (e.prototype[n] = null);
				}return e;
			}var w = [],
			    b = { mixins: "DEFINE_MANY", statics: "DEFINE_MANY", propTypes: "DEFINE_MANY", contextTypes: "DEFINE_MANY", childContextTypes: "DEFINE_MANY", getDefaultProps: "DEFINE_MANY_MERGED", getInitialState: "DEFINE_MANY_MERGED", getChildContext: "DEFINE_MANY_MERGED", render: "DEFINE_ONCE", componentWillMount: "DEFINE_MANY", componentDidMount: "DEFINE_MANY", componentWillReceiveProps: "DEFINE_MANY", shouldComponentUpdate: "DEFINE_ONCE", componentWillUpdate: "DEFINE_MANY", componentDidUpdate: "DEFINE_MANY", componentWillUnmount: "DEFINE_MANY", updateComponent: "OVERRIDE_BASE" },
			    T = { displayName: function displayName(t, e) {
					t.displayName = e;
				}, mixins: function mixins(t, e) {
					if (e) for (var i = 0; i < e.length; i++) {
						p(t, e[i]);
					}
				}, childContextTypes: function childContextTypes(t, e) {
					n(t, e, "childContext"), t.childContextTypes = o({}, t.childContextTypes, e);
				}, contextTypes: function contextTypes(t, e) {
					n(t, e, "context"), t.contextTypes = o({}, t.contextTypes, e);
				}, getDefaultProps: function getDefaultProps(t, e) {
					t.getDefaultProps ? t.getDefaultProps = g(t.getDefaultProps, e) : t.getDefaultProps = e;
				}, propTypes: function propTypes(t, e) {
					n(t, e, "prop"), t.propTypes = o({}, t.propTypes, e);
				}, statics: function statics(t, e) {
					h(t, e);
				}, autobind: function autobind() {} },
			    k = { componentDidMount: function componentDidMount() {
					this.__isMounted = !0;
				} },
			    x = { componentWillUnmount: function componentWillUnmount() {
					this.__isMounted = !1;
				} },
			    C = { replaceState: function replaceState(t, e) {
					this.updater.enqueueReplaceState(this, t, e);
				}, isMounted: function isMounted() {
					return c(this.__didWarnIsMounted, "%s: isMounted is deprecated. Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.", this.constructor && this.constructor.displayName || this.name || "Component"), this.__didWarnIsMounted = !0, !!this.__isMounted;
				} },
			    E = function E() {};return o(E.prototype, t.prototype, C), S;
		}var r,
		    o = i(7),
		    a = i(13),
		    l = i(14),
		    c = i(15),
		    d = "mixins";r = { prop: "prop", context: "context", childContext: "child context" }, t.exports = n;
	}, function (t, e, i) {
		"use strict";
		var s = {};Object.freeze(s), t.exports = s;
	}, function (t, e, i) {
		"use strict";
		function s(t, e, i, s, r, o, a, l) {
			if (n(e), !t) {
				var c;if (void 0 === e) c = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
					var d = [i, s, r, o, a, l],
					    u = 0;c = new Error(e.replace(/%s/g, function () {
						return d[u++];
					})), c.name = "Invariant Violation";
				}throw c.framesToPop = 1, c;
			}
		}var n = function n(t) {};n = function n(t) {
			if (void 0 === t) throw new Error("invariant requires an error message argument");
		}, t.exports = s;
	}, function (t, e, i) {
		"use strict";
		var s = i(16),
		    n = s,
		    r = function r(t) {
			for (var e = arguments.length, i = Array(e > 1 ? e - 1 : 0), s = 1; s < e; s++) {
				i[s - 1] = arguments[s];
			}var n = 0,
			    r = "Warning: " + t.replace(/%s/g, function () {
				return i[n++];
			});"undefined" != typeof console && console.error(r);try {
				throw new Error(r);
			} catch (t) {}
		};n = function n(t, e) {
			if (void 0 === e) throw new Error("`warning(condition, format, ...args)` requires a warning message argument");if (0 !== e.indexOf("Failed Composite propType: ") && !t) {
				for (var i = arguments.length, s = Array(i > 2 ? i - 2 : 0), n = 2; n < i; n++) {
					s[n - 2] = arguments[n];
				}r.apply(void 0, [e].concat(s));
			}
		}, t.exports = n;
	}, function (t, e) {
		"use strict";
		function i(t) {
			return function () {
				return t;
			};
		}var s = function s() {};s.thatReturns = i, s.thatReturnsFalse = i(!1), s.thatReturnsTrue = i(!0), s.thatReturnsNull = i(null), s.thatReturnsThis = function () {
			return this;
		}, s.thatReturnsArgument = function (t) {
			return t;
		}, t.exports = s;
	}, function (t, e, i) {
		var s, n; /*!
            Copyright (c) 2016 Jed Watson.
            Licensed under the MIT License (MIT), see
            http://jedwatson.github.io/classnames
            */
		!function () {
			"use strict";
			function i() {
				for (var t = [], e = 0; e < arguments.length; e++) {
					var s = arguments[e];if (s) {
						var n = typeof s === "undefined" ? "undefined" : (0, _typeof3.default)(s);if ("string" === n || "number" === n) t.push(s);else if (Array.isArray(s)) t.push(i.apply(null, s));else if ("object" === n) for (var o in s) {
							r.call(s, o) && s[o] && t.push(o);
						}
					}
				}return t.join(" ");
			}var r = {}.hasOwnProperty;"undefined" != typeof t && t.exports ? t.exports = i : (s = [], n = function () {
				return i;
			}.apply(e, s), !(void 0 !== n && (t.exports = n)));
		}();
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t && t.__esModule ? t : { default: t };
		}function n(t, e) {
			if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
		}function r(t, e) {
			if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !e || "object" != (typeof e === "undefined" ? "undefined" : (0, _typeof3.default)(e)) && "function" != typeof e ? t : e;
		}function o(t, e) {
			if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + (typeof e === "undefined" ? "undefined" : (0, _typeof3.default)(e)));t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
		}e.__esModule = !0, e.Track = void 0;var a = i(2),
		    l = s(a),
		    c = i(7),
		    d = s(c),
		    u = i(17),
		    p = s(u),
		    h = function h(t) {
			var e, i, s, n, r;return r = t.rtl ? t.slideCount - 1 - t.index : t.index, s = r < 0 || r >= t.slideCount, t.centerMode ? (n = Math.floor(t.slidesToShow / 2), i = (r - t.currentSlide) % t.slideCount === 0, r > t.currentSlide - n - 1 && r <= t.currentSlide + n && (e = !0)) : e = t.currentSlide <= r && r < t.currentSlide + t.slidesToShow, (0, p.default)({ "slick-slide": !0, "slick-active": e, "slick-center": i, "slick-cloned": s });
		},
		    f = function f(t) {
			var e = {};return void 0 !== t.variableWidth && t.variableWidth !== !1 || (e.width = t.slideWidth), t.fade && (e.position = "relative", e.left = -t.index * t.slideWidth, e.opacity = t.currentSlide === t.index ? 1 : 0, e.transition = "opacity " + t.speed + "ms " + t.cssEase, e.WebkitTransition = "opacity " + t.speed + "ms " + t.cssEase), e;
		},
		    g = function g(t, e) {
			return null === t.key || void 0 === t.key ? e : t.key;
		},
		    y = function y(t) {
			var e,
			    i = [],
			    s = [],
			    n = [],
			    r = l.default.Children.count(t.children);return l.default.Children.forEach(t.children, function (o, a) {
				var c = void 0,
				    u = { message: "children", index: a, slidesToScroll: t.slidesToScroll, currentSlide: t.currentSlide };c = !t.lazyLoad | (t.lazyLoad && t.lazyLoadedList.indexOf(a) >= 0) ? o : l.default.createElement("div", null);var y = f((0, d.default)({}, t, { index: a })),
				    v = c.props.className || "",
				    m = function m(e) {
					c.props && c.props.onClick && c.props.onClick(e), t.focusOnSelect && t.focusOnSelect(u);
				};if (i.push(l.default.cloneElement(c, { key: "original" + g(c, a), "data-index": a, className: (0, p.default)(h((0, d.default)({ index: a }, t)), v), tabIndex: "-1", style: (0, d.default)({ outline: "none" }, c.props.style || {}, y), onClick: m })), t.infinite && t.fade === !1) {
					var S = t.variableWidth ? t.slidesToShow + 1 : t.slidesToShow;a >= r - S && (e = -(r - a), s.push(l.default.cloneElement(c, { key: "precloned" + g(c, e), "data-index": e, className: (0, p.default)(h((0, d.default)({ index: e }, t)), v), style: (0, d.default)({}, c.props.style || {}, y), onClick: m }))), a < S && (e = r + a, n.push(l.default.cloneElement(c, { key: "postcloned" + g(c, e), "data-index": e, className: (0, p.default)(h((0, d.default)({ index: e }, t)), v), style: (0, d.default)({}, c.props.style || {}, y), onClick: m })));
				}
			}), t.rtl ? s.concat(i, n).reverse() : s.concat(i, n);
		};e.Track = function (t) {
			function e() {
				return n(this, e), r(this, t.apply(this, arguments));
			}return o(e, t), e.prototype.render = function () {
				var t = y.call(this, this.props);return l.default.createElement("div", { className: "slick-track", style: this.props.trackStyle }, t);
			}, e;
		}(l.default.Component);
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t && t.__esModule ? t : { default: t };
		}function n(t, e) {
			if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
		}function r(t, e) {
			if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !e || "object" != (typeof e === "undefined" ? "undefined" : (0, _typeof3.default)(e)) && "function" != typeof e ? t : e;
		}function o(t, e) {
			if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + (typeof e === "undefined" ? "undefined" : (0, _typeof3.default)(e)));t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
		}e.__esModule = !0, e.Dots = void 0;var a = i(2),
		    l = s(a),
		    c = i(17),
		    d = s(c),
		    u = function u(t) {
			var e;return e = Math.ceil(t.slideCount / t.slidesToScroll);
		};e.Dots = function (t) {
			function e() {
				return n(this, e), r(this, t.apply(this, arguments));
			}return o(e, t), e.prototype.clickHandler = function (t, e) {
				e.preventDefault(), this.props.clickHandler(t);
			}, e.prototype.render = function () {
				var t = this,
				    e = u({ slideCount: this.props.slideCount, slidesToScroll: this.props.slidesToScroll }),
				    i = Array.apply(null, Array(e + 1).join("0").split("")).map(function (e, i) {
					var s = i * t.props.slidesToScroll,
					    n = i * t.props.slidesToScroll + (t.props.slidesToScroll - 1),
					    r = (0, d.default)({ "slick-active": t.props.currentSlide >= s && t.props.currentSlide <= n }),
					    o = { message: "dots", index: i, slidesToScroll: t.props.slidesToScroll, currentSlide: t.props.currentSlide },
					    a = t.clickHandler.bind(t, o);return l.default.createElement("li", { key: i, className: r }, l.default.cloneElement(t.props.customPaging(i), { onClick: a }));
				});return l.default.createElement("ul", { className: this.props.dotsClass, style: { display: "block" } }, i);
			}, e;
		}(l.default.Component);
	}, function (t, e, i) {
		"use strict";
		function s(t) {
			return t && t.__esModule ? t : { default: t };
		}function n(t, e) {
			if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
		}function r(t, e) {
			if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !e || "object" != (typeof e === "undefined" ? "undefined" : (0, _typeof3.default)(e)) && "function" != typeof e ? t : e;
		}function o(t, e) {
			if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + (typeof e === "undefined" ? "undefined" : (0, _typeof3.default)(e)));t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
		}e.__esModule = !0, e.NextArrow = e.PrevArrow = void 0;var a = Object.assign || function (t) {
			for (var e = 1; e < arguments.length; e++) {
				var i = arguments[e];for (var s in i) {
					Object.prototype.hasOwnProperty.call(i, s) && (t[s] = i[s]);
				}
			}return t;
		},
		    l = i(2),
		    c = s(l),
		    d = i(17),
		    u = s(d),
		    p = i(8),
		    h = s(p);e.PrevArrow = function (t) {
			function e() {
				return n(this, e), r(this, t.apply(this, arguments));
			}return o(e, t), e.prototype.clickHandler = function (t, e) {
				e && e.preventDefault(), this.props.clickHandler(t, e);
			}, e.prototype.render = function () {
				var t = { "slick-arrow": !0, "slick-prev": !0 },
				    e = this.clickHandler.bind(this, { message: "previous" });!this.props.infinite && (0 === this.props.currentSlide || this.props.slideCount <= this.props.slidesToShow) && (t["slick-disabled"] = !0, e = null);var i,
				    s = { key: "0", "data-role": "none", className: (0, u.default)(t), style: { display: "block" }, onClick: e },
				    n = { currentSlide: this.props.currentSlide, slideCount: this.props.slideCount };return i = this.props.prevArrow ? c.default.cloneElement(this.props.prevArrow, a({}, s, n)) : c.default.createElement("button", a({ key: "0", type: "button" }, s), " Previous");
			}, e;
		}(c.default.Component), e.NextArrow = function (t) {
			function e() {
				return n(this, e), r(this, t.apply(this, arguments));
			}return o(e, t), e.prototype.clickHandler = function (t, e) {
				e && e.preventDefault(), this.props.clickHandler(t, e);
			}, e.prototype.render = function () {
				var t = { "slick-arrow": !0, "slick-next": !0 },
				    e = this.clickHandler.bind(this, { message: "next" });h.default.canGoNext(this.props) || (t["slick-disabled"] = !0, e = null);var i,
				    s = { key: "1", "data-role": "none", className: (0, u.default)(t), style: { display: "block" }, onClick: e },
				    n = { currentSlide: this.props.currentSlide, slideCount: this.props.slideCount };return i = this.props.nextArrow ? c.default.cloneElement(this.props.nextArrow, a({}, s, n)) : c.default.createElement("button", a({ key: "1", type: "button" }, s), " Next");
			}, e;
		}(c.default.Component);
	}, function (t, e, i) {
		var s = i(22),
		    n = function n(t) {
			var e = /[height|width]$/;return e.test(t);
		},
		    r = function r(t) {
			var e = "",
			    i = Object.keys(t);return i.forEach(function (r, o) {
				var a = t[r];r = s(r), n(r) && "number" == typeof a && (a += "px"), e += a === !0 ? r : a === !1 ? "not " + r : "(" + r + ": " + a + ")", o < i.length - 1 && (e += " and ");
			}), e;
		},
		    o = function o(t) {
			var e = "";return "string" == typeof t ? t : t instanceof Array ? (t.forEach(function (i, s) {
				e += r(i), s < t.length - 1 && (e += ", ");
			}), e) : r(t);
		};t.exports = o;
	}, function (t, e) {
		var i = function i(t) {
			return t.replace(/[A-Z]/g, function (t) {
				return "-" + t.toLowerCase();
			}).toLowerCase();
		};t.exports = i;
	}, function (t, e) {
		var i = !("undefined" == typeof window || !window.document || !window.document.createElement);t.exports = i;
	}, function (t, e, i) {
		var s = i(25);t.exports = new s();
	}, function (t, e, i) {
		function s() {
			if (!window.matchMedia) throw new Error("matchMedia not present, legacy browsers require a polyfill");this.queries = {}, this.browserIsIncapable = !window.matchMedia("only all").matches;
		}var n = i(26),
		    r = i(28),
		    o = r.each,
		    a = r.isFunction,
		    l = r.isArray;s.prototype = { constructor: s, register: function register(t, e, i) {
				var s = this.queries,
				    r = i && this.browserIsIncapable;return s[t] || (s[t] = new n(t, r)), a(e) && (e = { match: e }), l(e) || (e = [e]), o(e, function (e) {
					a(e) && (e = { match: e }), s[t].addHandler(e);
				}), this;
			}, unregister: function unregister(t, e) {
				var i = this.queries[t];return i && (e ? i.removeHandler(e) : (i.clear(), delete this.queries[t])), this;
			} }, t.exports = s;
	}, function (t, e, i) {
		function s(t, e) {
			this.query = t, this.isUnconditional = e, this.handlers = [], this.mql = window.matchMedia(t);var i = this;this.listener = function (t) {
				i.mql = t.currentTarget || t, i.assess();
			}, this.mql.addListener(this.listener);
		}var n = i(27),
		    r = i(28).each;s.prototype = { constuctor: s, addHandler: function addHandler(t) {
				var e = new n(t);this.handlers.push(e), this.matches() && e.on();
			}, removeHandler: function removeHandler(t) {
				var e = this.handlers;r(e, function (i, s) {
					if (i.equals(t)) return i.destroy(), !e.splice(s, 1);
				});
			}, matches: function matches() {
				return this.mql.matches || this.isUnconditional;
			}, clear: function clear() {
				r(this.handlers, function (t) {
					t.destroy();
				}), this.mql.removeListener(this.listener), this.handlers.length = 0;
			}, assess: function assess() {
				var t = this.matches() ? "on" : "off";r(this.handlers, function (e) {
					e[t]();
				});
			} }, t.exports = s;
	}, function (t, e) {
		function i(t) {
			this.options = t, !t.deferSetup && this.setup();
		}i.prototype = { constructor: i, setup: function setup() {
				this.options.setup && this.options.setup(), this.initialised = !0;
			}, on: function on() {
				!this.initialised && this.setup(), this.options.match && this.options.match();
			}, off: function off() {
				this.options.unmatch && this.options.unmatch();
			}, destroy: function destroy() {
				this.options.destroy ? this.options.destroy() : this.off();
			}, equals: function equals(t) {
				return this.options === t || this.options.match === t;
			} }, t.exports = i;
	}, function (t, e) {
		function i(t, e) {
			var i,
			    s = 0,
			    n = t.length;for (s; s < n && (i = e(t[s], s), i !== !1); s++) {}
		}function s(t) {
			return "[object Array]" === Object.prototype.toString.apply(t);
		}function n(t) {
			return "function" == typeof t;
		}t.exports = { isFunction: n, isArray: s, each: i };
	}]);
});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1252)(module)))

/***/ }),

/***/ 1252:
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ 1253:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ModelInfoBlock = undefined;

var _toConsumableArray2 = __webpack_require__(316);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _axios = __webpack_require__(149);

var _axios2 = _interopRequireDefault(_axios);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactSlick = __webpack_require__(929);

var _reactSlick2 = _interopRequireDefault(_reactSlick);

var _reactRedux = __webpack_require__(313);

var _redux = __webpack_require__(148);

var _basket = __webpack_require__(327);

var basketActions = _interopRequireWildcard(_basket);

var _addToBasketEffect = __webpack_require__(950);

var _addToBasketEffect2 = _interopRequireDefault(_addToBasketEffect);

var _addToWishlistEffect = __webpack_require__(1058);

var _addToWishlistEffect2 = _interopRequireDefault(_addToWishlistEffect);

var _additionalInfoBlock = __webpack_require__(1181);

var _additionalInfoBlock2 = _interopRequireDefault(_additionalInfoBlock);

var _soldoutInfoBlock = __webpack_require__(1182);

var _soldoutInfoBlock2 = _interopRequireDefault(_soldoutInfoBlock);

var _modelInfoBlockImage = __webpack_require__(1183);

var _modelInfoBlockImage2 = _interopRequireDefault(_modelInfoBlockImage);

var _warrantyLightbox = __webpack_require__(1254);

var _warrantyLightbox2 = _interopRequireDefault(_warrantyLightbox);

var _specificationsBlock = __webpack_require__(1255);

var _specificationsBlock2 = _interopRequireDefault(_specificationsBlock);

var _usefullProductItem = __webpack_require__(1278);

var _usefullProductItem2 = _interopRequireDefault(_usefullProductItem);

var _helpersFunction = __webpack_require__(315);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var usefulProducts = [{ id: 1, text: '3D Tempered Glas (Panzerglas) schwarz für iPhone 12', img: '/images/usefull2.png', cost: 39, toggle: true }, { id: 2, text: 'Apple Lightning auf USB-Kabel, 2 Meter, weiss, original', img: '/images/usefull1.png', cost: 29, toggle: false }, { id: 3, text: '3D Tempered Glas (Panzerglas) schwarz für iPhone 12', img: '/images/usefull2.png', cost: 39, toggle: true }, { id: 4, text: 'Apple Lightning auf USB-Kabel, 2 Meter, weiss, original', img: '/images/usefull1.png', cost: 29, toggle: false }, { id: 5, text: 'Apple Lightning auf USB-Kabel, 2 Meter, weiss, original', img: '/images/usefull1.png', cost: 29, toggle: false }, { id: 6, text: 'Apple Lightning auf USB-Kabel, 2 Meter, weiss, original', img: '/images/usefull1.png', cost: 29, toggle: false }];

var ModelInfoBlock = exports.ModelInfoBlock = function (_Component) {
    (0, _inherits3.default)(ModelInfoBlock, _Component);

    function ModelInfoBlock(props) {
        (0, _classCallCheck3.default)(this, ModelInfoBlock);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ModelInfoBlock.__proto__ || Object.getPrototypeOf(ModelInfoBlock)).call(this, props));

        _this.countdown = null;
        _this.state = {
            blockImage: {
                currentMainImage: '',
                isOpenLightBox: false,
                currentImageLightBox: 0
            },
            showWarrantyLightbox: false,
            isRemarketingCampaign: false,
            deadline: "false" || _this.props.isRemarketingCampaign,
            deadlineIsActive: false,
            deadlineExpired: false,
            deadlineTimer: '',
            activeNavItem: 'purchase',
            productIsAddedToWishlist: false,
            bottomActive: 'buy',
            firstLoaded: true
        };

        _this.clickSmallImg = _this.clickSmallImg.bind(_this);
        _this.openLightBox = _this.openLightBox.bind(_this);
        _this.closeLightBox = _this.closeLightBox.bind(_this);
        _this.addModelToBasket = _this.addModelToBasket.bind(_this);
        _this.handleAddModelToBasket = _this.handleAddModelToBasket.bind(_this);
        _this.addUpsellingModelToBasket = _this.addUpsellingModelToBasket.bind(_this);
        _this.toggleWarrantyLightbox = _this.toggleWarrantyLightbox.bind(_this);
        _this.updateCountDown = _this.updateCountDown.bind(_this);
        _this.activateCountDownCoupon = _this.activateCountDownCoupon.bind(_this);
        _this.clickNavItem = _this.clickNavItem.bind(_this);
        _this.clickBottomItem = _this.clickBottomItem.bind(_this);
        _this.addModelToWishlist = _this.addModelToWishlist.bind(_this);
        _this.slideItem = _this.slideItem.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(ModelInfoBlock, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            $('#intercom-container .intercom-launcher-frame').attr('style', 'bottom:20px !important');
            $('#tidio-chat #tidio-chat-iframe').css({
                bottom: "-10px",
                right: "10px"
            });
            $('body .fixedBtnDetail').remove();
            clearInterval(this.countdown);
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this2 = this;

            if (window.isMobile) {
                if ($('#intercom-container').length > 0) {
                    $('#intercom-container .intercom-launcher-frame').removeAttr('style');
                    $('#intercom-container').before('<div class="fixedBtnDetail"></div>');
                }
                if ($('#tidio-chat').length > 0) {
                    $('#tidio-chat').before('<div class="fixedBtnDetail"></div>');
                } else $('body').append('<div class="fixedBtnDetail"></div>');
            }
            var deadline = JSON.parse(window.localStorage.getItem('deadline'));
            if (true) {
                if (!document.getElementById("numeric-timer")) {
                    setTimeout(function () {
                        _this2.setState({ deadline: false });
                        _this2.updateCountDown();
                    }, 1000);
                } else {
                    this.setState({ deadline: false });
                    this.updateCountDown();
                }

                // Update the count down every 1 min
                this.countdown = setInterval(function () {
                    _this2.setState({ deadline: false });
                    _this2.updateCountDown();
                }, 60000);
            } else {
                window.localStorage.removeItem("deadline");
            }
        }
    }, {
        key: "componentWillMount",
        value: function componentWillMount() {
            if (this.props.currentModel.length > 0) {
                this.setState({ blockImage: (0, _extends3.default)({}, this.state.blockImage, { currentMainImage: this.props.currentModel[0].deviceImages.mainImg.src }) });
            }
            var deadline = JSON.parse(window.localStorage.getItem('deadline')),
                isRemarketingCampaign = this.props.isRemarketingCampaign;
            if (isRemarketingCampaign) {
                this.setState({ deadline: true });
                if (deadline) {
                    this.setState({ isRemarketingCampaign: true });
                    deadline.isRemarketingCampaign = true;
                    window.localStorage.setItem('deadline', JSON.stringify(deadline));
                } else {
                    var countDownDate = new Date();
                    countDownDate.setHours(countDownDate.getHours() + 3);
                    deadline = { countDownDate: countDownDate, isActive: 0, deadlineExpired: 0, couponShortcode: '', isRemarketingCampaign: true };
                    window.localStorage.setItem('deadline', JSON.stringify(deadline));
                }
            }
            if (deadline && deadline.isActive) {
                this.setState({ deadlineIsActive: true });
            }
            if (deadline && deadline.deadlineExpired) {
                this.setState({ deadlineExpired: true });
            }
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.currentModel !== this.props.currentModel) {
                this.setState({ blockImage: (0, _extends3.default)({}, this.state.blockImage, { currentMainImage: nextProps.currentModel[0].deviceImages.mainImg.src }) });
            }
        }
    }, {
        key: "updateCountDown",
        value: function updateCountDown() {
            this.setState({ deadline: true });
            var deadline = JSON.parse(window.localStorage.getItem('deadline')),
                numericTimer = document.getElementById("numeric-timer");
            if (deadline && deadline.deadlineExpired) {
                this.setState({ deadlineExpired: true });
                clearInterval(this.countdown);
                return;
            }
            if (deadline && deadline.isActive) {
                this.setState({ deadlineIsActive: true });
            }
            if (!deadline) {
                var countDownDate = new Date();
                countDownDate.setHours(countDownDate.getHours() + 3);
                deadline = { countDownDate: countDownDate, isActive: 0, deadlineExpired: 0, couponShortcode: '' };
                window.localStorage.setItem('deadline', JSON.stringify(deadline));
            }

            // Get today's date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = new Date(deadline.countDownDate).getTime() - now;
            // Time calculations for days, hours, minutes and seconds
            var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));
            var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));
            var seconds = Math.floor(distance % (1000 * 60) / 1000);
            // Display the result in the element with id="numericTimer"
            var deadlineTimer = hours + "Std. " + minutes + "Min. verbleiben";
            this.setState({ deadlineTimer: deadlineTimer });
            // if(numericTimer){
            //     numericTimer.innerHTML = hours + "Std. " + minutes + "Min. verbleiben"
            // }
            // If the count down is finished
            if (distance <= 0) {
                deadline.deadlineExpired = 1;
                window.localStorage.setItem('deadline', JSON.stringify(deadline));
                clearInterval(this.countdown);
                this.setState({ deadlineExpired: true });
            }
        }
    }, {
        key: "activateCountDownCoupon",
        value: function activateCountDownCoupon(e) {
            var deadline = JSON.parse(window.localStorage.getItem('deadline'));
            if (deadline) {
                deadline.isActive = 1;
                this.setState({ deadlineIsActive: true });
                window.localStorage.setItem('deadline', JSON.stringify(deadline));

                if (!deadline.couponShortcode) {
                    _axios2.default.get("/api/generateCountDownCoupon").then(function (result) {
                        deadline.couponShortcode = result.data.shortcode;
                        window.localStorage.setItem('deadline', JSON.stringify(deadline));
                    }).catch(function (error) {
                        console.log('error', error.response.data);
                    });
                }
            }

            var currentModel = this.props.currentModel,
                basketData = this.props.basketData;

            if (!basketData.find(function (item) {
                return item.shortcode == currentModel[0].shortcode;
            })) {
                this.addModelToBasket(e);
            }
        }
    }, {
        key: "toggleWarrantyLightbox",
        value: function toggleWarrantyLightbox() {
            this.setState({ showWarrantyLightbox: !this.state.showWarrantyLightbox });
        }
    }, {
        key: "clickSmallImg",
        value: function clickSmallImg(e) {
            this.setState({ blockImage: (0, _extends3.default)({}, this.state.blockImage, { currentMainImage: e.target.getAttribute('src') }) });
        }
    }, {
        key: "openLightBox",
        value: function openLightBox() {
            var _this3 = this;

            $('.zoomContainer').remove();
            var position = null;
            [].concat(this.props.currentModel[0].deviceImages.mainImg, this.props.currentModel[0].deviceImages.realImg).forEach(function (item, i) {
                // find current image position, for LightBox
                if (item.src === _this3.state.blockImage.currentMainImage) position = i;
            });
            this.setState({ blockImage: (0, _extends3.default)({}, this.state.blockImage, { isOpenLightBox: true, currentImageLightBox: position }) });
        }
    }, {
        key: "closeLightBox",
        value: function closeLightBox() {
            $('#zoom_01').elevateZoom({ zoomType: "inner" });
            this.setState({ blockImage: (0, _extends3.default)({}, this.state.blockImage, { isOpenLightBox: false }) });
        }
    }, {
        key: "mapCriterias",
        value: function mapCriterias() {
            var _this4 = this;

            var _props$currentModel$ = this.props.currentModel[0],
                criterias = _props$currentModel$.criterias,
                conditionId = _props$currentModel$.conditionId,
                dataArr = [];

            criterias.forEach(function (item) {
                if (conditionId === 1) return false;
                if (item.name !== _this4.props.capacityName) {
                    dataArr.push(_react2.default.createElement(
                        "span",
                        { key: item.id, className: "modelValues-small criteria-" + item.id + " col-xs-4" },
                        _react2.default.createElement(
                            "span",
                            null,
                            item.name,
                            ":"
                        ),
                        _react2.default.createElement("br", null),
                        _react2.default.createElement(
                            "span",
                            null,
                            item.values.map(function (item, i) {
                                return _react2.default.createElement(
                                    "b",
                                    { key: "mapCriteriasValue-" + i },
                                    item.name,
                                    i < item.length - 1 ? ',' : ''
                                );
                            })
                        )
                    ));
                }
            });
            return dataArr;
        }
    }, {
        key: "addModelToBasket",
        value: function addModelToBasket(e) {
            var _this5 = this;

            var status = e.target.getAttribute('data-status'),
                source = e.target.getAttribute('data-source'),
                _props = this.props,
                currentModel = _props.currentModel,
                basketData = _props.basketData,
                bottomActive = this.state.bottomActive,
                newBasketData = null;


            if (!status) {
                status = basketData.some(function (item) {
                    return item.shortcode === currentModel[0].shortcode;
                }) ? 'in' : 'out';
            }

            if (!source) {
                source = 'quickViewPage';
            }

            if (basketData.every(function (item) {
                return item.id != currentModel[0].id;
            })) {
                newBasketData = [].concat((0, _toConsumableArray3.default)(basketData), [currentModel[0]]);
            } else {
                newBasketData = basketData.filter(function (item) {
                    return item.shortcode != currentModel[0].shortcode;
                });
            }

            this.props.basketActions.changeBasketData(newBasketData);
            var gtagData = JSON.parse(window.localStorage.getItem("gtag"));
            if (status === 'out') {
                gtag('event', 'add_to_cart', {
                    "items": [{
                        "id": currentModel[0].shortcode,
                        "name": currentModel[0].descriptionLong,
                        "list_name": "Kaufen",
                        "quantity": 1,
                        "price": currentModel[0].discountPrice || currentModel[0].price,
                        "category": gtagData.category || '',
                        "brand": currentModel[0].deviceName
                    }]
                });
                if (!window.isMobile) {
                    this.props.basketActions.basketAddEffect(_react2.default.createElement(_addToBasketEffect2.default, { startPosition: $(e.target).offset(),
                        image: currentModel[0].deviceImages.mainImg.src,
                        basketType: "kaufen" }));
                    setTimeout(function () {
                        if (_this5.props.quickPreview) {
                            _this5.props.handleCloseQuickView();
                        }
                        _this5.props.openSuccessAddToBasket(currentModel[0], _this5.props.quickPreview ? source : 'detailPage');
                        _this5.props.basketActions.basketAddEffect(null);
                    }, 2000);
                } else {
                    if (bottomActive === 'buy') {
                        $("#buyAddBasket").addClass("sendtocart");
                        setTimeout(function () {
                            $("#buyAddBasket").removeClass('sendtocart');
                        }, 1500);
                    }
                    if (bottomActive === 'installment') {
                        $("#installmentAddBasket").addClass("sendtocart");
                        setTimeout(function () {
                            $("#installmentAddBasket").removeClass('sendtocart');
                        }, 1500);
                    }
                    // browserHistory.push('/warenkorb')
                }
            }
            if (status === 'in') {
                gtag('event', 'remove_from_cart', {
                    "items": [{
                        "id": currentModel[0].shortcode,
                        "name": currentModel[0].descriptionLong,
                        "list_name": "Kaufen",
                        "quantity": 1,
                        "price": currentModel[0].discountPrice || currentModel[0].price,
                        "category": gtagData.category || '',
                        "brand": currentModel[0].deviceName
                    }]
                });
                if (!newBasketData.length || !newBasketData.filter(function (item) {
                    return item.productTypeId == 7;
                }).length) {
                    var deadline = JSON.parse(window.localStorage.getItem('deadline'));
                    if (deadline) {
                        deadline.isActive = 0;
                        window.localStorage.setItem('deadline', JSON.stringify(deadline));
                        newBasketData = newBasketData.filter(function (item) {
                            return item.shortcode != deadline.couponShortcode;
                        });
                        this.setState({ deadlineIsActive: false });
                        this.props.basketActions.changeBasketData(newBasketData);
                    }
                    if (true) {
                        if (!document.getElementById("numeric-timer")) {
                            setTimeout(function () {
                                _this5.setState({ deadline: false });
                                _this5.updateCountDown();
                            }, 1000);
                        } else {
                            this.setState({ deadline: false });
                            this.updateCountDown();
                        }
                    }
                }
            }
        }
    }, {
        key: "addUpsellingModelToBasket",
        value: function addUpsellingModelToBasket(e, model) {
            var _this6 = this;

            var status = e.target.getAttribute('data-status'),
                basketData = this.props.basketData,
                newBasketData = null;


            if (basketData.every(function (item) {
                return item.id != model.id;
            })) {
                newBasketData = [].concat((0, _toConsumableArray3.default)(basketData), [model]);
            } else {
                newBasketData = basketData.filter(function (item) {
                    return item.shortcode != model.shortcode;
                });
            }

            this.props.basketActions.changeBasketData(newBasketData);
            var gtagData = JSON.parse(window.localStorage.getItem("gtag"));
            if (status === 'out') {
                gtag('event', 'add_to_cart', {
                    "items": [{
                        "id": model.shortcode,
                        "name": model.descriptionLong,
                        "list_name": "Kaufen",
                        "quantity": 1,
                        "price": model.discountPrice || model.price,
                        "category": gtagData.category || '',
                        "brand": model.deviceName
                    }]
                });
                if (!window.isMobile) {
                    this.props.basketActions.basketAddEffect(_react2.default.createElement(_addToBasketEffect2.default, { startPosition: $(e.target).offset(),
                        image: model.deviceImages.mainImg.src,
                        basketType: "kaufen" }));
                    setTimeout(function () {
                        _this6.props.basketActions.basketAddEffect(null);
                    }, 2000);
                }
            }
            if (status === 'in') {
                gtag('event', 'remove_from_cart', {
                    "items": [{
                        "id": model.shortcode,
                        "name": model.descriptionLong,
                        "list_name": "Kaufen",
                        "quantity": 1,
                        "price": model.discountPrice || model.price,
                        "category": gtagData.category || '',
                        "brand": model.deviceName
                    }]
                });
            }
        }
    }, {
        key: "addModelToWishlist",
        value: function addModelToWishlist(e, item) {
            var _this7 = this;

            e.stopPropagation();
            e.preventDefault();
            var wishlistData = this.props.wishlistData,
                newWishlistData = null;
            var status = '';
            if (wishlistData.every(function (itemWishlist) {
                return itemWishlist.id != item.id;
            })) {
                newWishlistData = [].concat((0, _toConsumableArray3.default)(wishlistData), [item]);
                status = 'add';
            } else {
                newWishlistData = wishlistData.filter(function (itemWishlist) {
                    return itemWishlist.shortcode != item.shortcode;
                });
                status = 'remove';
            }
            this.props.basketActions.changeWishlisteData(newWishlistData);
            this.setState({ productIsAddedToWishlist: !this.state.productIsAddedToWishlist });
            if (!window.isMobile && status === 'add') {
                this.props.basketActions.wishlistAddEffect(_react2.default.createElement(_addToWishlistEffect2.default, { startPosition: $(e.target).offset(),
                    image: item.deviceImages.mainImg.src }));
                setTimeout(function () {
                    _this7.props.basketActions.wishlistAddEffect(null);
                }, 2000);
            }
        }
    }, {
        key: "mapRealImg",
        value: function mapRealImg(item, i) {
            var className = this.state.blockImage.currentMainImage === item.src ? "col-xs-3 modelInfoBlock-img-small active" : "col-xs-3 modelInfoBlock-img-small";
            return _react2.default.createElement(
                "div",
                { className: className, key: "mapRealImg-" + i },
                _react2.default.createElement("img", { loading: "lazy", src: item.src, alt: "", onClick: this.clickSmallImg })
            );
        }
    }, {
        key: "clickNavItem",
        value: function clickNavItem(e) {
            var activeNavItem = e.currentTarget.getAttribute('data-type');
            this.setState({ activeNavItem: activeNavItem });
        }
    }, {
        key: "clickBottomItem",
        value: function clickBottomItem(bottomActive) {
            this.setState({ bottomActive: bottomActive });
        }
    }, {
        key: "slideItem",
        value: function slideItem(monthPrice, month) {
            return _react2.default.createElement(
                "span",
                { key: "slideItem-" + month, className: "priceRow" },
                _react2.default.createElement(
                    "span",
                    { className: 'monthPrice' },
                    (0, _helpersFunction.formatPrice)(monthPrice),
                    " ",
                    window.currencyValue
                ),
                _react2.default.createElement(
                    "span",
                    { className: 'monthDesc' },
                    "x ",
                    month,
                    " Monate"
                )
            );
        }
    }, {
        key: "handleAddModelToBasket",
        value: function handleAddModelToBasket(e, model) {
            this.setState({ firstLoaded: false });
            this.addModelToBasket(e, model);
        }
    }, {
        key: "render",
        value: function render() {
            var _this8 = this;

            var settings = {
                dots: true,
                arrows: false,
                infinite: true,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 1000,
                autoplay: true
            };

            var _props2 = this.props,
                currentModel = _props2.currentModel,
                basketData = _props2.basketData,
                wishlistData = _props2.wishlistData,
                capacityName = _props2.capacityName,
                deviceStatus = _props2.deviceStatus,
                upsellingItems = _props2.upsellingItems,
                domain = window.domainName.name.split('.')[window.domainName.name.split('.').length - 1],
                _state = this.state,
                blockImage = _state.blockImage,
                activeNavItem = _state.activeNavItem,
                bottomActive = _state.bottomActive,
                month = _state.month,
                firstLoaded = _state.firstLoaded,
                notShowBatteryInfo = false;


            var month3 = 0,
                month6 = 0,
                month12 = 0;
            if (currentModel[0]) {
                notShowBatteryInfo = currentModel[0].batteryLoadcycle == 0 && currentModel[0].batteryCapacity == 0 || currentModel[0].conditionId == 1 || currentModel[0].conditionId == 2;
                wishlistData.map(function (el) {
                    if (el.shortcode === currentModel[0].shortcode && !_this8.state.productIsAddedToWishlist) {
                        _this8.setState({ productIsAddedToWishlist: true });
                    }
                });
                var sellPrice = currentModel[0].price;
                if (currentModel[0].discountPrice) sellPrice = currentModel[0].discountPrice;
                month3 = (sellPrice / 3).toFixed(2);
                month6 = (sellPrice / 6).toFixed(2);
                month12 = (sellPrice / 12).toFixed(2);
            }

            return _react2.default.createElement(
                "div",
                { style: { marginTop: 10 } },
                currentModel.map(function (model, i) {
                    var conection = model.criterias.find(function (item) {
                        return item.name == 'Verbindungsart';
                    }) ? model.criterias.find(function (item) {
                        return item.name == 'Verbindungsart';
                    }).values[0].name : '',
                        prozessor = model.criterias.find(function (item) {
                        return item.name == 'Prozessor';
                    }) ? model.criterias.find(function (item) {
                        return item.name == 'Prozessor';
                    }).values[0].name : '',
                        ram = model.criterias.find(function (item) {
                        return item.name == 'Arbeitsspeicher';
                    }) ? model.criterias.find(function (item) {
                        return item.name == 'Arbeitsspeicher';
                    }).values[0].name : '';
                    return _react2.default.createElement(
                        "div",
                        { className: model.discountPrice ? "modelInfoBlock discount-label col-xs-12" : "modelInfoBlock col-xs-12", key: "modelInfoBlock-" + i },
                        _react2.default.createElement(
                            "div",
                            { className: "col-xs-12 modelInfo for-mobile" },
                            _react2.default.createElement(
                                "p",
                                { className: "modelName" },
                                model.model,
                                " ",
                                model.extendedTitle && " (" + model.extendedTitle + ")"
                            ),
                            _react2.default.createElement(
                                "p",
                                { className: "shortcode" },
                                "ID: ",
                                model.shortcode
                            ),
                            _react2.default.createElement(
                                "div",
                                { className: "fixedRow mobileFixedBottom" },
                                _react2.default.createElement(
                                    "div",
                                    { className: "tabs" },
                                    _react2.default.createElement(
                                        "div",
                                        { className: bottomActive === 'buy' ? "tab-item active" : "tab-item", onClick: function onClick() {
                                                return _this8.clickBottomItem('buy');
                                            } },
                                        "Sofort-Kaufen"
                                    ),
                                    _react2.default.createElement(
                                        "div",
                                        { className: bottomActive === 'installment' ? "tab-item active" : "tab-item", onClick: function onClick() {
                                                return _this8.clickBottomItem('installment');
                                            } },
                                        "Ratenzahlung"
                                    ),
                                    _react2.default.createElement(
                                        "div",
                                        { className: bottomActive === 'rent' ? "tab-item hidden active" : "tab-item hidden", onClick: function onClick() {
                                                return _this8.clickBottomItem('rent');
                                            } },
                                        "Mieten"
                                    )
                                ),
                                _react2.default.createElement(
                                    "div",
                                    { className: "bottomContent" },
                                    bottomActive === 'buy' && _react2.default.createElement(
                                        "div",
                                        { className: "buyArea" },
                                        _react2.default.createElement(
                                            "div",
                                            { className: "priceRow" },
                                            model.discountPrice && _react2.default.createElement(
                                                "p",
                                                { className: 'price old-price' },
                                                (0, _helpersFunction.formatPrice)(model.price),
                                                " ",
                                                window.currencyValue
                                            ),
                                            _react2.default.createElement(
                                                "p",
                                                { className: 'price' },
                                                (0, _helpersFunction.formatPrice)(model.discountPrice ? +model.discountPrice : +model.price),
                                                " ",
                                                window.currencyValue
                                            )
                                        ),
                                        _react2.default.createElement(
                                            "div",
                                            { className: "addBasket", id: "buyAddBasket" },
                                            _react2.default.createElement(
                                                "div",
                                                { className: "addToBasketEffectMobile" },
                                                _react2.default.createElement("img", { loading: "lazy", src: model.deviceImages.mainImg.src, alt: "" })
                                            ),
                                            deviceStatus.statusId == 1 || deviceStatus.statusId === null ? _react2.default.createElement(
                                                "button",
                                                { "data-status": basketData.some(function (item) {
                                                        return item.id === model.id;
                                                    }) ? 'in' : 'out',
                                                    className: !basketData.some(function (item) {
                                                        return item.shortcode === model.shortcode;
                                                    }) ? 'btn addToBasket pulsing add-to-cart-mobile' : !firstLoaded ? 'btn addToBasket pulsing add-to-cart-mobile added' : 'btn addToBasket pulsing add-to-cart-mobile added noEffect',
                                                    onClick: function onClick(e) {
                                                        return _this8.handleAddModelToBasket(e, model);
                                                    } },
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "default" },
                                                    "Zum Warenkorb"
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "success" },
                                                    "Vom Warenkorb"
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "cart" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        null,
                                                        _react2.default.createElement("div", null),
                                                        _react2.default.createElement("div", null)
                                                    )
                                                ),
                                                _react2.default.createElement("div", { className: "dots" })
                                            ) : deviceStatus.boughtCurrentUser && deviceStatus.statusId != 1 ? _react2.default.createElement(
                                                "p",
                                                { className: "boughtDevice" },
                                                "Sie haben diesen Artikel am ",
                                                deviceStatus.dateOfBought,
                                                " erworben"
                                            ) : !deviceStatus.boughtCurrentUser && deviceStatus.statusId != 1 ? _react2.default.createElement(
                                                "p",
                                                { className: "boughtDevice" },
                                                "Dieser Artikel ist leider nicht mehr verf\xFCgbar, da dieser schon verkauft wurde"
                                            ) : _react2.default.createElement("div", null)
                                        )
                                    ),
                                    bottomActive === 'installment' && _react2.default.createElement(
                                        "div",
                                        { className: "installmentArea" },
                                        _react2.default.createElement(
                                            _react.Fragment,
                                            null,
                                            _react2.default.createElement(
                                                _reactSlick2.default,
                                                settings,
                                                _this8.slideItem(month3, 3),
                                                _this8.slideItem(month6, 6),
                                                _this8.slideItem(month12, 12)
                                            )
                                        ),
                                        _react2.default.createElement(
                                            "div",
                                            { className: "addBasket", id: "installmentAddBasket" },
                                            _react2.default.createElement(
                                                "div",
                                                { className: "addToBasketEffectMobile" },
                                                _react2.default.createElement("img", { loading: "lazy", src: model.deviceImages.mainImg.src, alt: "" })
                                            ),
                                            deviceStatus.statusId == 1 || deviceStatus.statusId === null ? _react2.default.createElement("button", { "data-status": basketData.some(function (item) {
                                                    return item.id === model.id;
                                                }) ? 'in' : 'out',
                                                className: "btn addToBasket pulsing",
                                                onClick: _this8.addModelToBasket }) : deviceStatus.boughtCurrentUser && deviceStatus.statusId != 1 ? _react2.default.createElement(
                                                "p",
                                                { className: "boughtDevice" },
                                                "Sie haben diesen Artikel am ",
                                                deviceStatus.dateOfBought,
                                                " erworben"
                                            ) : !deviceStatus.boughtCurrentUser && deviceStatus.statusId != 1 ? _react2.default.createElement(
                                                "p",
                                                { className: "boughtDevice" },
                                                "Dieser Artikel ist leider nicht mehr verf\xFCgbar, da dieser schon verkauft wurde"
                                            ) : _react2.default.createElement("div", null)
                                        )
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                "div",
                                null,
                                _react2.default.createElement(
                                    "span",
                                    { className: "modelValues" },
                                    _react2.default.createElement(
                                        "span",
                                        null,
                                        model.capacity,
                                        model.capacityImage && _react2.default.createElement("img", { loading: "lazy", src: model.capacityImage })
                                    ),
                                    _react2.default.createElement(
                                        "span",
                                        { style: { marginBottom: 4 } },
                                        model.color,
                                        "\xA0",
                                        model.colorCode && _react2.default.createElement("span", { className: model.colorCode.toLowerCase() == '#ffffff' ? "colorPic whiteColor" : "colorPic",
                                            style: { backgroundColor: model.colorCode } })
                                    )
                                ),
                                _react2.default.createElement(
                                    "span",
                                    { className: "modelPlace" },
                                    _react2.default.createElement(
                                        "span",
                                        null,
                                        _react2.default.createElement("img", { loading: "lazy", src: "/images/design/aside_filter_category_icons/lagerort.svg", alt: "", style: { width: 16, marginRight: 11 } }),
                                        model.placeDescription
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            "div",
                            { className: "row row-flex" },
                            _react2.default.createElement(
                                "div",
                                { className: "col-md-9 left-part" },
                                _react2.default.createElement(
                                    "div",
                                    null,
                                    _react2.default.createElement(
                                        "div",
                                        { className: "row" },
                                        _react2.default.createElement(
                                            "div",
                                            { className: "col-md-12 row-flex" },
                                            _react2.default.createElement(_modelInfoBlockImage2.default, { image: model.deviceImages,
                                                altTitle: model.model + ', ' + model.capacity + ', ' + model.color + ', ' + model.condition + ', ' + model.placeDescription,
                                                blockImageState: blockImage,
                                                openLightBox: _this8.openLightBox,
                                                clickThumbnailLightBox: _this8.clickThumbnailLightBox,
                                                closeLightBox: _this8.closeLightBox,
                                                nextLightBox: _this8.nextLightBox,
                                                prevLightBox: _this8.prevLightBox,
                                                quickPreview: _this8.props.quickPreview,
                                                clickSmallImg: _this8.clickSmallImg,
                                                productIsAddedToWishlist: _this8.state.productIsAddedToWishlist,
                                                addModelToWishlist: function addModelToWishlist(e) {
                                                    return _this8.addModelToWishlist(e, model);
                                                } }),
                                            _react2.default.createElement(
                                                "div",
                                                { className: "col-md-6 modelInfo" },
                                                _react2.default.createElement(
                                                    "p",
                                                    { className: "modelName" },
                                                    model.model,
                                                    model.extendedTitle && " (" + model.extendedTitle + ")"
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "modelStars" },
                                                    _react2.default.createElement(
                                                        "a",
                                                        { href: "#footer" },
                                                        _react2.default.createElement("img", { loading: "lazy", src: "/images/stars.svg" })
                                                    ),
                                                    _react2.default.createElement(
                                                        "span",
                                                        null,
                                                        "(1602)"
                                                    )
                                                ),
                                                _react2.default.createElement(
                                                    "span",
                                                    { className: "modelCriterias" },
                                                    conection,
                                                    " ",
                                                    prozessor,
                                                    " ",
                                                    ram
                                                ),
                                                _react2.default.createElement(
                                                    "p",
                                                    { className: "shortcode" },
                                                    "ID: ",
                                                    model.shortcode
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "modelLocationBanner" },
                                                    _react2.default.createElement("img", { loading: "lazy", src: "/images/location-icon.svg", alt: "location icon" }),
                                                    _react2.default.createElement("div", { className: "separator-line" }),
                                                    model.placeDescription
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    null,
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "modelValues" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "value" },
                                                            _react2.default.createElement(
                                                                "h4",
                                                                null,
                                                                "Farbe"
                                                            ),
                                                            _react2.default.createElement(
                                                                "span",
                                                                null,
                                                                model.colorCode && _react2.default.createElement("span", { className: model.colorCode == '#FFFFFF' ? "colorPic whiteColor" : "colorPic",
                                                                    style: { backgroundColor: model.colorCode } }),
                                                                model.color
                                                            )
                                                        ),
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "value" },
                                                            _react2.default.createElement(
                                                                "h4",
                                                                null,
                                                                "Kapazit\xE4t"
                                                            ),
                                                            _react2.default.createElement(
                                                                "span",
                                                                null,
                                                                model.capacity,
                                                                model.capacityImage && _react2.default.createElement("img", { loading: "lazy", src: model.capacityImage })
                                                            )
                                                        )
                                                    )
                                                ),
                                                _this8.props.currentModel[0].criterias.length === 5 ? _react2.default.createElement(
                                                    "div",
                                                    { className: "allCriterias mobile-none" },
                                                    _react2.default.createElement(
                                                        "span",
                                                        { className: "modelValues-small condition col-xs-6" },
                                                        _react2.default.createElement(
                                                            "span",
                                                            null,
                                                            "Allgemeiner Zustand:"
                                                        ),
                                                        _react2.default.createElement("br", null),
                                                        _react2.default.createElement(
                                                            "span",
                                                            null,
                                                            _react2.default.createElement(
                                                                "b",
                                                                null,
                                                                model.condition
                                                            )
                                                        )
                                                    ),
                                                    _this8.mapCriterias.call(_this8)
                                                ) : '',
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "main-info-boxes mobile-none" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box" },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Zustand"
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "item-info-img" },
                                                                _react2.default.createElement("img", { loading: "lazy", className: "detailInfoImg", src: "/images/design/zustand" + model.conditionId + "-detail-info.svg", alt: "" })
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "description-wrapper" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    model.condition
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box warranty",
                                                                onClick: _this8.toggleWarrantyLightbox },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Garantie"
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "item-info-img" },
                                                                _react2.default.createElement("img", { loading: "lazy", className: "detailInfoImg", src: "/images/design/warranty-detail-info.svg", alt: "" })
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "description-wrapper" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    _react2.default.createElement(
                                                                        "span",
                                                                        { className: "green" },
                                                                        model.warranty
                                                                    ),
                                                                    " Garantie"
                                                                )
                                                            )
                                                        ),
                                                        _this8.state.showWarrantyLightbox && _react2.default.createElement(_warrantyLightbox2.default, { toggleLightbox: _this8.toggleWarrantyLightbox })
                                                    ),
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box" },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Kapazit\xE4t"
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "item-info-img" },
                                                                _react2.default.createElement("img", { loading: "lazy", className: "detailInfoImg", src: "/images/design/capacity-detail-info.svg", alt: "" })
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "description-wrapper" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    _react2.default.createElement(
                                                                        "span",
                                                                        { className: "green" },
                                                                        model.capacity.slice(0, model.capacity.indexOf('G'))
                                                                    ),
                                                                    " GB"
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    !notShowBatteryInfo && _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box" },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Batterie"
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "item-info-img" },
                                                                _react2.default.createElement("img", { loading: "lazy", className: "detailInfoImg", src: "/images/design/battery-detail-info.svg", alt: "" })
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "description-wrapper" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    "Ladezyklen: ",
                                                                    _react2.default.createElement(
                                                                        "span",
                                                                        { className: "green" },
                                                                        model.batteryLoadcycle == -1 ? "n.v." : model.batteryLoadcycle
                                                                    )
                                                                ),
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    "Kapazitat: ",
                                                                    _react2.default.createElement(
                                                                        "span",
                                                                        { className: "green" },
                                                                        model.batteryCapacity == -1 ? "n.v." : model.batteryCapacity + "%"
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    notShowBatteryInfo && _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box" },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Farbe"
                                                            ),
                                                            _react2.default.createElement("span", { className: model.colorCode == '#FFFFFF' ? "color-img whiteColor" : "color-img", style: { backgroundColor: model.colorCode } }),
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "description" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "green" },
                                                                    model.color
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            ),
                                            _react2.default.createElement(
                                                "div",
                                                { className: "col-xs-12 details mobile-block" },
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "allCriterias " },
                                                    _react2.default.createElement(
                                                        "span",
                                                        { className: "modelValues-small condition col-xs-6" },
                                                        _react2.default.createElement(
                                                            "span",
                                                            null,
                                                            "Allgemeiner Zustand:"
                                                        ),
                                                        _react2.default.createElement("br", null),
                                                        _react2.default.createElement(
                                                            "span",
                                                            null,
                                                            _react2.default.createElement(
                                                                "b",
                                                                null,
                                                                model.condition
                                                            )
                                                        )
                                                    ),
                                                    _this8.mapCriterias.call(_this8)
                                                ),
                                                model.note && window.isMobile && _react2.default.createElement(
                                                    "div",
                                                    { className: "row", style: { marginBottom: '15px' } },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "col-md-12" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "extra-info-block" },
                                                            _react2.default.createElement("img", { loading: "lazy", src: "/images/design/attention-mark.svg", alt: "" }),
                                                            _react2.default.createElement(
                                                                "p",
                                                                null,
                                                                model.note
                                                            )
                                                        )
                                                    )
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "main-info-boxes" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box" },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Zustand"
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "item-info-img" },
                                                                _react2.default.createElement("img", { loading: "lazy", className: "detailInfoImg", src: "/images/design/zustand" + model.conditionId + "-detail-info.svg", alt: "" })
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "description-wrapper" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    model.condition
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box warranty",
                                                                onClick: _this8.toggleWarrantyLightbox },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Garantie"
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "item-info-img" },
                                                                _react2.default.createElement("img", { loading: "lazy", className: "detailInfoImg", src: "/images/design/warranty-detail-info.svg", alt: "" })
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "description-wrapper" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    _react2.default.createElement(
                                                                        "span",
                                                                        { className: "green" },
                                                                        model.warranty
                                                                    ),
                                                                    " Garantie"
                                                                )
                                                            )
                                                        ),
                                                        _this8.state.showWarrantyLightbox && _react2.default.createElement(_warrantyLightbox2.default, { toggleLightbox: _this8.toggleWarrantyLightbox })
                                                    ),
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box" },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Kapazit\xE4t"
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "item-info-img" },
                                                                _react2.default.createElement("img", { loading: "lazy", className: "detailInfoImg", src: "/images/design/capacity-detail-info.svg", alt: "" })
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "description-wrapper" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    _react2.default.createElement(
                                                                        "span",
                                                                        { className: "green" },
                                                                        model.capacity.slice(0, model.capacity.indexOf('G'))
                                                                    ),
                                                                    " GB"
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    !notShowBatteryInfo && _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box" },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Batterie"
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "item-info-img" },
                                                                _react2.default.createElement("img", { loading: "lazy", className: "detailInfoImg", src: "/images/design/battery-detail-info.svg", alt: "" })
                                                            ),
                                                            _react2.default.createElement(
                                                                "div",
                                                                { className: "description-wrapper" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    "Ladezyklen: ",
                                                                    _react2.default.createElement(
                                                                        "span",
                                                                        { className: "green" },
                                                                        model.batteryLoadcycle == -1 ? "n.v." : model.batteryLoadcycle
                                                                    )
                                                                ),
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "description" },
                                                                    "Kapazitat: ",
                                                                    _react2.default.createElement(
                                                                        "span",
                                                                        { className: "green" },
                                                                        model.batteryCapacity == -1 ? "n.v." : model.batteryCapacity + "%"
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    notShowBatteryInfo && _react2.default.createElement(
                                                        "div",
                                                        { className: "item" },
                                                        _react2.default.createElement(
                                                            "div",
                                                            { className: "item-info-box" },
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "title" },
                                                                "Farbe"
                                                            ),
                                                            _react2.default.createElement("span", { className: model.colorCode == '#FFFFFF' ? "color-img whiteColor" : "color-img", style: { backgroundColor: model.colorCode } }),
                                                            _react2.default.createElement(
                                                                "span",
                                                                { className: "description" },
                                                                _react2.default.createElement(
                                                                    "span",
                                                                    { className: "green" },
                                                                    model.color
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        ),
                                        _react2.default.createElement(
                                            "div",
                                            { className: "col-xs-12 mobile-block" },
                                            !deviceStatus.boughtCurrentUser && deviceStatus.statusId != 1 ? _react2.default.createElement(_soldoutInfoBlock2.default, null) : _react2.default.createElement(_additionalInfoBlock2.default, { model: model,
                                                domain: domain,
                                                basketData: basketData,
                                                addModelToBasket: _this8.addModelToBasket,
                                                deviceStatus: deviceStatus,
                                                deadline: _this8.state.deadline,
                                                activateCountDownCoupon: _this8.activateCountDownCoupon,
                                                deadlineIsActive: _this8.state.deadlineIsActive,
                                                deadlineExpired: _this8.state.deadlineExpired,
                                                deadlineTimer: _this8.state.deadlineTimer
                                            })
                                        ),
                                        model.note && !window.isMobile && _react2.default.createElement(
                                            "div",
                                            { className: "col-md-12 row-flex", style: { marginTop: '30px' } },
                                            _react2.default.createElement(
                                                "div",
                                                { className: "extra-info-block" },
                                                _react2.default.createElement("img", { loading: "lazy", src: "/images/design/attention-mark.svg", alt: "" }),
                                                _react2.default.createElement(
                                                    "p",
                                                    null,
                                                    model.note
                                                )
                                            )
                                        ),
                                        _this8.props.currentModel[0].criterias.length >= 6 ? _react2.default.createElement(
                                            "div",
                                            { className: "col-md-12 criteriaTabLaptop" },
                                            _react2.default.createElement(
                                                "div",
                                                { className: "allCriterias mobile-none" },
                                                _react2.default.createElement(
                                                    "span",
                                                    { className: "modelValues-small condition col-xs-6" },
                                                    _react2.default.createElement(
                                                        "span",
                                                        null,
                                                        "Allgemeiner Zustand:"
                                                    ),
                                                    _react2.default.createElement("br", null),
                                                    _react2.default.createElement(
                                                        "span",
                                                        null,
                                                        _react2.default.createElement(
                                                            "b",
                                                            null,
                                                            model.condition
                                                        )
                                                    )
                                                ),
                                                _this8.mapCriterias.call(_this8)
                                            )
                                        ) : '',
                                        _react2.default.createElement(
                                            "div",
                                            { className: "col-md-12" },
                                            _react2.default.createElement(
                                                "ul",
                                                { className: "offer-tab-buttons" },
                                                _react2.default.createElement(
                                                    "li",
                                                    {
                                                        "data-type": "purchase",
                                                        onClick: _this8.clickNavItem,
                                                        className: activeNavItem === 'purchase' ? 'active' : '' },
                                                    "Kaufen"
                                                ),
                                                _react2.default.createElement(
                                                    "li",
                                                    {
                                                        "data-type": "rent",
                                                        onClick: _this8.clickNavItem,
                                                        className: activeNavItem === 'rent' ? 'active' : '' },
                                                    "Mieten"
                                                )
                                            ),
                                            activeNavItem === 'rent' && _react2.default.createElement(
                                                "div",
                                                { className: "offer-tab rent" },
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "item" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "img" },
                                                        _react2.default.createElement("img", { loading: "lazy", src: '/images/offer1.svg', alt: "" })
                                                    ),
                                                    _react2.default.createElement(
                                                        "p",
                                                        null,
                                                        "Keine Kaution, keine versteckten Kosten"
                                                    )
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "item" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "img" },
                                                        _react2.default.createElement("img", { loading: "lazy", src: '/images/offer2.svg', alt: "" })
                                                    ),
                                                    _react2.default.createElement(
                                                        "p",
                                                        null,
                                                        "Sch\xE4den sind abgedeckt durch remarket.care"
                                                    )
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "item" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "img" },
                                                        _react2.default.createElement("img", { loading: "lazy", src: '/images/offer3.svg', alt: "" })
                                                    ),
                                                    _react2.default.createElement(
                                                        "p",
                                                        null,
                                                        "Flexible Mietdauer mit Kaufoption"
                                                    )
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "item" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "img" },
                                                        _react2.default.createElement("img", { loading: "lazy", src: '/images/offer4.svg', alt: "" })
                                                    ),
                                                    _react2.default.createElement(
                                                        "p",
                                                        null,
                                                        "Kostenloser Hin- und R\xFCckversand"
                                                    )
                                                )
                                            ),
                                            activeNavItem === 'purchase' && _react2.default.createElement(
                                                "div",
                                                { className: "offer-tab purchase" },
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "item" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "img" },
                                                        _react2.default.createElement("img", { loading: "lazy", src: '/images/offer5.svg', alt: "" })
                                                    ),
                                                    _react2.default.createElement(
                                                        "p",
                                                        null,
                                                        "Gepr\xFCfte Ger\xE4te mit Garantie"
                                                    )
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "item" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "img" },
                                                        _react2.default.createElement("img", { loading: "lazy", src: '/images/offer6.svg', alt: "" })
                                                    ),
                                                    _react2.default.createElement(
                                                        "p",
                                                        null,
                                                        "14 Tage R\xFCckgaberecht"
                                                    )
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "item" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "img" },
                                                        _react2.default.createElement("img", { loading: "lazy", src: '/images/offer7.svg', alt: "" })
                                                    ),
                                                    _react2.default.createElement(
                                                        "p",
                                                        null,
                                                        "Bequeme Ratenzahlung mit 0%-Zins"
                                                    )
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "item" },
                                                    _react2.default.createElement(
                                                        "div",
                                                        { className: "img" },
                                                        _react2.default.createElement("img", { loading: "lazy", src: '/images/offer8.svg', alt: "" })
                                                    ),
                                                    _react2.default.createElement(
                                                        "p",
                                                        null,
                                                        "Kostenloser A-Post Versand"
                                                    )
                                                )
                                            )
                                        ),
                                        upsellingItems.length > 0 && _react2.default.createElement(
                                            "div",
                                            { className: "col-md-12 " },
                                            _react2.default.createElement(
                                                "div",
                                                { className: "usefull-things-block" },
                                                _react2.default.createElement(
                                                    "h3",
                                                    null,
                                                    "N\xFCtzliche Produkte"
                                                ),
                                                _react2.default.createElement(
                                                    "div",
                                                    { className: "usefull-items" },
                                                    _react2.default.createElement(_usefullProductItem2.default, { items: upsellingItems, basketData: basketData, addModelToBasket: _this8.addUpsellingModelToBasket })
                                                )
                                            )
                                        ),
                                        _react2.default.createElement(
                                            "div",
                                            { className: "col-md-12" },
                                            _react2.default.createElement(
                                                "div",
                                                { className: "specifications" },
                                                _react2.default.createElement(
                                                    "h3",
                                                    null,
                                                    "Technische Daten"
                                                ),
                                                _react2.default.createElement(_specificationsBlock2.default, { specifications: _this8.props.specifications,
                                                    additionalSpecifications: _this8.props.additionalSpecifications })
                                            )
                                        )
                                    )
                                )
                            ),
                            !deviceStatus.boughtCurrentUser && deviceStatus.statusId != 1 ? _react2.default.createElement(_soldoutInfoBlock2.default, { className: 'mobile-none' }) : _react2.default.createElement(_additionalInfoBlock2.default, { model: model,
                                domain: domain,
                                basketData: basketData,
                                addModelToBasket: _this8.addModelToBasket,
                                deviceStatus: deviceStatus,
                                deadline: _this8.state.deadline,
                                activateCountDownCoupon: _this8.activateCountDownCoupon,
                                deadlineIsActive: _this8.state.deadlineIsActive,
                                deadlineExpired: _this8.state.deadlineExpired,
                                deadlineTimer: _this8.state.deadlineTimer,
                                className: 'mobile-none' })
                        ),
                        _react2.default.createElement("div", { className: "msgAddToBasket" })
                    );
                })
            );
        }
    }]);
    return ModelInfoBlock;
}(_react.Component);

ModelInfoBlock.propTypes = {};
ModelInfoBlock.defaultProps = {
    deviceStatus: {
        statusId: 1,
        dateOfBought: null,
        boughtCurrentUser: false
    }
};

function mapStateToProps(state) {
    return {
        basketData: state.basket.basketData,
        wishlistData: state.basket.wishlistData
    };
}
function mapDispatchToProps(dispatch) {
    return {
        basketActions: (0, _redux.bindActionCreators)(basketActions, dispatch)
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ModelInfoBlock);

/***/ }),

/***/ 1254:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WarrantyLightbox = function (_Component) {
    (0, _inherits3.default)(WarrantyLightbox, _Component);

    function WarrantyLightbox(props) {
        (0, _classCallCheck3.default)(this, WarrantyLightbox);

        var _this = (0, _possibleConstructorReturn3.default)(this, (WarrantyLightbox.__proto__ || Object.getPrototypeOf(WarrantyLightbox)).call(this, props));

        _this.state = {};

        _this.handleKeyPress = _this.handleKeyPress.bind(_this);
        _this.setEqualHeight = _this.setEqualHeight.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(WarrantyLightbox, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.setEqualHeight();
            document.addEventListener("keyup", this.handleKeyPress, { passive: true });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener("keyup", this.handleKeyPress);
        }
    }, {
        key: 'setEqualHeight',
        value: function setEqualHeight() {
            setTimeout(function () {
                $('.horizontal.first').height() > $('.horizontal.last').height() ? $('.horizontal.last').height($('.horizontal.first').height()) : $('.horizontal.first').height($('.horizontal.last').height());
            }, 10);
        }
    }, {
        key: 'handleKeyPress',
        value: function handleKeyPress(e) {
            if (e.key === "Escape") {
                this.props.toggleLightbox();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'warranty-light-box light-box' },
                _react2.default.createElement(
                    'div',
                    { className: 'light-box-container' },
                    _react2.default.createElement(
                        'div',
                        { className: 'content' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-xs-12' },
                            _react2.default.createElement(
                                'div',
                                { className: 'top text-right' },
                                _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/simple-close-logForm.svg',
                                    onClick: this.props.toggleLightbox,
                                    alt: '' })
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'body' },
                                _react2.default.createElement(
                                    'p',
                                    { className: 'title' },
                                    'Garantie Information'
                                ),
                                _react2.default.createElement(
                                    'p',
                                    { className: 'description' },
                                    'Bei jedem erworbenen Ger\xE4t erhalten Sie bei uns ein Rundum-sorglos-Paket. Auf jedes gebrauchte Ger\xE4te erhalten Sie ',
                                    _react2.default.createElement(
                                        'strong',
                                        null,
                                        '1 Jahr Garantie'
                                    ),
                                    ', auf Neuger\xE4te ',
                                    _react2.default.createElement(
                                        'strong',
                                        null,
                                        '2 Jahre Garantie'
                                    ),
                                    '.'
                                ),
                                _react2.default.createElement('p', { className: 'description' }),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'wrap-steps' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'horizontal first' },
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'item-step' },
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'wrap' },
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'image' },
                                                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/step-1.svg', alt: '' })
                                                ),
                                                _react2.default.createElement(
                                                    'p',
                                                    null,
                                                    'Ger\xE4t hat ein Problem'
                                                )
                                            )
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'image arrow' },
                                            _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/arrow.svg', alt: '' })
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'item-step' },
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'wrap' },
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'image' },
                                                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/step-2.svg', alt: '' })
                                                ),
                                                _react2.default.createElement(
                                                    'p',
                                                    null,
                                                    'Erstelle ein Retourenlabel im Kundenkonto'
                                                )
                                            )
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'image arrow' },
                                            _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/arrow.svg', alt: '' })
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'item-step' },
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'wrap' },
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'image' },
                                                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/step-3.svg', alt: '' })
                                                ),
                                                _react2.default.createElement(
                                                    'p',
                                                    null,
                                                    'Sende es kostenlos ein oder besuche unseren Shop'
                                                )
                                            )
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'image arrow' },
                                            _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/arrow.svg', alt: '' })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'vertical' },
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'item-step' },
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'wrap' },
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'image' },
                                                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/step-4-a.svg', alt: '' })
                                                ),
                                                _react2.default.createElement(
                                                    'p',
                                                    null,
                                                    'Wenn eine Reparatur m\xF6glich ist wird diese kostenlos durchgef\xFChrt'
                                                )
                                            )
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'item-step' },
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'wrap' },
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'image' },
                                                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/step-4-b.svg', alt: '' })
                                                ),
                                                _react2.default.createElement(
                                                    'p',
                                                    null,
                                                    'Wenn diese nicht m\xF6glich ist, wird das Ger\xE4t ausgetauscht'
                                                )
                                            )
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'item-step' },
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'wrap' },
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'image' },
                                                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/step-4-c.svg', alt: '' })
                                                ),
                                                _react2.default.createElement(
                                                    'p',
                                                    null,
                                                    'Falls der Austausch nicht m\xF6glich ist, erhalten Sie eine Gutschrift'
                                                )
                                            )
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'horizontal last' },
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'image arrow', style: { marginLeft: '10px' } },
                                            _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/arrow.svg', alt: '' })
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'item-step' },
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'wrap' },
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'image' },
                                                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/warranty-lightbox/step-5.svg', alt: '' })
                                                ),
                                                _react2.default.createElement(
                                                    'p',
                                                    null,
                                                    'Happy End!'
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);
    return WarrantyLightbox;
}(_react.Component);

WarrantyLightbox.propTypes = {};
WarrantyLightbox.defaultProps = {};

exports.default = WarrantyLightbox;

/***/ }),

/***/ 1255:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _toConsumableArray2 = __webpack_require__(316);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactMasonryComponent = __webpack_require__(1256);

var _reactMasonryComponent2 = _interopRequireDefault(_reactMasonryComponent);

var _reactAnimateOnScroll = __webpack_require__(1276);

var _reactAnimateOnScroll2 = _interopRequireDefault(_reactAnimateOnScroll);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SpecificationsBlock = function SpecificationsBlock(_ref) {
    var specifications = _ref.specifications,
        additionalSpecifications = _ref.additionalSpecifications;

    function mapSpecification(itemSpecification, i) {
        return _react2.default.createElement(
            'div',
            { className: 'col-sm-6 col-xs-12 item-specification-block', key: i },
            _react2.default.createElement(
                _reactAnimateOnScroll2.default,
                { animateOnce: true, animateIn: 'fadeIn', offset: i <= 1 ? 0 : 150 },
                _react2.default.createElement(
                    'div',
                    { key: i, className: 'box-category' },
                    _react2.default.createElement(
                        'h3',
                        null,
                        itemSpecification.categoryName,
                        itemSpecification.categoryDescription && _react2.default.createElement(
                            'div',
                            { className: 'descriptionBlock' },
                            _react2.default.createElement('i', { className: 'fa fa-info', 'aria-hidden': 'true' }),
                            _react2.default.createElement(
                                'div',
                                { className: 'descriptionOptions' },
                                _react2.default.createElement(
                                    'p',
                                    null,
                                    itemSpecification.categoryDescription
                                )
                            )
                        )
                    ),
                    itemSpecification.options.map(function (itemOption, i) {
                        return _react2.default.createElement(
                            'div',
                            { key: i, className: 'box-specifications' },
                            _react2.default.createElement(
                                'div',
                                null,
                                _react2.default.createElement(
                                    'span',
                                    { className: 'box-specifications-option' },
                                    itemOption.optionName,
                                    itemOption.optionDescription && _react2.default.createElement(
                                        'div',
                                        { className: 'descriptionBlock' },
                                        _react2.default.createElement('i', { className: 'fa fa-info', 'aria-hidden': 'true' }),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'descriptionOptions' },
                                            _react2.default.createElement(
                                                'p',
                                                null,
                                                itemOption.optionDescription
                                            )
                                        )
                                    ),
                                    ':'
                                ),
                                _react2.default.createElement('strong', null),
                                _react2.default.createElement(
                                    'span',
                                    { className: 'box-specifications-values' },
                                    itemOption.values.map(function (itemValue, i) {
                                        return _react2.default.createElement(
                                            'span',
                                            { className: 'value', key: i },
                                            itemValue.valueName,
                                            itemValue.valueName === 'Ja' && _react2.default.createElement('span', { className: 'circleJa' }),
                                            itemValue.valueDescription && _react2.default.createElement(
                                                'div',
                                                { className: 'descriptionBlock' },
                                                _react2.default.createElement('i', { className: 'fa fa-info', 'aria-hidden': 'true' }),
                                                _react2.default.createElement(
                                                    'div',
                                                    { className: 'descriptionOptions' },
                                                    _react2.default.createElement(
                                                        'p',
                                                        null,
                                                        itemValue.valueDescription
                                                    )
                                                )
                                            ),
                                            i < itemOption.values.length - 1 ? ', ' : null
                                        );
                                    })
                                )
                            )
                        );
                    })
                )
            )
        );
    }
    function mapAdditionalSpecifications() {
        var arrayElements = [];
        for (var key in additionalSpecifications) {
            var value = '';
            switch (key) {
                case 'SIMLock':
                    additionalSpecifications[key] === 0 ? value = 'Nein' : 'Ja';
                    arrayElements.push(_react2.default.createElement(
                        'div',
                        { key: key, className: 'box-specifications' },
                        _react2.default.createElement(
                            'div',
                            null,
                            _react2.default.createElement(
                                'span',
                                { className: 'box-specifications-option' },
                                'SIM-Lock:'
                            ),
                            _react2.default.createElement('strong', null),
                            _react2.default.createElement(
                                'span',
                                { className: 'box-specifications-values' },
                                value,
                                value === 'Ja' && _react2.default.createElement('span', { className: 'circleJa' })
                            )
                        )
                    ));
                    break;
                case 'cloudLock':
                    additionalSpecifications[key] === 0 ? value = 'Nein' : 'Ja';
                    arrayElements.push(_react2.default.createElement(
                        'div',
                        { key: key, className: 'box-specifications' },
                        _react2.default.createElement(
                            'div',
                            null,
                            _react2.default.createElement(
                                'span',
                                { className: 'box-specifications-option' },
                                'Cloud-Lock:'
                            ),
                            _react2.default.createElement('strong', null),
                            _react2.default.createElement(
                                'span',
                                { className: 'box-specifications-values' },
                                value,
                                value === 'Ja' && _react2.default.createElement('span', { className: 'circleJa' })
                            )
                        )
                    ));
                    break;
                case 'batteryCapacity':
                    value = additionalSpecifications[key];
                    arrayElements.push(_react2.default.createElement(
                        'div',
                        { key: key, className: 'box-specifications' },
                        _react2.default.createElement(
                            'div',
                            null,
                            _react2.default.createElement(
                                'span',
                                { className: 'box-specifications-option' },
                                'Batteriekapazit\xE4t:'
                            ),
                            _react2.default.createElement('strong', null),
                            _react2.default.createElement(
                                'span',
                                { className: 'box-specifications-values' },
                                value == -1 ? "n.v." : value + ' %'
                            )
                        )
                    ));
                    break;
                case 'operationSystemVersion':
                    value = additionalSpecifications[key];
                    arrayElements.push(_react2.default.createElement(
                        'div',
                        { key: key, className: 'box-specifications' },
                        _react2.default.createElement(
                            'div',
                            null,
                            _react2.default.createElement(
                                'span',
                                { className: 'box-specifications-option' },
                                'Betriebssystem Version:'
                            ),
                            _react2.default.createElement('strong', null),
                            _react2.default.createElement(
                                'span',
                                { className: 'box-specifications-values' },
                                value == -1 ? "n.v." : value
                            )
                        )
                    ));
                    break;
            }
        }
        return _react2.default.createElement(
            'div',
            { className: 'col-sm-6 col-xs-12 item-specification-block', key: 'detail' },
            _react2.default.createElement(
                _reactAnimateOnScroll2.default,
                { animateOnce: true, animateIn: 'fadeIn' },
                _react2.default.createElement(
                    'div',
                    { className: 'box-category' },
                    _react2.default.createElement(
                        'h3',
                        null,
                        'Detaillierte Informationen'
                    ),
                    arrayElements
                )
            )
        );
    }

    var additionalSpecification = additionalSpecifications && Object.keys(additionalSpecifications).length > 0 && mapAdditionalSpecifications();
    var allSpecifications = specifications ? [].concat((0, _toConsumableArray3.default)(specifications.map(mapSpecification)), [additionalSpecification]) : [];

    return _react2.default.createElement(
        'div',
        { className: 'specificationsBlock' },
        _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
                _reactMasonryComponent2.default,
                { className: 'wrap-specifications', disableImagesLoaded: true },
                allSpecifications
            )
        )
    );
};

SpecificationsBlock.propTypes = {};
SpecificationsBlock.defaultProps = {};

exports.default = SpecificationsBlock;

/***/ }),

/***/ 1256:
/***/ (function(module, exports, __webpack_require__) {

var isBrowser = typeof window !== 'undefined';
var Masonry = isBrowser ? window.Masonry || __webpack_require__(1257) : null;
var imagesloaded = isBrowser ? __webpack_require__(1262) : null;
var assign = __webpack_require__(1263);
var elementResizeDetectorMaker = __webpack_require__(1264);
var debounce = __webpack_require__(955);
var omit = __webpack_require__(1275);
var PropTypes = __webpack_require__(28);
var React = __webpack_require__(16);
var createReactClass = __webpack_require__(44);
var refName = 'masonryContainer';

var propTypes = {
  enableResizableChildren: PropTypes.bool,
  disableImagesLoaded: PropTypes.bool,
  onImagesLoaded: PropTypes.func,
  updateOnEachImageLoad: PropTypes.bool,
  options: PropTypes.object,
  elementType: PropTypes.string,
  onLayoutComplete: PropTypes.func,
  onRemoveComplete: PropTypes.func
};

var MasonryComponent = createReactClass({
  masonry: false,
  erd: undefined,
  latestKnownDomChildren: [],
  displayName: 'MasonryComponent',
  propTypes: propTypes,

  getDefaultProps: function() {
    return {
      enableResizableChildren: false,
      disableImagesLoaded: false,
      updateOnEachImageLoad: false,
      options: {},
      className: '',
      elementType: 'div',
      onLayoutComplete: function() {
      },
      onRemoveComplete: function() {
      }
    };
  },

  initializeMasonry: function(force) {
    if (!this.masonry || force) {
      this.masonry = new Masonry(
        this.refs[refName],
        this.props.options
      );

      if (this.props.onLayoutComplete) {
        this.masonry.on('layoutComplete', this.props.onLayoutComplete);
      }

      if (this.props.onRemoveComplete) {
        this.masonry.on('removeComplete', this.props.onRemoveComplete);
      }

      this.latestKnownDomChildren = this.getCurrentDomChildren();
    }
  },

  getCurrentDomChildren: function() {
    var node = this.refs[refName];
    var children = this.props.options.itemSelector ? node.querySelectorAll(this.props.options.itemSelector) : node.children;
    return Array.prototype.slice.call(children);
  },

  diffDomChildren: function() {
    var forceItemReload = false;

    var knownChildrenStillAttached = this.latestKnownDomChildren.filter(function(element) {
      /*
       * take only elements attached to DOM
       * (aka the parent is the masonry container, not null)
       * otherwise masonry would try to "remove it" again from the DOM
       */
      return !!element.parentNode;
    });

    /*
     * If not all known children are attached to the dom - we have no other way of notifying
     * masonry to remove the ones not still attached besides invoking a complete item reload.
     * basically all the rest of the code below does not matter in that case.
     */
    if (knownChildrenStillAttached.length !== this.latestKnownDomChildren) {
      forceItemReload = true;
    }

    var currentDomChildren = this.getCurrentDomChildren();

    /*
     * Since we are looking for a known child which is also attached to the dom AND
     * not attached to the dom at the same time - this would *always* produce an empty array.
     */
    var removed = knownChildrenStillAttached.filter(function(attachedKnownChild) {
      return !~currentDomChildren.indexOf(attachedKnownChild);
    });

    /*
     * This would get any children which are attached to the dom but are *unkown* to us
     * from previous renders
     */
    var newDomChildren = currentDomChildren.filter(function(currentChild) {
      return !~knownChildrenStillAttached.indexOf(currentChild);
    });

    var beginningIndex = 0;

    // get everything added to the beginning of the DOMNode list
    var prepended = newDomChildren.filter(function(newChild) {
      var prepend = (beginningIndex === currentDomChildren.indexOf(newChild));

      if (prepend) {
        // increase the index
        beginningIndex++;
      }

      return prepend;
    });

    // we assume that everything else is appended
    var appended = newDomChildren.filter(function(el) {
      return prepended.indexOf(el) === -1;
    });

    /*
     * otherwise we reverse it because so we're going through the list picking off the items that
     * have been added at the end of the list. this complex logic is preserved in case it needs to be
     * invoked
     *
     * var endingIndex = currentDomChildren.length - 1;
     *
     * newDomChildren.reverse().filter(function(newChild, i){
     *     var append = endingIndex == currentDomChildren.indexOf(newChild);
     *
     *     if (append) {
     *         endingIndex--;
     *     }
     *
     *     return append;
     * });
     */

    // get everything added to the end of the DOMNode list
    var moved = [];

    /*
     * This would always be true (see above about the lofic for "removed")
     */
    if (removed.length === 0) {
      /*
       * 'moved' will contain some random elements (if any) since the "knownChildrenStillAttached" is a filter
       * of the "known" children which are still attached - All indexes could basically change. (for example
       * if the first element is not attached)
       * Don't trust this array.
       */
      moved = knownChildrenStillAttached.filter(function(child, index) {
        return index !== currentDomChildren.indexOf(child);
      });
    }

    this.latestKnownDomChildren = currentDomChildren;

    return {
      old: knownChildrenStillAttached, // Not used
      new: currentDomChildren, // Not used
      removed: removed,
      appended: appended,
      prepended: prepended,
      moved: moved,
      forceItemReload: forceItemReload
    };
  },

  performLayout: function() {
    var diff = this.diffDomChildren();

    // Would never be true. (see comments of 'diffDomChildren' about 'removed')
    if (diff.removed.length > 0) {
      if (this.props.enableResizableChildren) {
        diff.removed.forEach(this.erd.removeAllListeners, this.erd);
      }
      this.masonry.remove(diff.removed);
      this.masonry.reloadItems();
    }

    if (diff.appended.length > 0) {
      this.masonry.appended(diff.appended);

      if (diff.prepended.length === 0) {
        this.masonry.reloadItems();
      }

      if (this.props.enableResizableChildren) {
        diff.appended.forEach(this.listenToElementResize, this);
      }
    }

    if (diff.prepended.length > 0) {
      this.masonry.prepended(diff.prepended);

      if (this.props.enableResizableChildren) {
        diff.prepended.forEach(this.listenToElementResize, this);
      }
    }

    if (diff.forceItemReload || diff.moved.length > 0) {
      this.masonry.reloadItems();
    }

    this.masonry.layout();
  },

  imagesLoaded: function() {
    if (this.props.disableImagesLoaded) {
      return;
    }

    imagesloaded(this.refs[refName])
      .on(
        this.props.updateOnEachImageLoad ? 'progress' : 'always',
        debounce(
          function(instance) {
            if (this.props.onImagesLoaded) {
              this.props.onImagesLoaded(instance);
            }
            this.masonry.layout();
          }.bind(this), 100)
      );
  },

  initializeResizableChildren: function() {
    if (!this.props.enableResizableChildren) {
      return;
    }

    this.erd = elementResizeDetectorMaker({
      strategy: 'scroll'
    });

    this.latestKnownDomChildren.forEach(this.listenToElementResize, this);
  },

  listenToElementResize: function(el) {
    this.erd.listenTo(el, function() {
      this.masonry.layout()
    }.bind(this))
  },

  destroyErd: function() {
    if (this.erd) {
      this.latestKnownDomChildren.forEach(this.erd.uninstall, this.erd);
    }
  },

  componentDidMount: function() {
    this.initializeMasonry();
    this.initializeResizableChildren();
    this.imagesLoaded();
  },

  componentDidUpdate: function() {
    this.performLayout();
    this.imagesLoaded();
  },

  componentWillUnmount: function() {
    this.destroyErd();

    // unregister events
    if (this.props.onLayoutComplete) {
      this.masonry.off('layoutComplete', this.props.onLayoutComplete);
    }

    if (this.props.onRemoveComplete) {
      this.masonry.off('removeComplete', this.props.onRemoveComplete);
    }

    this.masonry.destroy();
  },

  render: function() {
    var props = omit(this.props, Object.keys(propTypes));
    return React.createElement(this.props.elementType, assign({}, props, {ref: refName}), this.props.children);
  }
});

module.exports = MasonryComponent;
module.exports.default = MasonryComponent;


/***/ }),

/***/ 1257:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Masonry v4.2.2
 * Cascading grid layout library
 * https://masonry.desandro.com
 * MIT License
 * by David DeSandro
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(1258),
        __webpack_require__(1082)
      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      require('outlayer'),
      require('get-size')
    );
  } else {
    // browser global
    window.Masonry = factory(
      window.Outlayer,
      window.getSize
    );
  }

}( window, function factory( Outlayer, getSize ) {

'use strict';

// -------------------------- masonryDefinition -------------------------- //

  // create an Outlayer layout class
  var Masonry = Outlayer.create('masonry');
  // isFitWidth -> fitWidth
  Masonry.compatOptions.fitWidth = 'isFitWidth';

  var proto = Masonry.prototype;

  proto._resetLayout = function() {
    this.getSize();
    this._getMeasurement( 'columnWidth', 'outerWidth' );
    this._getMeasurement( 'gutter', 'outerWidth' );
    this.measureColumns();

    // reset column Y
    this.colYs = [];
    for ( var i=0; i < this.cols; i++ ) {
      this.colYs.push( 0 );
    }

    this.maxY = 0;
    this.horizontalColIndex = 0;
  };

  proto.measureColumns = function() {
    this.getContainerWidth();
    // if columnWidth is 0, default to outerWidth of first item
    if ( !this.columnWidth ) {
      var firstItem = this.items[0];
      var firstItemElem = firstItem && firstItem.element;
      // columnWidth fall back to item of first element
      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||
        // if first elem has no width, default to size of container
        this.containerWidth;
    }

    var columnWidth = this.columnWidth += this.gutter;

    // calculate columns
    var containerWidth = this.containerWidth + this.gutter;
    var cols = containerWidth / columnWidth;
    // fix rounding errors, typically with gutters
    var excess = columnWidth - containerWidth % columnWidth;
    // if overshoot is less than a pixel, round up, otherwise floor it
    var mathMethod = excess && excess < 1 ? 'round' : 'floor';
    cols = Math[ mathMethod ]( cols );
    this.cols = Math.max( cols, 1 );
  };

  proto.getContainerWidth = function() {
    // container is parent if fit width
    var isFitWidth = this._getOption('fitWidth');
    var container = isFitWidth ? this.element.parentNode : this.element;
    // check that this.size and size are there
    // IE8 triggers resize on body size change, so they might not be
    var size = getSize( container );
    this.containerWidth = size && size.innerWidth;
  };

  proto._getItemLayoutPosition = function( item ) {
    item.getSize();
    // how many columns does this brick span
    var remainder = item.size.outerWidth % this.columnWidth;
    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';
    // round if off by 1 pixel, otherwise use ceil
    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );
    colSpan = Math.min( colSpan, this.cols );
    // use horizontal or top column position
    var colPosMethod = this.options.horizontalOrder ?
      '_getHorizontalColPosition' : '_getTopColPosition';
    var colPosition = this[ colPosMethod ]( colSpan, item );
    // position the brick
    var position = {
      x: this.columnWidth * colPosition.col,
      y: colPosition.y
    };
    // apply setHeight to necessary columns
    var setHeight = colPosition.y + item.size.outerHeight;
    var setMax = colSpan + colPosition.col;
    for ( var i = colPosition.col; i < setMax; i++ ) {
      this.colYs[i] = setHeight;
    }

    return position;
  };

  proto._getTopColPosition = function( colSpan ) {
    var colGroup = this._getTopColGroup( colSpan );
    // get the minimum Y value from the columns
    var minimumY = Math.min.apply( Math, colGroup );

    return {
      col: colGroup.indexOf( minimumY ),
      y: minimumY,
    };
  };

  /**
   * @param {Number} colSpan - number of columns the element spans
   * @returns {Array} colGroup
   */
  proto._getTopColGroup = function( colSpan ) {
    if ( colSpan < 2 ) {
      // if brick spans only one column, use all the column Ys
      return this.colYs;
    }

    var colGroup = [];
    // how many different places could this brick fit horizontally
    var groupCount = this.cols + 1 - colSpan;
    // for each group potential horizontal position
    for ( var i = 0; i < groupCount; i++ ) {
      colGroup[i] = this._getColGroupY( i, colSpan );
    }
    return colGroup;
  };

  proto._getColGroupY = function( col, colSpan ) {
    if ( colSpan < 2 ) {
      return this.colYs[ col ];
    }
    // make an array of colY values for that one group
    var groupColYs = this.colYs.slice( col, col + colSpan );
    // and get the max value of the array
    return Math.max.apply( Math, groupColYs );
  };

  // get column position based on horizontal index. #873
  proto._getHorizontalColPosition = function( colSpan, item ) {
    var col = this.horizontalColIndex % this.cols;
    var isOver = colSpan > 1 && col + colSpan > this.cols;
    // shift to next row if item can't fit on current row
    col = isOver ? 0 : col;
    // don't let zero-size items take up space
    var hasSize = item.size.outerWidth && item.size.outerHeight;
    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;

    return {
      col: col,
      y: this._getColGroupY( col, colSpan ),
    };
  };

  proto._manageStamp = function( stamp ) {
    var stampSize = getSize( stamp );
    var offset = this._getElementOffset( stamp );
    // get the columns that this stamp affects
    var isOriginLeft = this._getOption('originLeft');
    var firstX = isOriginLeft ? offset.left : offset.right;
    var lastX = firstX + stampSize.outerWidth;
    var firstCol = Math.floor( firstX / this.columnWidth );
    firstCol = Math.max( 0, firstCol );
    var lastCol = Math.floor( lastX / this.columnWidth );
    // lastCol should not go over if multiple of columnWidth #425
    lastCol -= lastX % this.columnWidth ? 0 : 1;
    lastCol = Math.min( this.cols - 1, lastCol );
    // set colYs to bottom of the stamp

    var isOriginTop = this._getOption('originTop');
    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +
      stampSize.outerHeight;
    for ( var i = firstCol; i <= lastCol; i++ ) {
      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );
    }
  };

  proto._getContainerSize = function() {
    this.maxY = Math.max.apply( Math, this.colYs );
    var size = {
      height: this.maxY
    };

    if ( this._getOption('fitWidth') ) {
      size.width = this._getContainerFitWidth();
    }

    return size;
  };

  proto._getContainerFitWidth = function() {
    var unusedCols = 0;
    // count unused columns
    var i = this.cols;
    while ( --i ) {
      if ( this.colYs[i] !== 0 ) {
        break;
      }
      unusedCols++;
    }
    // fit container to columns that have been used
    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;
  };

  proto.needsResizeLayout = function() {
    var previousWidth = this.containerWidth;
    this.getContainerWidth();
    return previousWidth != this.containerWidth;
  };

  return Masonry;

}));


/***/ }),

/***/ 1258:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Outlayer v2.1.1
 * the brains and guts of a layout library
 * MIT license
 */

( function( window, factory ) {
  'use strict';
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(1081),
        __webpack_require__(1082),
        __webpack_require__(1259),
        __webpack_require__(1261)
      ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter, getSize, utils, Item ) {
        return factory( window, EvEmitter, getSize, utils, Item);
      }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(
      window,
      require('ev-emitter'),
      require('get-size'),
      require('fizzy-ui-utils'),
      require('./item')
    );
  } else {
    // browser global
    window.Outlayer = factory(
      window,
      window.EvEmitter,
      window.getSize,
      window.fizzyUIUtils,
      window.Outlayer.Item
    );
  }

}( window, function factory( window, EvEmitter, getSize, utils, Item ) {
'use strict';

// ----- vars ----- //

var console = window.console;
var jQuery = window.jQuery;
var noop = function() {};

// -------------------------- Outlayer -------------------------- //

// globally unique identifiers
var GUID = 0;
// internal store of all Outlayer intances
var instances = {};


/**
 * @param {Element, String} element
 * @param {Object} options
 * @constructor
 */
function Outlayer( element, options ) {
  var queryElement = utils.getQueryElement( element );
  if ( !queryElement ) {
    if ( console ) {
      console.error( 'Bad element for ' + this.constructor.namespace +
        ': ' + ( queryElement || element ) );
    }
    return;
  }
  this.element = queryElement;
  // add jQuery
  if ( jQuery ) {
    this.$element = jQuery( this.element );
  }

  // options
  this.options = utils.extend( {}, this.constructor.defaults );
  this.option( options );

  // add id for Outlayer.getFromElement
  var id = ++GUID;
  this.element.outlayerGUID = id; // expando
  instances[ id ] = this; // associate via id

  // kick it off
  this._create();

  var isInitLayout = this._getOption('initLayout');
  if ( isInitLayout ) {
    this.layout();
  }
}

// settings are for internal use only
Outlayer.namespace = 'outlayer';
Outlayer.Item = Item;

// default options
Outlayer.defaults = {
  containerStyle: {
    position: 'relative'
  },
  initLayout: true,
  originLeft: true,
  originTop: true,
  resize: true,
  resizeContainer: true,
  // item options
  transitionDuration: '0.4s',
  hiddenStyle: {
    opacity: 0,
    transform: 'scale(0.001)'
  },
  visibleStyle: {
    opacity: 1,
    transform: 'scale(1)'
  }
};

var proto = Outlayer.prototype;
// inherit EvEmitter
utils.extend( proto, EvEmitter.prototype );

/**
 * set options
 * @param {Object} opts
 */
proto.option = function( opts ) {
  utils.extend( this.options, opts );
};

/**
 * get backwards compatible option value, check old name
 */
proto._getOption = function( option ) {
  var oldOption = this.constructor.compatOptions[ option ];
  return oldOption && this.options[ oldOption ] !== undefined ?
    this.options[ oldOption ] : this.options[ option ];
};

Outlayer.compatOptions = {
  // currentName: oldName
  initLayout: 'isInitLayout',
  horizontal: 'isHorizontal',
  layoutInstant: 'isLayoutInstant',
  originLeft: 'isOriginLeft',
  originTop: 'isOriginTop',
  resize: 'isResizeBound',
  resizeContainer: 'isResizingContainer'
};

proto._create = function() {
  // get items from children
  this.reloadItems();
  // elements that affect layout, but are not laid out
  this.stamps = [];
  this.stamp( this.options.stamp );
  // set container style
  utils.extend( this.element.style, this.options.containerStyle );

  // bind resize method
  var canBindResize = this._getOption('resize');
  if ( canBindResize ) {
    this.bindResize();
  }
};

// goes through all children again and gets bricks in proper order
proto.reloadItems = function() {
  // collection of item elements
  this.items = this._itemize( this.element.children );
};


/**
 * turn elements into Outlayer.Items to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - collection of new Outlayer Items
 */
proto._itemize = function( elems ) {

  var itemElems = this._filterFindItemElements( elems );
  var Item = this.constructor.Item;

  // create new Outlayer Items for collection
  var items = [];
  for ( var i=0; i < itemElems.length; i++ ) {
    var elem = itemElems[i];
    var item = new Item( elem, this );
    items.push( item );
  }

  return items;
};

/**
 * get item elements to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - item elements
 */
proto._filterFindItemElements = function( elems ) {
  return utils.filterFindElements( elems, this.options.itemSelector );
};

/**
 * getter method for getting item elements
 * @returns {Array} elems - collection of item elements
 */
proto.getItemElements = function() {
  return this.items.map( function( item ) {
    return item.element;
  });
};

// ----- init & layout ----- //

/**
 * lays out all items
 */
proto.layout = function() {
  this._resetLayout();
  this._manageStamps();

  // don't animate first layout
  var layoutInstant = this._getOption('layoutInstant');
  var isInstant = layoutInstant !== undefined ?
    layoutInstant : !this._isLayoutInited;
  this.layoutItems( this.items, isInstant );

  // flag for initalized
  this._isLayoutInited = true;
};

// _init is alias for layout
proto._init = proto.layout;

/**
 * logic before any new layout
 */
proto._resetLayout = function() {
  this.getSize();
};


proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * get measurement from option, for columnWidth, rowHeight, gutter
 * if option is String -> get element from selector string, & get size of element
 * if option is Element -> get size of element
 * else use option as a number
 *
 * @param {String} measurement
 * @param {String} size - width or height
 * @private
 */
proto._getMeasurement = function( measurement, size ) {
  var option = this.options[ measurement ];
  var elem;
  if ( !option ) {
    // default to 0
    this[ measurement ] = 0;
  } else {
    // use option as an element
    if ( typeof option == 'string' ) {
      elem = this.element.querySelector( option );
    } else if ( option instanceof HTMLElement ) {
      elem = option;
    }
    // use size of element, if element
    this[ measurement ] = elem ? getSize( elem )[ size ] : option;
  }
};

/**
 * layout a collection of item elements
 * @api public
 */
proto.layoutItems = function( items, isInstant ) {
  items = this._getItemsForLayout( items );

  this._layoutItems( items, isInstant );

  this._postLayout();
};

/**
 * get the items to be laid out
 * you may want to skip over some items
 * @param {Array} items
 * @returns {Array} items
 */
proto._getItemsForLayout = function( items ) {
  return items.filter( function( item ) {
    return !item.isIgnored;
  });
};

/**
 * layout items
 * @param {Array} items
 * @param {Boolean} isInstant
 */
proto._layoutItems = function( items, isInstant ) {
  this._emitCompleteOnItems( 'layout', items );

  if ( !items || !items.length ) {
    // no items, emit event with empty array
    return;
  }

  var queue = [];

  items.forEach( function( item ) {
    // get x/y object from method
    var position = this._getItemLayoutPosition( item );
    // enqueue
    position.item = item;
    position.isInstant = isInstant || item.isLayoutInstant;
    queue.push( position );
  }, this );

  this._processLayoutQueue( queue );
};

/**
 * get item layout position
 * @param {Outlayer.Item} item
 * @returns {Object} x and y position
 */
proto._getItemLayoutPosition = function( /* item */ ) {
  return {
    x: 0,
    y: 0
  };
};

/**
 * iterate over array and position each item
 * Reason being - separating this logic prevents 'layout invalidation'
 * thx @paul_irish
 * @param {Array} queue
 */
proto._processLayoutQueue = function( queue ) {
  this.updateStagger();
  queue.forEach( function( obj, i ) {
    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );
  }, this );
};

// set stagger from option in milliseconds number
proto.updateStagger = function() {
  var stagger = this.options.stagger;
  if ( stagger === null || stagger === undefined ) {
    this.stagger = 0;
    return;
  }
  this.stagger = getMilliseconds( stagger );
  return this.stagger;
};

/**
 * Sets position of item in DOM
 * @param {Outlayer.Item} item
 * @param {Number} x - horizontal position
 * @param {Number} y - vertical position
 * @param {Boolean} isInstant - disables transitions
 */
proto._positionItem = function( item, x, y, isInstant, i ) {
  if ( isInstant ) {
    // if not transition, just set CSS
    item.goTo( x, y );
  } else {
    item.stagger( i * this.stagger );
    item.moveTo( x, y );
  }
};

/**
 * Any logic you want to do after each layout,
 * i.e. size the container
 */
proto._postLayout = function() {
  this.resizeContainer();
};

proto.resizeContainer = function() {
  var isResizingContainer = this._getOption('resizeContainer');
  if ( !isResizingContainer ) {
    return;
  }
  var size = this._getContainerSize();
  if ( size ) {
    this._setContainerMeasure( size.width, true );
    this._setContainerMeasure( size.height, false );
  }
};

/**
 * Sets width or height of container if returned
 * @returns {Object} size
 *   @param {Number} width
 *   @param {Number} height
 */
proto._getContainerSize = noop;

/**
 * @param {Number} measure - size of width or height
 * @param {Boolean} isWidth
 */
proto._setContainerMeasure = function( measure, isWidth ) {
  if ( measure === undefined ) {
    return;
  }

  var elemSize = this.size;
  // add padding and border width if border box
  if ( elemSize.isBorderBox ) {
    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +
      elemSize.borderLeftWidth + elemSize.borderRightWidth :
      elemSize.paddingBottom + elemSize.paddingTop +
      elemSize.borderTopWidth + elemSize.borderBottomWidth;
  }

  measure = Math.max( measure, 0 );
  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';
};

/**
 * emit eventComplete on a collection of items events
 * @param {String} eventName
 * @param {Array} items - Outlayer.Items
 */
proto._emitCompleteOnItems = function( eventName, items ) {
  var _this = this;
  function onComplete() {
    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );
  }

  var count = items.length;
  if ( !items || !count ) {
    onComplete();
    return;
  }

  var doneCount = 0;
  function tick() {
    doneCount++;
    if ( doneCount == count ) {
      onComplete();
    }
  }

  // bind callback
  items.forEach( function( item ) {
    item.once( eventName, tick );
  });
};

/**
 * emits events via EvEmitter and jQuery events
 * @param {String} type - name of event
 * @param {Event} event - original event
 * @param {Array} args - extra arguments
 */
proto.dispatchEvent = function( type, event, args ) {
  // add original event to arguments
  var emitArgs = event ? [ event ].concat( args ) : args;
  this.emitEvent( type, emitArgs );

  if ( jQuery ) {
    // set this.$element
    this.$element = this.$element || jQuery( this.element );
    if ( event ) {
      // create jQuery event
      var $event = jQuery.Event( event );
      $event.type = type;
      this.$element.trigger( $event, args );
    } else {
      // just trigger with type if no event available
      this.$element.trigger( type, args );
    }
  }
};

// -------------------------- ignore & stamps -------------------------- //


/**
 * keep item in collection, but do not lay it out
 * ignored items do not get skipped in layout
 * @param {Element} elem
 */
proto.ignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    item.isIgnored = true;
  }
};

/**
 * return item to layout collection
 * @param {Element} elem
 */
proto.unignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    delete item.isIgnored;
  }
};

/**
 * adds elements to stamps
 * @param {NodeList, Array, Element, or String} elems
 */
proto.stamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ) {
    return;
  }

  this.stamps = this.stamps.concat( elems );
  // ignore
  elems.forEach( this.ignore, this );
};

/**
 * removes elements to stamps
 * @param {NodeList, Array, or Element} elems
 */
proto.unstamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ){
    return;
  }

  elems.forEach( function( elem ) {
    // filter out removed stamp elements
    utils.removeFrom( this.stamps, elem );
    this.unignore( elem );
  }, this );
};

/**
 * finds child elements
 * @param {NodeList, Array, Element, or String} elems
 * @returns {Array} elems
 */
proto._find = function( elems ) {
  if ( !elems ) {
    return;
  }
  // if string, use argument as selector string
  if ( typeof elems == 'string' ) {
    elems = this.element.querySelectorAll( elems );
  }
  elems = utils.makeArray( elems );
  return elems;
};

proto._manageStamps = function() {
  if ( !this.stamps || !this.stamps.length ) {
    return;
  }

  this._getBoundingRect();

  this.stamps.forEach( this._manageStamp, this );
};

// update boundingLeft / Top
proto._getBoundingRect = function() {
  // get bounding rect for container element
  var boundingRect = this.element.getBoundingClientRect();
  var size = this.size;
  this._boundingRect = {
    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,
    top: boundingRect.top + size.paddingTop + size.borderTopWidth,
    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),
    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )
  };
};

/**
 * @param {Element} stamp
**/
proto._manageStamp = noop;

/**
 * get x/y position of element relative to container element
 * @param {Element} elem
 * @returns {Object} offset - has left, top, right, bottom
 */
proto._getElementOffset = function( elem ) {
  var boundingRect = elem.getBoundingClientRect();
  var thisRect = this._boundingRect;
  var size = getSize( elem );
  var offset = {
    left: boundingRect.left - thisRect.left - size.marginLeft,
    top: boundingRect.top - thisRect.top - size.marginTop,
    right: thisRect.right - boundingRect.right - size.marginRight,
    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom
  };
  return offset;
};

// -------------------------- resize -------------------------- //

// enable event handlers for listeners
// i.e. resize -> onresize
proto.handleEvent = utils.handleEvent;

/**
 * Bind layout to window resizing
 */
proto.bindResize = function() {
  window.addEventListener( 'resize', this );
  this.isResizeBound = true;
};

/**
 * Unbind layout to window resizing
 */
proto.unbindResize = function() {
  window.removeEventListener( 'resize', this );
  this.isResizeBound = false;
};

proto.onresize = function() {
  this.resize();
};

utils.debounceMethod( Outlayer, 'onresize', 100 );

proto.resize = function() {
  // don't trigger if size did not change
  // or if resize was unbound. See #9
  if ( !this.isResizeBound || !this.needsResizeLayout() ) {
    return;
  }

  this.layout();
};

/**
 * check if layout is needed post layout
 * @returns Boolean
 */
proto.needsResizeLayout = function() {
  var size = getSize( this.element );
  // check that this.size and size are there
  // IE8 triggers resize on body size change, so they might not be
  var hasSizes = this.size && size;
  return hasSizes && size.innerWidth !== this.size.innerWidth;
};

// -------------------------- methods -------------------------- //

/**
 * add items to Outlayer instance
 * @param {Array or NodeList or Element} elems
 * @returns {Array} items - Outlayer.Items
**/
proto.addItems = function( elems ) {
  var items = this._itemize( elems );
  // add items to collection
  if ( items.length ) {
    this.items = this.items.concat( items );
  }
  return items;
};

/**
 * Layout newly-appended item elements
 * @param {Array or NodeList or Element} elems
 */
proto.appended = function( elems ) {
  var items = this.addItems( elems );
  if ( !items.length ) {
    return;
  }
  // layout and reveal just the new items
  this.layoutItems( items, true );
  this.reveal( items );
};

/**
 * Layout prepended elements
 * @param {Array or NodeList or Element} elems
 */
proto.prepended = function( elems ) {
  var items = this._itemize( elems );
  if ( !items.length ) {
    return;
  }
  // add items to beginning of collection
  var previousItems = this.items.slice(0);
  this.items = items.concat( previousItems );
  // start new layout
  this._resetLayout();
  this._manageStamps();
  // layout new stuff without transition
  this.layoutItems( items, true );
  this.reveal( items );
  // layout previous items
  this.layoutItems( previousItems );
};

/**
 * reveal a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.reveal = function( items ) {
  this._emitCompleteOnItems( 'reveal', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.reveal();
  });
};

/**
 * hide a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.hide = function( items ) {
  this._emitCompleteOnItems( 'hide', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.hide();
  });
};

/**
 * reveal item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.revealItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.reveal( items );
};

/**
 * hide item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.hideItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.hide( items );
};

/**
 * get Outlayer.Item, given an Element
 * @param {Element} elem
 * @param {Function} callback
 * @returns {Outlayer.Item} item
 */
proto.getItem = function( elem ) {
  // loop through items to get the one that matches
  for ( var i=0; i < this.items.length; i++ ) {
    var item = this.items[i];
    if ( item.element == elem ) {
      // return item
      return item;
    }
  }
};

/**
 * get collection of Outlayer.Items, given Elements
 * @param {Array} elems
 * @returns {Array} items - Outlayer.Items
 */
proto.getItems = function( elems ) {
  elems = utils.makeArray( elems );
  var items = [];
  elems.forEach( function( elem ) {
    var item = this.getItem( elem );
    if ( item ) {
      items.push( item );
    }
  }, this );

  return items;
};

/**
 * remove element(s) from instance and DOM
 * @param {Array or NodeList or Element} elems
 */
proto.remove = function( elems ) {
  var removeItems = this.getItems( elems );

  this._emitCompleteOnItems( 'remove', removeItems );

  // bail if no items to remove
  if ( !removeItems || !removeItems.length ) {
    return;
  }

  removeItems.forEach( function( item ) {
    item.remove();
    // remove item from collection
    utils.removeFrom( this.items, item );
  }, this );
};

// ----- destroy ----- //

// remove and disable Outlayer instance
proto.destroy = function() {
  // clean up dynamic styles
  var style = this.element.style;
  style.height = '';
  style.position = '';
  style.width = '';
  // destroy items
  this.items.forEach( function( item ) {
    item.destroy();
  });

  this.unbindResize();

  var id = this.element.outlayerGUID;
  delete instances[ id ]; // remove reference to instance by id
  delete this.element.outlayerGUID;
  // remove data for jQuery
  if ( jQuery ) {
    jQuery.removeData( this.element, this.constructor.namespace );
  }

};

// -------------------------- data -------------------------- //

/**
 * get Outlayer instance from element
 * @param {Element} elem
 * @returns {Outlayer}
 */
Outlayer.data = function( elem ) {
  elem = utils.getQueryElement( elem );
  var id = elem && elem.outlayerGUID;
  return id && instances[ id ];
};


// -------------------------- create Outlayer class -------------------------- //

/**
 * create a layout class
 * @param {String} namespace
 */
Outlayer.create = function( namespace, options ) {
  // sub-class Outlayer
  var Layout = subclass( Outlayer );
  // apply new options and compatOptions
  Layout.defaults = utils.extend( {}, Outlayer.defaults );
  utils.extend( Layout.defaults, options );
  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );

  Layout.namespace = namespace;

  Layout.data = Outlayer.data;

  // sub-class Item
  Layout.Item = subclass( Item );

  // -------------------------- declarative -------------------------- //

  utils.htmlInit( Layout, namespace );

  // -------------------------- jQuery bridge -------------------------- //

  // make into jQuery plugin
  if ( jQuery && jQuery.bridget ) {
    jQuery.bridget( namespace, Layout );
  }

  return Layout;
};

function subclass( Parent ) {
  function SubClass() {
    Parent.apply( this, arguments );
  }

  SubClass.prototype = Object.create( Parent.prototype );
  SubClass.prototype.constructor = SubClass;

  return SubClass;
}

// ----- helpers ----- //

// how many milliseconds are in each unit
var msUnits = {
  ms: 1,
  s: 1000
};

// munge time-like parameter into millisecond number
// '0.4s' -> 40
function getMilliseconds( time ) {
  if ( typeof time == 'number' ) {
    return time;
  }
  var matches = time.match( /(^\d*\.?\d*)(\w*)/ );
  var num = matches && matches[1];
  var unit = matches && matches[2];
  if ( !num.length ) {
    return 0;
  }
  num = parseFloat( num );
  var mult = msUnits[ unit ] || 1;
  return num * mult;
}

// ----- fin ----- //

// back in global
Outlayer.Item = Item;

return Outlayer;

}));


/***/ }),

/***/ 1259:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Fizzy UI utils v2.0.7
 * MIT license
 */

/*jshint browser: true, undef: true, unused: true, strict: true */

( function( window, factory ) {
  // universal module definition
  /*jshint strict: false */ /*globals define, module, require */

  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
      __webpack_require__(1260)
    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( matchesSelector ) {
      return factory( window, matchesSelector );
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('desandro-matches-selector')
    );
  } else {
    // browser global
    window.fizzyUIUtils = factory(
      window,
      window.matchesSelector
    );
  }

}( window, function factory( window, matchesSelector ) {

'use strict';

var utils = {};

// ----- extend ----- //

// extends objects
utils.extend = function( a, b ) {
  for ( var prop in b ) {
    a[ prop ] = b[ prop ];
  }
  return a;
};

// ----- modulo ----- //

utils.modulo = function( num, div ) {
  return ( ( num % div ) + div ) % div;
};

// ----- makeArray ----- //

var arraySlice = Array.prototype.slice;

// turn element or nodeList into an array
utils.makeArray = function( obj ) {
  if ( Array.isArray( obj ) ) {
    // use object if already an array
    return obj;
  }
  // return empty array if undefined or null. #6
  if ( obj === null || obj === undefined ) {
    return [];
  }

  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';
  if ( isArrayLike ) {
    // convert nodeList to array
    return arraySlice.call( obj );
  }

  // array of single index
  return [ obj ];
};

// ----- removeFrom ----- //

utils.removeFrom = function( ary, obj ) {
  var index = ary.indexOf( obj );
  if ( index != -1 ) {
    ary.splice( index, 1 );
  }
};

// ----- getParent ----- //

utils.getParent = function( elem, selector ) {
  while ( elem.parentNode && elem != document.body ) {
    elem = elem.parentNode;
    if ( matchesSelector( elem, selector ) ) {
      return elem;
    }
  }
};

// ----- getQueryElement ----- //

// use element as selector string
utils.getQueryElement = function( elem ) {
  if ( typeof elem == 'string' ) {
    return document.querySelector( elem );
  }
  return elem;
};

// ----- handleEvent ----- //

// enable .ontype to trigger from .addEventListener( elem, 'type' )
utils.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

// ----- filterFindElements ----- //

utils.filterFindElements = function( elems, selector ) {
  // make array of elems
  elems = utils.makeArray( elems );
  var ffElems = [];

  elems.forEach( function( elem ) {
    // check that elem is an actual element
    if ( !( elem instanceof HTMLElement ) ) {
      return;
    }
    // add elem if no selector
    if ( !selector ) {
      ffElems.push( elem );
      return;
    }
    // filter & find items if we have a selector
    // filter
    if ( matchesSelector( elem, selector ) ) {
      ffElems.push( elem );
    }
    // find children
    var childElems = elem.querySelectorAll( selector );
    // concat childElems to filterFound array
    for ( var i=0; i < childElems.length; i++ ) {
      ffElems.push( childElems[i] );
    }
  });

  return ffElems;
};

// ----- debounceMethod ----- //

utils.debounceMethod = function( _class, methodName, threshold ) {
  threshold = threshold || 100;
  // original method
  var method = _class.prototype[ methodName ];
  var timeoutName = methodName + 'Timeout';

  _class.prototype[ methodName ] = function() {
    var timeout = this[ timeoutName ];
    clearTimeout( timeout );

    var args = arguments;
    var _this = this;
    this[ timeoutName ] = setTimeout( function() {
      method.apply( _this, args );
      delete _this[ timeoutName ];
    }, threshold );
  };
};

// ----- docReady ----- //

utils.docReady = function( callback ) {
  var readyState = document.readyState;
  if ( readyState == 'complete' || readyState == 'interactive' ) {
    // do async to allow for other scripts to run. metafizzy/flickity#441
    setTimeout( callback );
  } else {
    document.addEventListener( 'DOMContentLoaded', callback );
  }
};

// ----- htmlInit ----- //

// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/
utils.toDashed = function( str ) {
  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {
    return $1 + '-' + $2;
  }).toLowerCase();
};

var console = window.console;
/**
 * allow user to initialize classes via [data-namespace] or .js-namespace class
 * htmlInit( Widget, 'widgetName' )
 * options are parsed from data-namespace-options
 */
utils.htmlInit = function( WidgetClass, namespace ) {
  utils.docReady( function() {
    var dashedNamespace = utils.toDashed( namespace );
    var dataAttr = 'data-' + dashedNamespace;
    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );
    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );
    var elems = utils.makeArray( dataAttrElems )
      .concat( utils.makeArray( jsDashElems ) );
    var dataOptionsAttr = dataAttr + '-options';
    var jQuery = window.jQuery;

    elems.forEach( function( elem ) {
      var attr = elem.getAttribute( dataAttr ) ||
        elem.getAttribute( dataOptionsAttr );
      var options;
      try {
        options = attr && JSON.parse( attr );
      } catch ( error ) {
        // log error, do not initialize
        if ( console ) {
          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +
          ': ' + error );
        }
        return;
      }
      // initialize
      var instance = new WidgetClass( elem, options );
      // make available via $().data('namespace')
      if ( jQuery ) {
        jQuery.data( elem, namespace, instance );
      }
    });

  });
};

// -----  ----- //

return utils;

}));


/***/ }),

/***/ 1260:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * matchesSelector v2.0.2
 * matchesSelector( element, '.selector' )
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */

( function( window, factory ) {
  /*global define: false, module: false */
  'use strict';
  // universal module definition
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.matchesSelector = factory();
  }

}( window, function factory() {
  'use strict';

  var matchesMethod = ( function() {
    var ElemProto = window.Element.prototype;
    // check for the standard method name first
    if ( ElemProto.matches ) {
      return 'matches';
    }
    // check un-prefixed
    if ( ElemProto.matchesSelector ) {
      return 'matchesSelector';
    }
    // check vendor prefixes
    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];

    for ( var i=0; i < prefixes.length; i++ ) {
      var prefix = prefixes[i];
      var method = prefix + 'MatchesSelector';
      if ( ElemProto[ method ] ) {
        return method;
      }
    }
  })();

  return function matchesSelector( elem, selector ) {
    return elem[ matchesMethod ]( selector );
  };

}));


/***/ }),

/***/ 1261:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Outlayer Item
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(1081),
        __webpack_require__(1082)
      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(
      require('ev-emitter'),
      require('get-size')
    );
  } else {
    // browser global
    window.Outlayer = {};
    window.Outlayer.Item = factory(
      window.EvEmitter,
      window.getSize
    );
  }

}( window, function factory( EvEmitter, getSize ) {
'use strict';

// ----- helpers ----- //

function isEmptyObj( obj ) {
  for ( var prop in obj ) {
    return false;
  }
  prop = null;
  return true;
}

// -------------------------- CSS3 support -------------------------- //


var docElemStyle = document.documentElement.style;

var transitionProperty = typeof docElemStyle.transition == 'string' ?
  'transition' : 'WebkitTransition';
var transformProperty = typeof docElemStyle.transform == 'string' ?
  'transform' : 'WebkitTransform';

var transitionEndEvent = {
  WebkitTransition: 'webkitTransitionEnd',
  transition: 'transitionend'
}[ transitionProperty ];

// cache all vendor properties that could have vendor prefix
var vendorProperties = {
  transform: transformProperty,
  transition: transitionProperty,
  transitionDuration: transitionProperty + 'Duration',
  transitionProperty: transitionProperty + 'Property',
  transitionDelay: transitionProperty + 'Delay'
};

// -------------------------- Item -------------------------- //

function Item( element, layout ) {
  if ( !element ) {
    return;
  }

  this.element = element;
  // parent layout class, i.e. Masonry, Isotope, or Packery
  this.layout = layout;
  this.position = {
    x: 0,
    y: 0
  };

  this._create();
}

// inherit EvEmitter
var proto = Item.prototype = Object.create( EvEmitter.prototype );
proto.constructor = Item;

proto._create = function() {
  // transition objects
  this._transn = {
    ingProperties: {},
    clean: {},
    onEnd: {}
  };

  this.css({
    position: 'absolute'
  });
};

// trigger specified handler for event type
proto.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * apply CSS styles to element
 * @param {Object} style
 */
proto.css = function( style ) {
  var elemStyle = this.element.style;

  for ( var prop in style ) {
    // use vendor property if available
    var supportedProp = vendorProperties[ prop ] || prop;
    elemStyle[ supportedProp ] = style[ prop ];
  }
};

 // measure position, and sets it
proto.getPosition = function() {
  var style = getComputedStyle( this.element );
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  var xValue = style[ isOriginLeft ? 'left' : 'right' ];
  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];
  var x = parseFloat( xValue );
  var y = parseFloat( yValue );
  // convert percent to pixels
  var layoutSize = this.layout.size;
  if ( xValue.indexOf('%') != -1 ) {
    x = ( x / 100 ) * layoutSize.width;
  }
  if ( yValue.indexOf('%') != -1 ) {
    y = ( y / 100 ) * layoutSize.height;
  }
  // clean up 'auto' or other non-integer values
  x = isNaN( x ) ? 0 : x;
  y = isNaN( y ) ? 0 : y;
  // remove padding from measurement
  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;
  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;

  this.position.x = x;
  this.position.y = y;
};

// set settled position, apply padding
proto.layoutPosition = function() {
  var layoutSize = this.layout.size;
  var style = {};
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');

  // x
  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';
  var xProperty = isOriginLeft ? 'left' : 'right';
  var xResetProperty = isOriginLeft ? 'right' : 'left';

  var x = this.position.x + layoutSize[ xPadding ];
  // set in percentage or pixels
  style[ xProperty ] = this.getXValue( x );
  // reset other property
  style[ xResetProperty ] = '';

  // y
  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';
  var yProperty = isOriginTop ? 'top' : 'bottom';
  var yResetProperty = isOriginTop ? 'bottom' : 'top';

  var y = this.position.y + layoutSize[ yPadding ];
  // set in percentage or pixels
  style[ yProperty ] = this.getYValue( y );
  // reset other property
  style[ yResetProperty ] = '';

  this.css( style );
  this.emitEvent( 'layout', [ this ] );
};

proto.getXValue = function( x ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && !isHorizontal ?
    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';
};

proto.getYValue = function( y ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && isHorizontal ?
    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';
};

proto._transitionTo = function( x, y ) {
  this.getPosition();
  // get current x & y from top/left
  var curX = this.position.x;
  var curY = this.position.y;

  var didNotMove = x == this.position.x && y == this.position.y;

  // save end position
  this.setPosition( x, y );

  // if did not move and not transitioning, just go to layout
  if ( didNotMove && !this.isTransitioning ) {
    this.layoutPosition();
    return;
  }

  var transX = x - curX;
  var transY = y - curY;
  var transitionStyle = {};
  transitionStyle.transform = this.getTranslate( transX, transY );

  this.transition({
    to: transitionStyle,
    onTransitionEnd: {
      transform: this.layoutPosition
    },
    isCleaning: true
  });
};

proto.getTranslate = function( x, y ) {
  // flip cooridinates if origin on right or bottom
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  x = isOriginLeft ? x : -x;
  y = isOriginTop ? y : -y;
  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';
};

// non transition + transform support
proto.goTo = function( x, y ) {
  this.setPosition( x, y );
  this.layoutPosition();
};

proto.moveTo = proto._transitionTo;

proto.setPosition = function( x, y ) {
  this.position.x = parseFloat( x );
  this.position.y = parseFloat( y );
};

// ----- transition ----- //

/**
 * @param {Object} style - CSS
 * @param {Function} onTransitionEnd
 */

// non transition, just trigger callback
proto._nonTransition = function( args ) {
  this.css( args.to );
  if ( args.isCleaning ) {
    this._removeStyles( args.to );
  }
  for ( var prop in args.onTransitionEnd ) {
    args.onTransitionEnd[ prop ].call( this );
  }
};

/**
 * proper transition
 * @param {Object} args - arguments
 *   @param {Object} to - style to transition to
 *   @param {Object} from - style to start transition from
 *   @param {Boolean} isCleaning - removes transition styles after transition
 *   @param {Function} onTransitionEnd - callback
 */
proto.transition = function( args ) {
  // redirect to nonTransition if no transition duration
  if ( !parseFloat( this.layout.options.transitionDuration ) ) {
    this._nonTransition( args );
    return;
  }

  var _transition = this._transn;
  // keep track of onTransitionEnd callback by css property
  for ( var prop in args.onTransitionEnd ) {
    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];
  }
  // keep track of properties that are transitioning
  for ( prop in args.to ) {
    _transition.ingProperties[ prop ] = true;
    // keep track of properties to clean up when transition is done
    if ( args.isCleaning ) {
      _transition.clean[ prop ] = true;
    }
  }

  // set from styles
  if ( args.from ) {
    this.css( args.from );
    // force redraw. http://blog.alexmaccaw.com/css-transitions
    var h = this.element.offsetHeight;
    // hack for JSHint to hush about unused var
    h = null;
  }
  // enable transition
  this.enableTransition( args.to );
  // set styles that are transitioning
  this.css( args.to );

  this.isTransitioning = true;

};

// dash before all cap letters, including first for
// WebkitTransform => -webkit-transform
function toDashedAll( str ) {
  return str.replace( /([A-Z])/g, function( $1 ) {
    return '-' + $1.toLowerCase();
  });
}

var transitionProps = 'opacity,' + toDashedAll( transformProperty );

proto.enableTransition = function(/* style */) {
  // HACK changing transitionProperty during a transition
  // will cause transition to jump
  if ( this.isTransitioning ) {
    return;
  }

  // make `transition: foo, bar, baz` from style object
  // HACK un-comment this when enableTransition can work
  // while a transition is happening
  // var transitionValues = [];
  // for ( var prop in style ) {
  //   // dash-ify camelCased properties like WebkitTransition
  //   prop = vendorProperties[ prop ] || prop;
  //   transitionValues.push( toDashedAll( prop ) );
  // }
  // munge number to millisecond, to match stagger
  var duration = this.layout.options.transitionDuration;
  duration = typeof duration == 'number' ? duration + 'ms' : duration;
  // enable transition styles
  this.css({
    transitionProperty: transitionProps,
    transitionDuration: duration,
    transitionDelay: this.staggerDelay || 0
  });
  // listen for transition end event
  this.element.addEventListener( transitionEndEvent, this, false );
};

// ----- events ----- //

proto.onwebkitTransitionEnd = function( event ) {
  this.ontransitionend( event );
};

proto.onotransitionend = function( event ) {
  this.ontransitionend( event );
};

// properties that I munge to make my life easier
var dashedVendorProperties = {
  '-webkit-transform': 'transform'
};

proto.ontransitionend = function( event ) {
  // disregard bubbled events from children
  if ( event.target !== this.element ) {
    return;
  }
  var _transition = this._transn;
  // get property name of transitioned property, convert to prefix-free
  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;

  // remove property that has completed transitioning
  delete _transition.ingProperties[ propertyName ];
  // check if any properties are still transitioning
  if ( isEmptyObj( _transition.ingProperties ) ) {
    // all properties have completed transitioning
    this.disableTransition();
  }
  // clean style
  if ( propertyName in _transition.clean ) {
    // clean up style
    this.element.style[ event.propertyName ] = '';
    delete _transition.clean[ propertyName ];
  }
  // trigger onTransitionEnd callback
  if ( propertyName in _transition.onEnd ) {
    var onTransitionEnd = _transition.onEnd[ propertyName ];
    onTransitionEnd.call( this );
    delete _transition.onEnd[ propertyName ];
  }

  this.emitEvent( 'transitionEnd', [ this ] );
};

proto.disableTransition = function() {
  this.removeTransitionStyles();
  this.element.removeEventListener( transitionEndEvent, this, false );
  this.isTransitioning = false;
};

/**
 * removes style property from element
 * @param {Object} style
**/
proto._removeStyles = function( style ) {
  // clean up transition styles
  var cleanStyle = {};
  for ( var prop in style ) {
    cleanStyle[ prop ] = '';
  }
  this.css( cleanStyle );
};

var cleanTransitionStyle = {
  transitionProperty: '',
  transitionDuration: '',
  transitionDelay: ''
};

proto.removeTransitionStyles = function() {
  // remove transition
  this.css( cleanTransitionStyle );
};

// ----- stagger ----- //

proto.stagger = function( delay ) {
  delay = isNaN( delay ) ? 0 : delay;
  this.staggerDelay = delay + 'ms';
};

// ----- show/hide/remove ----- //

// remove element from DOM
proto.removeElem = function() {
  this.element.parentNode.removeChild( this.element );
  // remove display: none
  this.css({ display: '' });
  this.emitEvent( 'remove', [ this ] );
};

proto.remove = function() {
  // just remove element if no transition support or no transition
  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {
    this.removeElem();
    return;
  }

  // start transition
  this.once( 'transitionEnd', function() {
    this.removeElem();
  });
  this.hide();
};

proto.reveal = function() {
  delete this.isHidden;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;

  this.transition({
    from: options.hiddenStyle,
    to: options.visibleStyle,
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onRevealTransitionEnd = function() {
  // check if still visible
  // during transition, item may have been hidden
  if ( !this.isHidden ) {
    this.emitEvent('reveal');
  }
};

/**
 * get style property use for hide/reveal transition end
 * @param {String} styleProperty - hiddenStyle/visibleStyle
 * @returns {String}
 */
proto.getHideRevealTransitionEndProperty = function( styleProperty ) {
  var optionStyle = this.layout.options[ styleProperty ];
  // use opacity
  if ( optionStyle.opacity ) {
    return 'opacity';
  }
  // get first property
  for ( var prop in optionStyle ) {
    return prop;
  }
};

proto.hide = function() {
  // set flag
  this.isHidden = true;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;

  this.transition({
    from: options.visibleStyle,
    to: options.hiddenStyle,
    // keep hidden stuff hidden
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onHideTransitionEnd = function() {
  // check if still hidden
  // during transition, item may have been un-hidden
  if ( this.isHidden ) {
    this.css({ display: 'none' });
    this.emitEvent('hide');
  }
};

proto.destroy = function() {
  this.css({
    position: '',
    left: '',
    right: '',
    top: '',
    bottom: '',
    transition: '',
    transform: ''
  });
};

return Item;

}));


/***/ }),

/***/ 1262:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * imagesLoaded v4.1.4
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

( function( window, factory ) { 'use strict';
  // universal module definition

  /*global define: false, module: false, require: false */

  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
      __webpack_require__(1081)
    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter ) {
      return factory( window, EvEmitter );
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('ev-emitter')
    );
  } else {
    // browser global
    window.imagesLoaded = factory(
      window,
      window.EvEmitter
    );
  }

})( typeof window !== 'undefined' ? window : this,

// --------------------------  factory -------------------------- //

function factory( window, EvEmitter ) {

'use strict';

var $ = window.jQuery;
var console = window.console;

// -------------------------- helpers -------------------------- //

// extend objects
function extend( a, b ) {
  for ( var prop in b ) {
    a[ prop ] = b[ prop ];
  }
  return a;
}

var arraySlice = Array.prototype.slice;

// turn element or nodeList into an array
function makeArray( obj ) {
  if ( Array.isArray( obj ) ) {
    // use object if already an array
    return obj;
  }

  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';
  if ( isArrayLike ) {
    // convert nodeList to array
    return arraySlice.call( obj );
  }

  // array of single index
  return [ obj ];
}

// -------------------------- imagesLoaded -------------------------- //

/**
 * @param {Array, Element, NodeList, String} elem
 * @param {Object or Function} options - if function, use as callback
 * @param {Function} onAlways - callback function
 */
function ImagesLoaded( elem, options, onAlways ) {
  // coerce ImagesLoaded() without new, to be new ImagesLoaded()
  if ( !( this instanceof ImagesLoaded ) ) {
    return new ImagesLoaded( elem, options, onAlways );
  }
  // use elem as selector string
  var queryElem = elem;
  if ( typeof elem == 'string' ) {
    queryElem = document.querySelectorAll( elem );
  }
  // bail if bad element
  if ( !queryElem ) {
    console.error( 'Bad element for imagesLoaded ' + ( queryElem || elem ) );
    return;
  }

  this.elements = makeArray( queryElem );
  this.options = extend( {}, this.options );
  // shift arguments if no options set
  if ( typeof options == 'function' ) {
    onAlways = options;
  } else {
    extend( this.options, options );
  }

  if ( onAlways ) {
    this.on( 'always', onAlways );
  }

  this.getImages();

  if ( $ ) {
    // add jQuery Deferred object
    this.jqDeferred = new $.Deferred();
  }

  // HACK check async to allow time to bind listeners
  setTimeout( this.check.bind( this ) );
}

ImagesLoaded.prototype = Object.create( EvEmitter.prototype );

ImagesLoaded.prototype.options = {};

ImagesLoaded.prototype.getImages = function() {
  this.images = [];

  // filter & find items if we have an item selector
  this.elements.forEach( this.addElementImages, this );
};

/**
 * @param {Node} element
 */
ImagesLoaded.prototype.addElementImages = function( elem ) {
  // filter siblings
  if ( elem.nodeName == 'IMG' ) {
    this.addImage( elem );
  }
  // get background image on element
  if ( this.options.background === true ) {
    this.addElementBackgroundImages( elem );
  }

  // find children
  // no non-element nodes, #143
  var nodeType = elem.nodeType;
  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {
    return;
  }
  var childImgs = elem.querySelectorAll('img');
  // concat childElems to filterFound array
  for ( var i=0; i < childImgs.length; i++ ) {
    var img = childImgs[i];
    this.addImage( img );
  }

  // get child background images
  if ( typeof this.options.background == 'string' ) {
    var children = elem.querySelectorAll( this.options.background );
    for ( i=0; i < children.length; i++ ) {
      var child = children[i];
      this.addElementBackgroundImages( child );
    }
  }
};

var elementNodeTypes = {
  1: true,
  9: true,
  11: true
};

ImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {
  var style = getComputedStyle( elem );
  if ( !style ) {
    // Firefox returns null if in a hidden iframe https://bugzil.la/548397
    return;
  }
  // get url inside url("...")
  var reURL = /url\((['"])?(.*?)\1\)/gi;
  var matches = reURL.exec( style.backgroundImage );
  while ( matches !== null ) {
    var url = matches && matches[2];
    if ( url ) {
      this.addBackground( url, elem );
    }
    matches = reURL.exec( style.backgroundImage );
  }
};

/**
 * @param {Image} img
 */
ImagesLoaded.prototype.addImage = function( img ) {
  var loadingImage = new LoadingImage( img );
  this.images.push( loadingImage );
};

ImagesLoaded.prototype.addBackground = function( url, elem ) {
  var background = new Background( url, elem );
  this.images.push( background );
};

ImagesLoaded.prototype.check = function() {
  var _this = this;
  this.progressedCount = 0;
  this.hasAnyBroken = false;
  // complete if no images
  if ( !this.images.length ) {
    this.complete();
    return;
  }

  function onProgress( image, elem, message ) {
    // HACK - Chrome triggers event before object properties have changed. #83
    setTimeout( function() {
      _this.progress( image, elem, message );
    });
  }

  this.images.forEach( function( loadingImage ) {
    loadingImage.once( 'progress', onProgress );
    loadingImage.check();
  });
};

ImagesLoaded.prototype.progress = function( image, elem, message ) {
  this.progressedCount++;
  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;
  // progress event
  this.emitEvent( 'progress', [ this, image, elem ] );
  if ( this.jqDeferred && this.jqDeferred.notify ) {
    this.jqDeferred.notify( this, image );
  }
  // check if completed
  if ( this.progressedCount == this.images.length ) {
    this.complete();
  }

  if ( this.options.debug && console ) {
    console.log( 'progress: ' + message, image, elem );
  }
};

ImagesLoaded.prototype.complete = function() {
  var eventName = this.hasAnyBroken ? 'fail' : 'done';
  this.isComplete = true;
  this.emitEvent( eventName, [ this ] );
  this.emitEvent( 'always', [ this ] );
  if ( this.jqDeferred ) {
    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';
    this.jqDeferred[ jqMethod ]( this );
  }
};

// --------------------------  -------------------------- //

function LoadingImage( img ) {
  this.img = img;
}

LoadingImage.prototype = Object.create( EvEmitter.prototype );

LoadingImage.prototype.check = function() {
  // If complete is true and browser supports natural sizes,
  // try to check for image status manually.
  var isComplete = this.getIsImageComplete();
  if ( isComplete ) {
    // report based on naturalWidth
    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );
    return;
  }

  // If none of the checks above matched, simulate loading on detached element.
  this.proxyImage = new Image();
  this.proxyImage.addEventListener( 'load', this );
  this.proxyImage.addEventListener( 'error', this );
  // bind to image as well for Firefox. #191
  this.img.addEventListener( 'load', this );
  this.img.addEventListener( 'error', this );
  this.proxyImage.src = this.img.src;
};

LoadingImage.prototype.getIsImageComplete = function() {
  // check for non-zero, non-undefined naturalWidth
  // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671
  return this.img.complete && this.img.naturalWidth;
};

LoadingImage.prototype.confirm = function( isLoaded, message ) {
  this.isLoaded = isLoaded;
  this.emitEvent( 'progress', [ this, this.img, message ] );
};

// ----- events ----- //

// trigger specified handler for event type
LoadingImage.prototype.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

LoadingImage.prototype.onload = function() {
  this.confirm( true, 'onload' );
  this.unbindEvents();
};

LoadingImage.prototype.onerror = function() {
  this.confirm( false, 'onerror' );
  this.unbindEvents();
};

LoadingImage.prototype.unbindEvents = function() {
  this.proxyImage.removeEventListener( 'load', this );
  this.proxyImage.removeEventListener( 'error', this );
  this.img.removeEventListener( 'load', this );
  this.img.removeEventListener( 'error', this );
};

// -------------------------- Background -------------------------- //

function Background( url, element ) {
  this.url = url;
  this.element = element;
  this.img = new Image();
}

// inherit LoadingImage prototype
Background.prototype = Object.create( LoadingImage.prototype );

Background.prototype.check = function() {
  this.img.addEventListener( 'load', this );
  this.img.addEventListener( 'error', this );
  this.img.src = this.url;
  // check if image is already complete
  var isComplete = this.getIsImageComplete();
  if ( isComplete ) {
    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );
    this.unbindEvents();
  }
};

Background.prototype.unbindEvents = function() {
  this.img.removeEventListener( 'load', this );
  this.img.removeEventListener( 'error', this );
};

Background.prototype.confirm = function( isLoaded, message ) {
  this.isLoaded = isLoaded;
  this.emitEvent( 'progress', [ this, this.element, message ] );
};

// -------------------------- jQuery -------------------------- //

ImagesLoaded.makeJQueryPlugin = function( jQuery ) {
  jQuery = jQuery || window.jQuery;
  if ( !jQuery ) {
    return;
  }
  // set local variable
  $ = jQuery;
  // $().imagesLoaded()
  $.fn.imagesLoaded = function( options, callback ) {
    var instance = new ImagesLoaded( this, options, callback );
    return instance.jqDeferred.promise( $(this) );
  };
};
// try making plugin
ImagesLoaded.makeJQueryPlugin();

// --------------------------  -------------------------- //

return ImagesLoaded;

});


/***/ }),

/***/ 1263:
/***/ (function(module, exports) {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]';

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object),
    nativeMax = Math.max;

/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  // Safari 9 makes `arguments.length` enumerable in strict mode.
  var result = (isArray(value) || isArguments(value))
    ? baseTimes(value.length, String)
    : [];

  var length = result.length,
      skipIndexes = !!length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    object[key] = value;
  }
}

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = array;
    return apply(func, this, otherArgs);
  };
}

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    assignValue(object, key, newValue === undefined ? source[key] : newValue);
  }
  return object;
}

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = assign;


/***/ }),

/***/ 1264:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var forEach                 = __webpack_require__(1121).forEach;
var elementUtilsMaker       = __webpack_require__(1265);
var listenerHandlerMaker    = __webpack_require__(1266);
var idGeneratorMaker        = __webpack_require__(1267);
var idHandlerMaker          = __webpack_require__(1268);
var reporterMaker           = __webpack_require__(1269);
var browserDetector         = __webpack_require__(1122);
var batchProcessorMaker     = __webpack_require__(1270);
var stateHandler            = __webpack_require__(1272);

//Detection strategies.
var objectStrategyMaker     = __webpack_require__(1273);
var scrollStrategyMaker     = __webpack_require__(1274);

function isCollection(obj) {
    return Array.isArray(obj) || obj.length !== undefined;
}

function toArray(collection) {
    if (!Array.isArray(collection)) {
        var array = [];
        forEach(collection, function (obj) {
            array.push(obj);
        });
        return array;
    } else {
        return collection;
    }
}

function isElement(obj) {
    return obj && obj.nodeType === 1;
}

/**
 * @typedef idHandler
 * @type {object}
 * @property {function} get Gets the resize detector id of the element.
 * @property {function} set Generate and sets the resize detector id of the element.
 */

/**
 * @typedef Options
 * @type {object}
 * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.
                                    Default is true. If true, the listener is guaranteed to be called when it has been added.
                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).
 * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.
                                    If not provided, a default id handler will be used.
 * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.
                                    If not provided, a default id handler will be used.
                                    If set to false, then nothing will be reported.
 * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.
 */

/**
 * Creates an element resize detector instance.
 * @public
 * @param {Options?} options Optional global options object that will decide how this instance will work.
 */
module.exports = function(options) {
    options = options || {};

    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var idHandler;

    if (options.idHandler) {
        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler
        // so that readonly flag always is true when it's used here. This may be removed next major version bump.
        idHandler = {
            get: function (element) { return options.idHandler.get(element, true); },
            set: options.idHandler.set
        };
    } else {
        var idGenerator = idGeneratorMaker();
        var defaultIdHandler = idHandlerMaker({
            idGenerator: idGenerator,
            stateHandler: stateHandler
        });
        idHandler = defaultIdHandler;
    }

    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var reporter = options.reporter;

    if(!reporter) {
        //If options.reporter is false, then the reporter should be quiet.
        var quiet = reporter === false;
        reporter = reporterMaker(quiet);
    }

    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var batchProcessor = getOption(options, "batchProcessor", batchProcessorMaker({ reporter: reporter }));

    //Options to be used as default for the listenTo function.
    var globalOptions = {};
    globalOptions.callOnAdd     = !!getOption(options, "callOnAdd", true);
    globalOptions.debug         = !!getOption(options, "debug", false);

    var eventListenerHandler    = listenerHandlerMaker(idHandler);
    var elementUtils            = elementUtilsMaker({
        stateHandler: stateHandler
    });

    //The detection strategy to be used.
    var detectionStrategy;
    var desiredStrategy = getOption(options, "strategy", "object");
    var importantCssRules = getOption(options, "important", false);
    var strategyOptions = {
        reporter: reporter,
        batchProcessor: batchProcessor,
        stateHandler: stateHandler,
        idHandler: idHandler,
        important: importantCssRules
    };

    if(desiredStrategy === "scroll") {
        if (browserDetector.isLegacyOpera()) {
            reporter.warn("Scroll strategy is not supported on legacy Opera. Changing to object strategy.");
            desiredStrategy = "object";
        } else if (browserDetector.isIE(9)) {
            reporter.warn("Scroll strategy is not supported on IE9. Changing to object strategy.");
            desiredStrategy = "object";
        }
    }

    if(desiredStrategy === "scroll") {
        detectionStrategy = scrollStrategyMaker(strategyOptions);
    } else if(desiredStrategy === "object") {
        detectionStrategy = objectStrategyMaker(strategyOptions);
    } else {
        throw new Error("Invalid strategy name: " + desiredStrategy);
    }

    //Calls can be made to listenTo with elements that are still being installed.
    //Also, same elements can occur in the elements list in the listenTo function.
    //With this map, the ready callbacks can be synchronized between the calls
    //so that the ready callback can always be called when an element is ready - even if
    //it wasn't installed from the function itself.
    var onReadyCallbacks = {};

    /**
     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.
     * @public
     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.
     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.
     * @param {function} listener The callback to be executed for each resize event for each element.
     */
    function listenTo(options, elements, listener) {
        function onResizeCallback(element) {
            var listeners = eventListenerHandler.get(element);
            forEach(listeners, function callListenerProxy(listener) {
                listener(element);
            });
        }

        function addListener(callOnAdd, element, listener) {
            eventListenerHandler.add(element, listener);

            if(callOnAdd) {
                listener(element);
            }
        }

        //Options object may be omitted.
        if(!listener) {
            listener = elements;
            elements = options;
            options = {};
        }

        if(!elements) {
            throw new Error("At least one element required.");
        }

        if(!listener) {
            throw new Error("Listener required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        var elementsReady = 0;

        var callOnAdd = getOption(options, "callOnAdd", globalOptions.callOnAdd);
        var onReadyCallback = getOption(options, "onReady", function noop() {});
        var debug = getOption(options, "debug", globalOptions.debug);

        forEach(elements, function attachListenerToElement(element) {
            if (!stateHandler.getState(element)) {
                stateHandler.initState(element);
                idHandler.set(element);
            }

            var id = idHandler.get(element);

            debug && reporter.log("Attaching listener to element", id, element);

            if(!elementUtils.isDetectable(element)) {
                debug && reporter.log(id, "Not detectable.");
                if(elementUtils.isBusy(element)) {
                    debug && reporter.log(id, "System busy making it detectable");

                    //The element is being prepared to be detectable. Do not make it detectable.
                    //Just add the listener, because the element will soon be detectable.
                    addListener(callOnAdd, element, listener);
                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];
                    onReadyCallbacks[id].push(function onReady() {
                        elementsReady++;

                        if(elementsReady === elements.length) {
                            onReadyCallback();
                        }
                    });
                    return;
                }

                debug && reporter.log(id, "Making detectable...");
                //The element is not prepared to be detectable, so do prepare it and add a listener to it.
                elementUtils.markBusy(element, true);
                return detectionStrategy.makeDetectable({ debug: debug, important: importantCssRules }, element, function onElementDetectable(element) {
                    debug && reporter.log(id, "onElementDetectable");

                    if (stateHandler.getState(element)) {
                        elementUtils.markAsDetectable(element);
                        elementUtils.markBusy(element, false);
                        detectionStrategy.addListener(element, onResizeCallback);
                        addListener(callOnAdd, element, listener);

                        // Since the element size might have changed since the call to "listenTo", we need to check for this change,
                        // so that a resize event may be emitted.
                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.
                        // Also, check the state existance before since the element may have been uninstalled in the installation process.
                        var state = stateHandler.getState(element);
                        if (state && state.startSize) {
                            var width = element.offsetWidth;
                            var height = element.offsetHeight;
                            if (state.startSize.width !== width || state.startSize.height !== height) {
                                onResizeCallback(element);
                            }
                        }

                        if(onReadyCallbacks[id]) {
                            forEach(onReadyCallbacks[id], function(callback) {
                                callback();
                            });
                        }
                    } else {
                        // The element has been unisntalled before being detectable.
                        debug && reporter.log(id, "Element uninstalled before being detectable.");
                    }

                    delete onReadyCallbacks[id];

                    elementsReady++;
                    if(elementsReady === elements.length) {
                        onReadyCallback();
                    }
                });
            }

            debug && reporter.log(id, "Already detecable, adding listener.");

            //The element has been prepared to be detectable and is ready to be listened to.
            addListener(callOnAdd, element, listener);
            elementsReady++;
        });

        if(elementsReady === elements.length) {
            onReadyCallback();
        }
    }

    function uninstall(elements) {
        if(!elements) {
            return reporter.error("At least one element is required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        forEach(elements, function (element) {
            eventListenerHandler.removeAllListeners(element);
            detectionStrategy.uninstall(element);
            stateHandler.cleanState(element);
        });
    }

    function initDocument(targetDocument) {
        detectionStrategy.initDocument && detectionStrategy.initDocument(targetDocument);
    }

    return {
        listenTo: listenTo,
        removeListener: eventListenerHandler.removeListener,
        removeAllListeners: eventListenerHandler.removeAllListeners,
        uninstall: uninstall,
        initDocument: initDocument
    };
};

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),

/***/ 1265:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var getState = options.stateHandler.getState;

    /**
     * Tells if the element has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is detectable or not.
     */
    function isDetectable(element) {
        var state = getState(element);
        return state && !!state.isDetectable;
    }

    /**
     * Marks the element that it has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to mark.
     */
    function markAsDetectable(element) {
        getState(element).isDetectable = true;
    }

    /**
     * Tells if the element is busy or not.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is busy or not.
     */
    function isBusy(element) {
        return !!getState(element).busy;
    }

    /**
     * Marks the object is busy and should not be made detectable.
     * @public
     * @param {element} element The element to mark.
     * @param {boolean} busy If the element is busy or not.
     */
    function markBusy(element, busy) {
        getState(element).busy = !!busy;
    }

    return {
        isDetectable: isDetectable,
        markAsDetectable: markAsDetectable,
        isBusy: isBusy,
        markBusy: markBusy
    };
};


/***/ }),

/***/ 1266:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(idHandler) {
    var eventListeners = {};

    /**
     * Gets all listeners for the given element.
     * @public
     * @param {element} element The element to get all listeners for.
     * @returns All listeners for the given element.
     */
    function getListeners(element) {
        var id = idHandler.get(element);

        if (id === undefined) {
            return [];
        }

        return eventListeners[id] || [];
    }

    /**
     * Stores the given listener for the given element. Will not actually add the listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The callback that the element has added.
     */
    function addListener(element, listener) {
        var id = idHandler.get(element);

        if(!eventListeners[id]) {
            eventListeners[id] = [];
        }

        eventListeners[id].push(listener);
    }

    function removeListener(element, listener) {
        var listeners = getListeners(element);
        for (var i = 0, len = listeners.length; i < len; ++i) {
            if (listeners[i] === listener) {
              listeners.splice(i, 1);
              break;
            }
        }
    }

    function removeAllListeners(element) {
      var listeners = getListeners(element);
      if (!listeners) { return; }
      listeners.length = 0;
    }

    return {
        get: getListeners,
        add: addListener,
        removeListener: removeListener,
        removeAllListeners: removeAllListeners
    };
};


/***/ }),

/***/ 1267:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function() {
    var idCount = 1;

    /**
     * Generates a new unique id in the context.
     * @public
     * @returns {number} A unique id in the context.
     */
    function generate() {
        return idCount++;
    }

    return {
        generate: generate
    };
};


/***/ }),

/***/ 1268:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var idGenerator     = options.idGenerator;
    var getState        = options.stateHandler.getState;

    /**
     * Gets the resize detector id of the element.
     * @public
     * @param {element} element The target element to get the id of.
     * @returns {string|number|null} The id of the element. Null if it has no id.
     */
    function getId(element) {
        var state = getState(element);

        if (state && state.id !== undefined) {
            return state.id;
        }

        return null;
    }

    /**
     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.
     * @public
     * @param {element} element The target element to set the id of.
     * @returns {string|number|null} The id of the element.
     */
    function setId(element) {
        var state = getState(element);

        if (!state) {
            throw new Error("setId required the element to have a resize detection state.");
        }

        var id = idGenerator.generate();

        state.id = id;

        return id;
    }

    return {
        get: getId,
        set: setId
    };
};


/***/ }),

/***/ 1269:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* global console: false */

/**
 * Reporter that handles the reporting of logs, warnings and errors.
 * @public
 * @param {boolean} quiet Tells if the reporter should be quiet or not.
 */
module.exports = function(quiet) {
    function noop() {
        //Does nothing.
    }

    var reporter = {
        log: noop,
        warn: noop,
        error: noop
    };

    if(!quiet && window.console) {
        var attachFunction = function(reporter, name) {
            //The proxy is needed to be able to call the method with the console context,
            //since we cannot use bind.
            reporter[name] = function reporterProxy() {
                var f = console[name];
                if (f.apply) { //IE9 does not support console.log.apply :)
                    f.apply(console, arguments);
                } else {
                    for (var i = 0; i < arguments.length; i++) {
                        f(arguments[i]);
                    }
                }
            };
        };

        attachFunction(reporter, "log");
        attachFunction(reporter, "warn");
        attachFunction(reporter, "error");
    }

    return reporter;
};

/***/ }),

/***/ 1270:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(1271);

module.exports = function batchProcessorMaker(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var asyncProcess    = utils.getOption(options, "async", true);
    var autoProcess     = utils.getOption(options, "auto", true);

    if(autoProcess && !asyncProcess) {
        reporter && reporter.warn("Invalid options combination. auto=true and async=false is invalid. Setting async=true.");
        asyncProcess = true;
    }

    var batch = Batch();
    var asyncFrameHandler;
    var isProcessing = false;

    function addFunction(level, fn) {
        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {
            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.
            // This needs to be done before, since we're checking the size of the batch to be 0.
            processBatchAsync();
        }

        batch.add(level, fn);
    }

    function processBatch() {
        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.
        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).
        isProcessing = true;
        while (batch.size()) {
            var processingBatch = batch;
            batch = Batch();
            processingBatch.process();
        }
        isProcessing = false;
    }

    function forceProcessBatch(localAsyncProcess) {
        if (isProcessing) {
            return;
        }

        if(localAsyncProcess === undefined) {
            localAsyncProcess = asyncProcess;
        }

        if(asyncFrameHandler) {
            cancelFrame(asyncFrameHandler);
            asyncFrameHandler = null;
        }

        if(localAsyncProcess) {
            processBatchAsync();
        } else {
            processBatch();
        }
    }

    function processBatchAsync() {
        asyncFrameHandler = requestFrame(processBatch);
    }

    function clearBatch() {
        batch           = {};
        batchSize       = 0;
        topLevel        = 0;
        bottomLevel     = 0;
    }

    function cancelFrame(listener) {
        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;
        var cancel = clearTimeout;
        return cancel(listener);
    }

    function requestFrame(callback) {
        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };
        var raf = function(fn) { return setTimeout(fn, 0); };
        return raf(callback);
    }

    return {
        add: addFunction,
        force: forceProcessBatch
    };
};

function Batch() {
    var batch       = {};
    var size        = 0;
    var topLevel    = 0;
    var bottomLevel = 0;

    function add(level, fn) {
        if(!fn) {
            fn = level;
            level = 0;
        }

        if(level > topLevel) {
            topLevel = level;
        } else if(level < bottomLevel) {
            bottomLevel = level;
        }

        if(!batch[level]) {
            batch[level] = [];
        }

        batch[level].push(fn);
        size++;
    }

    function process() {
        for(var level = bottomLevel; level <= topLevel; level++) {
            var fns = batch[level];

            for(var i = 0; i < fns.length; i++) {
                var fn = fns[i];
                fn();
            }
        }
    }

    function getSize() {
        return size;
    }

    return {
        add: add,
        process: process,
        size: getSize
    };
}


/***/ }),

/***/ 1271:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

utils.getOption = getOption;

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),

/***/ 1272:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var prop = "_erd";

function initState(element) {
    element[prop] = {};
    return getState(element);
}

function getState(element) {
    return element[prop];
}

function cleanState(element) {
    delete element[prop];
}

module.exports = {
    initState: initState,
    getState: getState,
    cleanState: cleanState
};


/***/ }),

/***/ 1273:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects objects to elements in order to detect resize events.
 * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/
 */



var browserDetector = __webpack_require__(1122);

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;

    if(!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        function listenerProxy() {
            listener(element);
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support object, but supports the resize event directly on elements.
            getState(element).object = {
                proxy: listenerProxy
            };
            element.attachEvent("onresize", listenerProxy);
        } else {
            var object = getObject(element);

            if(!object) {
                throw new Error("Element is not detectable by this strategy.");
            }

            object.contentDocument.defaultView.addEventListener("resize", listenerProxy);
        }
    }

    function buildCssTextString(rules) {
        var seperator = options.important ? " !important; " : "; ";

        return (rules.join(seperator) + seperator).trim();
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};
        var debug = options.debug;

        function injectObject(element, callback) {
            var OBJECT_STYLE = buildCssTextString(["display: block", "position: absolute", "top: 0", "left: 0", "width: 100%", "height: 100%", "border: none", "padding: 0", "margin: 0", "opacity: 0", "z-index: -1000", "pointer-events: none"]);

            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.

            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.
            var positionCheckPerformed = false;

            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.
            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.
            var style = window.getComputedStyle(element);
            var width = element.offsetWidth;
            var height = element.offsetHeight;

            getState(element).startSize = {
                width: width,
                height: height
            };

            function mutateDom() {
                function alterPositionStyles() {
                    if(style.position === "static") {
                        element.style.setProperty("position", "relative", options.important ? "important" : "");

                        var removeRelativeStyles = function(reporter, element, style, property) {
                            function getNumericalValue(value) {
                                return value.replace(/[^-\d\.]/g, "");
                            }

                            var value = style[property];

                            if(value !== "auto" && getNumericalValue(value) !== "0") {
                                reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                                element.style.setProperty(property, "0", options.important ? "important" : "");
                            }
                        };

                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                        removeRelativeStyles(reporter, element, style, "top");
                        removeRelativeStyles(reporter, element, style, "right");
                        removeRelativeStyles(reporter, element, style, "bottom");
                        removeRelativeStyles(reporter, element, style, "left");
                    }
                }

                function onObjectLoad() {
                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.
                    if (!positionCheckPerformed) {
                        alterPositionStyles();
                    }

                    /*jshint validthis: true */

                    function getDocument(element, callback) {
                        //Opera 12 seem to call the object.onload before the actual document has been created.
                        //So if it is not present, poll it with an timeout until it is present.
                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.
                        if(!element.contentDocument) {
                            var state = getState(element);
                            if (state.checkForObjectDocumentTimeoutId) {
                                window.clearTimeout(state.checkForObjectDocumentTimeoutId);
                            }
                            state.checkForObjectDocumentTimeoutId = setTimeout(function checkForObjectDocument() {
                                state.checkForObjectDocumentTimeoutId = 0;
                                getDocument(element, callback);
                            }, 100);

                            return;
                        }

                        callback(element.contentDocument);
                    }

                    //Mutating the object element here seems to fire another load event.
                    //Mutating the inner document of the object element is fine though.
                    var objectElement = this;

                    //Create the style element to be added to the object.
                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {
                        //Notify that the element is ready to be listened to.
                        callback(element);
                    });
                }

                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.
                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.
                if (style.position !== "") {
                    alterPositionStyles(style);
                    positionCheckPerformed = true;
                }

                //Add an object element as a child to the target element that will be listened to for resize events.
                var object = document.createElement("object");
                object.style.cssText = OBJECT_STYLE;
                object.tabIndex = -1;
                object.type = "text/html";
                object.setAttribute("aria-hidden", "true");
                object.onload = onObjectLoad;

                //Safari: This must occur before adding the object to the DOM.
                //IE: Does not like that this happens before, even if it is also added after.
                if(!browserDetector.isIE()) {
                    object.data = "about:blank";
                }

                if (!getState(element)) {
                    // The element has been uninstalled before the actual loading happened.
                    return;
                }

                element.appendChild(object);
                getState(element).object = object;

                //IE: This must occur after adding the object to the DOM.
                if(browserDetector.isIE()) {
                    object.data = "about:blank";
                }
            }

            if(batchProcessor) {
                batchProcessor.add(mutateDom);
            } else {
                mutateDom();
            }
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support objects properly. Luckily they do support the resize event.
            //So do not inject the object and notify that the element is already ready to be listened to.
            //The event handler for the resize event is attached in the utils.addListener instead.
            callback(element);
        } else {
            injectObject(element, callback);
        }
    }

    /**
     * Returns the child object of the target element.
     * @private
     * @param {element} element The target element.
     * @returns The object element of the target.
     */
    function getObject(element) {
        return getState(element).object;
    }

    function uninstall(element) {
        if (!getState(element)) {
            return;
        }

        var object = getObject(element);

        if (!object) {
            return;
        }

        if (browserDetector.isIE(8)) {
            element.detachEvent("onresize", object.proxy);
        } else {
            element.removeChild(object);
        }

        if (getState(element).checkForObjectDocumentTimeoutId) {
            window.clearTimeout(getState(element).checkForObjectDocumentTimeoutId);
        }

        delete getState(element).object;
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall
    };
};


/***/ }),

/***/ 1274:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.
 * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js
 */



var forEach = __webpack_require__(1121).forEach;

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;
    var hasState        = options.stateHandler.hasState;
    var idHandler       = options.idHandler;

    if (!batchProcessor) {
        throw new Error("Missing required dependency: batchProcessor");
    }

    if (!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    //TODO: Could this perhaps be done at installation time?
    var scrollbarSizes = getScrollbarSizes();

    var styleId = "erd_scroll_detection_scrollbar_style";
    var detectionContainerClass = "erd_scroll_detection_container";

    function initDocument(targetDocument) {
        // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.
        // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).
        injectScrollStyle(targetDocument, styleId, detectionContainerClass);
    }

    initDocument(window.document);

    function buildCssTextString(rules) {
        var seperator = options.important ? " !important; " : "; ";

        return (rules.join(seperator) + seperator).trim();
    }

    function getScrollbarSizes() {
        var width = 500;
        var height = 500;

        var child = document.createElement("div");
        child.style.cssText = buildCssTextString(["position: absolute", "width: " + width*2 + "px", "height: " + height*2 + "px", "visibility: hidden", "margin: 0", "padding: 0"]);

        var container = document.createElement("div");
        container.style.cssText = buildCssTextString(["position: absolute", "width: " + width + "px", "height: " + height + "px", "overflow: scroll", "visibility: none", "top: " + -width*3 + "px", "left: " + -height*3 + "px", "visibility: hidden", "margin: 0", "padding: 0"]);

        container.appendChild(child);

        document.body.insertBefore(container, document.body.firstChild);

        var widthSize = width - container.clientWidth;
        var heightSize = height - container.clientHeight;

        document.body.removeChild(container);

        return {
            width: widthSize,
            height: heightSize
        };
    }

    function injectScrollStyle(targetDocument, styleId, containerClass) {
        function injectStyle(style, method) {
            method = method || function (element) {
                targetDocument.head.appendChild(element);
            };

            var styleElement = targetDocument.createElement("style");
            styleElement.innerHTML = style;
            styleElement.id = styleId;
            method(styleElement);
            return styleElement;
        }

        if (!targetDocument.getElementById(styleId)) {
            var containerAnimationClass = containerClass + "_animation";
            var containerAnimationActiveClass = containerClass + "_animation_active";
            var style = "/* Created by the element-resize-detector library. */\n";
            style += "." + containerClass + " > div::-webkit-scrollbar { " + buildCssTextString(["display: none"]) + " }\n\n";
            style += "." + containerAnimationActiveClass + " { " + buildCssTextString(["-webkit-animation-duration: 0.1s", "animation-duration: 0.1s", "-webkit-animation-name: " + containerAnimationClass, "animation-name: " + containerAnimationClass]) + " }\n";
            style += "@-webkit-keyframes " + containerAnimationClass +  " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\n";
            style += "@keyframes " + containerAnimationClass +          " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }";
            injectStyle(style);
        }
    }

    function addAnimationClass(element) {
        element.className += " " + detectionContainerClass + "_animation_active";
    }

    function addEvent(el, name, cb) {
        if (el.addEventListener) {
            el.addEventListener(name, cb);
        } else if(el.attachEvent) {
            el.attachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to add event listeners.");
        }
    }

    function removeEvent(el, name, cb) {
        if (el.removeEventListener) {
            el.removeEventListener(name, cb);
        } else if(el.detachEvent) {
            el.detachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to remove event listeners.");
        }
    }

    function getExpandElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];
    }

    function getShrinkElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        var listeners = getState(element).listeners;

        if (!listeners.push) {
            throw new Error("Cannot add listener to an element that is not detectable.");
        }

        getState(element).listeners.push(listener);
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};

        function debug() {
            if (options.debug) {
                var args = Array.prototype.slice.call(arguments);
                args.unshift(idHandler.get(element), "Scroll: ");
                if (reporter.log.apply) {
                    reporter.log.apply(null, args);
                } else {
                    for (var i = 0; i < args.length; i++) {
                        reporter.log(args[i]);
                    }
                }
            }
        }

        function isDetached(element) {
            function isInDocument(element) {
                var isInShadowRoot = element.getRootNode && element.getRootNode().contains(element);
                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element) || isInShadowRoot;
            }

            if (!isInDocument(element)) {
                return true;
            }

            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520
            if (window.getComputedStyle(element) === null) {
                return true;
            }

            return false;
        }

        function isUnrendered(element) {
            // Check the absolute positioned container since the top level container is display: inline.
            var container = getState(element).container.childNodes[0];
            var style = window.getComputedStyle(container);
            return !style.width || style.width.indexOf("px") === -1; //Can only compute pixel value when rendered.
        }

        function getStyle() {
            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,
            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).
            var elementStyle            = window.getComputedStyle(element);
            var style                   = {};
            style.position              = elementStyle.position;
            style.width                 = element.offsetWidth;
            style.height                = element.offsetHeight;
            style.top                   = elementStyle.top;
            style.right                 = elementStyle.right;
            style.bottom                = elementStyle.bottom;
            style.left                  = elementStyle.left;
            style.widthCSS              = elementStyle.width;
            style.heightCSS             = elementStyle.height;
            return style;
        }

        function storeStartSize() {
            var style = getStyle();
            getState(element).startSize = {
                width: style.width,
                height: style.height
            };
            debug("Element start size", getState(element).startSize);
        }

        function initListeners() {
            getState(element).listeners = [];
        }

        function storeStyle() {
            debug("storeStyle invoked.");
            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getStyle();
            getState(element).style = style;
        }

        function storeCurrentSize(element, width, height) {
            getState(element).lastWidth = width;
            getState(element).lastHeight  = height;
        }

        function getExpandChildElement(element) {
            return getExpandElement(element).childNodes[0];
        }

        function getWidthOffset() {
            return 2 * scrollbarSizes.width + 1;
        }

        function getHeightOffset() {
            return 2 * scrollbarSizes.height + 1;
        }

        function getExpandWidth(width) {
            return width + 10 + getWidthOffset();
        }

        function getExpandHeight(height) {
            return height + 10 + getHeightOffset();
        }

        function getShrinkWidth(width) {
            return width * 2 + getWidthOffset();
        }

        function getShrinkHeight(height) {
            return height * 2 + getHeightOffset();
        }

        function positionScrollbars(element, width, height) {
            var expand          = getExpandElement(element);
            var shrink          = getShrinkElement(element);
            var expandWidth     = getExpandWidth(width);
            var expandHeight    = getExpandHeight(height);
            var shrinkWidth     = getShrinkWidth(width);
            var shrinkHeight    = getShrinkHeight(height);
            expand.scrollLeft   = expandWidth;
            expand.scrollTop    = expandHeight;
            shrink.scrollLeft   = shrinkWidth;
            shrink.scrollTop    = shrinkHeight;
        }

        function injectContainerElement() {
            var container = getState(element).container;

            if (!container) {
                container                   = document.createElement("div");
                container.className         = detectionContainerClass;
                container.style.cssText     = buildCssTextString(["visibility: hidden", "display: inline", "width: 0px", "height: 0px", "z-index: -1", "overflow: hidden", "margin: 0", "padding: 0"]);
                getState(element).container = container;
                addAnimationClass(container);
                element.appendChild(container);

                var onAnimationStart = function () {
                    getState(element).onRendered && getState(element).onRendered();
                };

                addEvent(container, "animationstart", onAnimationStart);

                // Store the event handler here so that they may be removed when uninstall is called.
                // See uninstall function for an explanation why it is needed.
                getState(element).onAnimationStart = onAnimationStart;
            }

            return container;
        }

        function injectScrollElements() {
            function alterPositionStyles() {
                var style = getState(element).style;

                if(style.position === "static") {
                    element.style.setProperty("position", "relative",options.important ? "important" : "");

                    var removeRelativeStyles = function(reporter, element, style, property) {
                        function getNumericalValue(value) {
                            return value.replace(/[^-\d\.]/g, "");
                        }

                        var value = style[property];

                        if(value !== "auto" && getNumericalValue(value) !== "0") {
                            reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                            element.style[property] = 0;
                        }
                    };

                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                    removeRelativeStyles(reporter, element, style, "top");
                    removeRelativeStyles(reporter, element, style, "right");
                    removeRelativeStyles(reporter, element, style, "bottom");
                    removeRelativeStyles(reporter, element, style, "left");
                }
            }

            function getLeftTopBottomRightCssText(left, top, bottom, right) {
                left = (!left ? "0" : (left + "px"));
                top = (!top ? "0" : (top + "px"));
                bottom = (!bottom ? "0" : (bottom + "px"));
                right = (!right ? "0" : (right + "px"));

                return ["left: " + left, "top: " + top, "right: " + right, "bottom: " + bottom];
            }

            debug("Injecting elements");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            alterPositionStyles();

            var rootContainer = getState(element).container;

            if (!rootContainer) {
                rootContainer = injectContainerElement();
            }

            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),
            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than
            // the targeted element.
            // When the bug is resolved, "containerContainer" may be removed.

            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).
            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.

            var scrollbarWidth          = scrollbarSizes.width;
            var scrollbarHeight         = scrollbarSizes.height;
            var containerContainerStyle = buildCssTextString(["position: absolute", "flex: none", "overflow: hidden", "z-index: -1", "visibility: hidden", "width: 100%", "height: 100%", "left: 0px", "top: 0px"]);
            var containerStyle          = buildCssTextString(["position: absolute", "flex: none", "overflow: hidden", "z-index: -1", "visibility: hidden"].concat(getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth)));
            var expandStyle             = buildCssTextString(["position: absolute", "flex: none", "overflow: scroll", "z-index: -1", "visibility: hidden", "width: 100%", "height: 100%"]);
            var shrinkStyle             = buildCssTextString(["position: absolute", "flex: none", "overflow: scroll", "z-index: -1", "visibility: hidden", "width: 100%", "height: 100%"]);
            var expandChildStyle        = buildCssTextString(["position: absolute", "left: 0", "top: 0"]);
            var shrinkChildStyle        = buildCssTextString(["position: absolute", "width: 200%", "height: 200%"]);

            var containerContainer      = document.createElement("div");
            var container               = document.createElement("div");
            var expand                  = document.createElement("div");
            var expandChild             = document.createElement("div");
            var shrink                  = document.createElement("div");
            var shrinkChild             = document.createElement("div");

            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56
            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.
            containerContainer.dir              = "ltr";

            containerContainer.style.cssText    = containerContainerStyle;
            containerContainer.className        = detectionContainerClass;
            container.className                 = detectionContainerClass;
            container.style.cssText             = containerStyle;
            expand.style.cssText                = expandStyle;
            expandChild.style.cssText           = expandChildStyle;
            shrink.style.cssText                = shrinkStyle;
            shrinkChild.style.cssText           = shrinkChildStyle;

            expand.appendChild(expandChild);
            shrink.appendChild(shrinkChild);
            container.appendChild(expand);
            container.appendChild(shrink);
            containerContainer.appendChild(container);
            rootContainer.appendChild(containerContainer);

            function onExpandScroll() {
                var state = getState(element);
                if (state && state.onExpand) {
                    state.onExpand();
                } else {
                    debug("Aborting expand scroll handler: element has been uninstalled");
                }
            }

            function onShrinkScroll() {
                var state = getState(element);
                if (state && state.onShrink) {
                    state.onShrink();
                } else {
                    debug("Aborting shrink scroll handler: element has been uninstalled");
                }
            }

            addEvent(expand, "scroll", onExpandScroll);
            addEvent(shrink, "scroll", onShrinkScroll);

            // Store the event handlers here so that they may be removed when uninstall is called.
            // See uninstall function for an explanation why it is needed.
            getState(element).onExpandScroll = onExpandScroll;
            getState(element).onShrinkScroll = onShrinkScroll;
        }

        function registerListenersAndPositionElements() {
            function updateChildSizes(element, width, height) {
                var expandChild             = getExpandChildElement(element);
                var expandWidth             = getExpandWidth(width);
                var expandHeight            = getExpandHeight(height);
                expandChild.style.setProperty("width", expandWidth + "px", options.important ? "important" : "");
                expandChild.style.setProperty("height", expandHeight + "px", options.important ? "important" : "");
            }

            function updateDetectorElements(done) {
                var width           = element.offsetWidth;
                var height          = element.offsetHeight;

                // Check whether the size has actually changed since last time the algorithm ran. If not, some steps may be skipped.
                var sizeChanged = width !== getState(element).lastWidth || height !== getState(element).lastHeight;

                debug("Storing current size", width, height);

                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.
                // Otherwise the if-check in handleScroll is useless.
                storeCurrentSize(element, width, height);

                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.
                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.

                batchProcessor.add(0, function performUpdateChildSizes() {
                    if (!sizeChanged) {
                        return;
                    }

                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    if (options.debug) {
                        var w = element.offsetWidth;
                        var h = element.offsetHeight;

                        if (w !== width || h !== height) {
                            reporter.warn(idHandler.get(element), "Scroll: Size changed before updating detector elements.");
                        }
                    }

                    updateChildSizes(element, width, height);
                });

                batchProcessor.add(1, function updateScrollbars() {
                    // This function needs to be invoked event though the size is unchanged. The element could have been resized very quickly and then
                    // been restored to the original size, which will have changed the scrollbar positions.

                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    positionScrollbars(element, width, height);
                });

                if (sizeChanged && done) {
                    batchProcessor.add(2, function () {
                        if (!getState(element)) {
                            debug("Aborting because element has been uninstalled");
                            return;
                        }

                        if (!areElementsInjected()) {
                          debug("Aborting because element container has not been initialized");
                          return;
                        }

                        done();
                    });
                }
            }

            function areElementsInjected() {
                return !!getState(element).container;
            }

            function notifyListenersIfNeeded() {
                function isFirstNotify() {
                    return getState(element).lastNotifiedWidth === undefined;
                }

                debug("notifyListenersIfNeeded invoked");

                var state = getState(element);

                // Don't notify if the current size is the start size, and this is the first notification.
                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {
                    return debug("Not notifying: Size is the same as the start size, and there has been no notification yet.");
                }

                // Don't notify if the size already has been notified.
                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {
                    return debug("Not notifying: Size already notified");
                }


                debug("Current size not notified, notifying...");
                state.lastNotifiedWidth = state.lastWidth;
                state.lastNotifiedHeight = state.lastHeight;
                forEach(getState(element).listeners, function (listener) {
                    listener(element);
                });
            }

            function handleRender() {
                debug("startanimation triggered.");

                if (isUnrendered(element)) {
                    debug("Ignoring since element is still unrendered...");
                    return;
                }

                debug("Element rendered.");
                var expand = getExpandElement(element);
                var shrink = getShrinkElement(element);
                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {
                    debug("Scrollbars out of sync. Updating detector elements...");
                    updateDetectorElements(notifyListenersIfNeeded);
                }
            }

            function handleScroll() {
                debug("Scroll detected.");

                if (isUnrendered(element)) {
                    // Element is still unrendered. Skip this scroll event.
                    debug("Scroll event fired while unrendered. Ignoring...");
                    return;
                }

                updateDetectorElements(notifyListenersIfNeeded);
            }

            debug("registerListenersAndPositionElements invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            getState(element).onRendered = handleRender;
            getState(element).onExpand = handleScroll;
            getState(element).onShrink = handleScroll;

            var style = getState(element).style;
            updateChildSizes(element, style.width, style.height);
        }

        function finalizeDomMutation() {
            debug("finalizeDomMutation invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getState(element).style;
            storeCurrentSize(element, style.width, style.height);
            positionScrollbars(element, style.width, style.height);
        }

        function ready() {
            callback(element);
        }

        function install() {
            debug("Installing...");
            initListeners();
            storeStartSize();

            batchProcessor.add(0, storeStyle);
            batchProcessor.add(1, injectScrollElements);
            batchProcessor.add(2, registerListenersAndPositionElements);
            batchProcessor.add(3, finalizeDomMutation);
            batchProcessor.add(4, ready);
        }

        debug("Making detectable...");

        if (isDetached(element)) {
            debug("Element is detached");

            injectContainerElement();

            debug("Waiting until element is attached...");

            getState(element).onRendered = function () {
                debug("Element is now attached");
                install();
            };
        } else {
            install();
        }
    }

    function uninstall(element) {
        var state = getState(element);

        if (!state) {
            // Uninstall has been called on a non-erd element.
            return;
        }

        // Uninstall may have been called in the following scenarios:
        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).
        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).
        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).
        // So to be on the safe side, let's check for each thing before removing.

        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.
        state.onExpandScroll && removeEvent(getExpandElement(element), "scroll", state.onExpandScroll);
        state.onShrinkScroll && removeEvent(getShrinkElement(element), "scroll", state.onShrinkScroll);
        state.onAnimationStart && removeEvent(state.container, "animationstart", state.onAnimationStart);

        state.container && element.removeChild(state.container);
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall,
        initDocument: initDocument
    };
};


/***/ }),

/***/ 1275:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    symbolTag = '[object Symbol]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array ? array.length : 0;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array ? array.length : 0;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array ? array.length : 0,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  if (value !== value) {
    return baseFindIndex(array, baseIsNaN, fromIndex);
  }
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/**
 * Checks if a cache value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Symbol = root.Symbol,
    getPrototype = overArg(Object.getPrototypeOf, Object),
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice,
    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols,
    nativeMax = Math.max;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values ? values.length : 0;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  // Safari 9 makes `arguments.length` enumerable in strict mode.
  var result = (isArray(value) || isArguments(value))
    ? baseTimes(value.length, String)
    : [];

  var length = result.length,
      skipIndexes = !!length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} props The property identifiers to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, props) {
  object = Object(object);
  return basePickBy(object, props, function(value, key) {
    return key in object;
  });
}

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} props The property identifiers to pick from.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, props, predicate) {
  var index = -1,
      length = props.length,
      result = {};

  while (++index < length) {
    var key = props[index],
        value = object[key];

    if (predicate(value, key)) {
      result[key] = value;
    }
  }
  return result;
}

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = array;
    return apply(func, this, otherArgs);
  };
}

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Creates an array of the own enumerable symbol properties of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

/**
 * Creates an array of the own and inherited enumerable symbol properties
 * of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable string keyed properties of `object` that are
 * not omitted.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [props] The property identifiers to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = baseRest(function(object, props) {
  if (object == null) {
    return {};
  }
  props = arrayMap(baseFlatten(props, 1), toKey);
  return basePick(object, baseDifference(getAllKeysIn(object), props));
});

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = omit;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(153)))

/***/ }),

/***/ 1276:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _lodashThrottle = __webpack_require__(1277);

var _lodashThrottle2 = _interopRequireDefault(_lodashThrottle);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var ScrollAnimation = (function (_Component) {
  _inherits(ScrollAnimation, _Component);

  function ScrollAnimation(props) {
    _classCallCheck(this, ScrollAnimation);

    _get(Object.getPrototypeOf(ScrollAnimation.prototype), "constructor", this).call(this, props);
    this.serverSide = typeof window === "undefined";
    this.listener = (0, _lodashThrottle2["default"])(this.handleScroll.bind(this), 50);
    this.visibility = {
      onScreen: false,
      inViewport: false
    };

    this.state = {
      classes: "animated",
      style: {
        animationDuration: this.props.duration + "s",
        opacity: this.props.initiallyVisible ? 1 : 0
      }
    };
  }

  _createClass(ScrollAnimation, [{
    key: "getElementTop",
    value: function getElementTop(elm) {
      var yPos = 0;
      while (elm && elm.offsetTop !== undefined && elm.clientTop !== undefined) {
        yPos += elm.offsetTop + elm.clientTop;
        elm = elm.offsetParent;
      }
      return yPos;
    }
  }, {
    key: "getScrollPos",
    value: function getScrollPos() {
      if (this.scrollableParent.pageYOffset !== undefined) {
        return this.scrollableParent.pageYOffset;
      }
      return this.scrollableParent.scrollTop;
    }
  }, {
    key: "getScrollableParentHeight",
    value: function getScrollableParentHeight() {
      if (this.scrollableParent.innerHeight !== undefined) {
        return this.scrollableParent.innerHeight;
      }
      return this.scrollableParent.clientHeight;
    }
  }, {
    key: "getViewportTop",
    value: function getViewportTop() {
      return this.getScrollPos() + this.props.offset;
    }
  }, {
    key: "getViewportBottom",
    value: function getViewportBottom() {
      return this.getScrollPos() + this.getScrollableParentHeight() - this.props.offset;
    }
  }, {
    key: "isInViewport",
    value: function isInViewport(y) {
      return y >= this.getViewportTop() && y <= this.getViewportBottom();
    }
  }, {
    key: "isAboveViewport",
    value: function isAboveViewport(y) {
      return y < this.getViewportTop();
    }
  }, {
    key: "isBelowViewport",
    value: function isBelowViewport(y) {
      return y > this.getViewportBottom();
    }
  }, {
    key: "inViewport",
    value: function inViewport(elementTop, elementBottom) {
      return this.isInViewport(elementTop) || this.isInViewport(elementBottom) || this.isAboveViewport(elementTop) && this.isBelowViewport(elementBottom);
    }
  }, {
    key: "onScreen",
    value: function onScreen(elementTop, elementBottom) {
      return !this.isAboveScreen(elementBottom) && !this.isBelowScreen(elementTop);
    }
  }, {
    key: "isAboveScreen",
    value: function isAboveScreen(y) {
      return y < this.getScrollPos();
    }
  }, {
    key: "isBelowScreen",
    value: function isBelowScreen(y) {
      return y > this.getScrollPos() + this.getScrollableParentHeight();
    }
  }, {
    key: "getVisibility",
    value: function getVisibility() {
      var elementTop = this.getElementTop(this.node) - this.getElementTop(this.scrollableParent);
      var elementBottom = elementTop + this.node.clientHeight;
      return {
        inViewport: this.inViewport(elementTop, elementBottom),
        onScreen: this.onScreen(elementTop, elementBottom)
      };
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.serverSide) {
        var parentSelector = this.props.scrollableParentSelector;
        this.scrollableParent = parentSelector ? document.querySelector(parentSelector) : window;
        if (this.scrollableParent && this.scrollableParent.addEventListener) {
          this.scrollableParent.addEventListener("scroll", this.listener);
        } else {
          console.warn("Cannot find element by locator: " + this.props.scrollableParentSelector);
        }
        if (this.props.animatePreScroll) {
          this.handleScroll();
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.delayedAnimationTimeout);
      clearTimeout(this.callbackTimeout);
      if (window && window.removeEventListener) {
        window.removeEventListener("scroll", this.listener);
      }
    }
  }, {
    key: "visibilityHasChanged",
    value: function visibilityHasChanged(previousVis, currentVis) {
      return previousVis.inViewport !== currentVis.inViewport || previousVis.onScreen !== currentVis.onScreen;
    }
  }, {
    key: "animate",
    value: function animate(animation, callback) {
      var _this = this;

      this.delayedAnimationTimeout = setTimeout(function () {
        _this.animating = true;
        _this.setState({
          classes: "animated " + animation,
          style: {
            animationDuration: _this.props.duration + "s"
          }
        });
        _this.callbackTimeout = setTimeout(callback, _this.props.duration * 1000);
      }, this.props.delay);
    }
  }, {
    key: "animateIn",
    value: function animateIn(callback) {
      var _this2 = this;

      this.animate(this.props.animateIn, function () {
        if (!_this2.props.animateOnce) {
          _this2.setState({
            style: {
              animationDuration: _this2.props.duration + "s",
              opacity: 1
            }
          });
          _this2.animating = false;
        }
        var vis = _this2.getVisibility();
        if (callback) {
          callback(vis);
        }
      });
    }
  }, {
    key: "animateOut",
    value: function animateOut(callback) {
      var _this3 = this;

      this.animate(this.props.animateOut, function () {
        _this3.setState({
          classes: "animated",
          style: {
            animationDuration: _this3.props.duration + "s",
            opacity: 0
          }
        });
        var vis = _this3.getVisibility();
        if (vis.inViewport && _this3.props.animateIn) {
          _this3.animateIn(_this3.props.afterAnimatedIn);
        } else {
          _this3.animating = false;
        }

        if (callback) {
          callback(vis);
        }
      });
    }
  }, {
    key: "handleScroll",
    value: function handleScroll() {
      if (!this.animating) {
        var currentVis = this.getVisibility();
        if (this.visibilityHasChanged(this.visibility, currentVis)) {
          clearTimeout(this.delayedAnimationTimeout);
          if (!currentVis.onScreen) {
            this.setState({
              classes: "animated",
              style: {
                animationDuration: this.props.duration + "s",
                opacity: this.props.initiallyVisible ? 1 : 0
              }
            });
          } else if (currentVis.inViewport && this.props.animateIn) {
            this.animateIn(this.props.afterAnimatedIn);
          } else if (currentVis.onScreen && this.visibility.inViewport && this.props.animateOut && this.state.style.opacity === 1) {
            this.animateOut(this.props.afterAnimatedOut);
          }
          this.visibility = currentVis;
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var classes = this.props.className ? this.props.className + " " + this.state.classes : this.state.classes;
      return _react2["default"].createElement(
        "div",
        { ref: function (node) {
            _this4.node = node;
          }, className: classes, style: Object.assign({}, this.state.style, this.props.style) },
        this.props.children
      );
    }
  }]);

  return ScrollAnimation;
})(_react.Component);

exports["default"] = ScrollAnimation;

ScrollAnimation.defaultProps = {
  offset: 150,
  duration: 1,
  initiallyVisible: false,
  delay: 0,
  animateOnce: false,
  animatePreScroll: true
};

ScrollAnimation.propTypes = {
  animateIn: _propTypes2["default"].string,
  animateOut: _propTypes2["default"].string,
  offset: _propTypes2["default"].number,
  duration: _propTypes2["default"].number,
  delay: _propTypes2["default"].number,
  initiallyVisible: _propTypes2["default"].bool,
  animateOnce: _propTypes2["default"].bool,
  style: _propTypes2["default"].object,
  scrollableParentSelector: _propTypes2["default"].string,
  className: _propTypes2["default"].string,
  animatePreScroll: _propTypes2["default"].bool
};
module.exports = exports["default"];

/***/ }),

/***/ 1277:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = throttle;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(153)))

/***/ }),

/***/ 1278:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactToggle = __webpack_require__(1279);

var _reactToggle2 = _interopRequireDefault(_reactToggle);

var _helpersFunction = __webpack_require__(315);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import { gsap } from 'gsap';
// import { gsap, MorphSVGPlugin } from "gsap-trial/all";

//  gsap.registerPlugin(MorphSVGPlugin);

var UsefullProductItem = function UsefullProductItem(_ref) {
    var items = _ref.items,
        basketData = _ref.basketData,
        addModelToBasket = _ref.addModelToBasket;


    var handleTofuChange = function handleTofuChange(id) {
        items.map(function (item) {
            if (item.id === id) {
                item.toggle = !item.toggle;
            }
        });
    };

    /*
    const handeMouseEnter = (e) => {
        console.log('handeMouseEnter')
    }
      const handleMouseLeave = (e) => {
        console.log('handleMouseLeave')
    }
      const handeclick = (e) => {
        console.log('handeclick')
    }
    */

    return _react2.default.createElement(
        "div",
        null,
        items.map(function (item) {
            return _react2.default.createElement(
                "label",
                { key: item.id, className: "usefullToggle" },
                _react2.default.createElement(_reactToggle2.default, {
                    defaultChecked: basketData.some(function (basket) {
                        return basket.id === item.id;
                    }) ? true : false,
                    icons: false,
                    "data-status": basketData.some(function (basket) {
                        return basket.id === item.id;
                    }) ? 'in' : 'out',
                    onChange: function onChange(e) {
                        return addModelToBasket(e, item);
                    }
                }),
                _react2.default.createElement("img", { loading: "lazy", src: item.deviceImages.mainImg.src, alt: "" }),
                _react2.default.createElement(
                    "div",
                    { className: "description" },
                    _react2.default.createElement(
                        "span",
                        null,
                        item.model
                    ),
                    _react2.default.createElement("strong", null),
                    _react2.default.createElement(
                        "span",
                        null,
                        (item.discountPrice === false ? (0, _helpersFunction.formatPrice)(item.price) : (0, _helpersFunction.formatPrice)(item.discountPrice)) + " CHF"
                    )
                )
            );
        })
    );
};

exports.default = UsefullProductItem;

/***/ }),

/***/ 1279:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(869);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _check = __webpack_require__(1280);

var _check2 = _interopRequireDefault(_check);

var _x = __webpack_require__(1281);

var _x2 = _interopRequireDefault(_x);

var _util = __webpack_require__(1282);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Toggle = function (_PureComponent) {
  _inherits(Toggle, _PureComponent);

  function Toggle(props) {
    _classCallCheck(this, Toggle);

    var _this = _possibleConstructorReturn(this, (Toggle.__proto__ || Object.getPrototypeOf(Toggle)).call(this, props));

    _this.handleClick = _this.handleClick.bind(_this);
    _this.handleTouchStart = _this.handleTouchStart.bind(_this);
    _this.handleTouchMove = _this.handleTouchMove.bind(_this);
    _this.handleTouchEnd = _this.handleTouchEnd.bind(_this);
    _this.handleFocus = _this.handleFocus.bind(_this);
    _this.handleBlur = _this.handleBlur.bind(_this);
    _this.previouslyChecked = !!(props.checked || props.defaultChecked);
    _this.state = {
      checked: !!(props.checked || props.defaultChecked),
      hasFocus: false
    };
    return _this;
  }

  _createClass(Toggle, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.checked !== this.props.checked) {
        // Disable linting rule here since this usage of setState inside
        // componentDidUpdate is OK; see
        // https://reactjs.org/docs/react-component.html#componentdidupdate
        // eslint-disable-next-line react/no-did-update-set-state
        this.setState({ checked: !!this.props.checked });
      }
    }
  }, {
    key: 'handleClick',
    value: function handleClick(event) {
      if (this.props.disabled) {
        return;
      }
      var checkbox = this.input;
      if (event.target !== checkbox && !this.moved) {
        this.previouslyChecked = checkbox.checked;
        event.preventDefault();
        checkbox.focus();
        checkbox.click();
        return;
      }

      var checked = this.props.hasOwnProperty('checked') ? this.props.checked : checkbox.checked;

      this.setState({ checked: checked });
    }
  }, {
    key: 'handleTouchStart',
    value: function handleTouchStart(event) {
      if (this.props.disabled) {
        return;
      }
      this.startX = (0, _util.pointerCoord)(event).x;
      this.activated = true;
    }
  }, {
    key: 'handleTouchMove',
    value: function handleTouchMove(event) {
      if (!this.activated) return;
      this.moved = true;

      if (this.startX) {
        var currentX = (0, _util.pointerCoord)(event).x;
        if (this.state.checked && currentX + 15 < this.startX) {
          this.setState({ checked: false });
          this.startX = currentX;
          this.activated = true;
        } else if (currentX - 15 > this.startX) {
          this.setState({ checked: true });
          this.startX = currentX;
          this.activated = currentX < this.startX + 5;
        }
      }
    }
  }, {
    key: 'handleTouchEnd',
    value: function handleTouchEnd(event) {
      if (!this.moved) return;
      var checkbox = this.input;
      event.preventDefault();

      if (this.startX) {
        var endX = (0, _util.pointerCoord)(event).x;
        if (this.previouslyChecked === true && this.startX + 4 > endX) {
          if (this.previouslyChecked !== this.state.checked) {
            this.setState({ checked: false });
            this.previouslyChecked = this.state.checked;
            checkbox.click();
          }
        } else if (this.startX - 4 < endX) {
          if (this.previouslyChecked !== this.state.checked) {
            this.setState({ checked: true });
            this.previouslyChecked = this.state.checked;
            checkbox.click();
          }
        }

        this.activated = false;
        this.startX = null;
        this.moved = false;
      }
    }
  }, {
    key: 'handleFocus',
    value: function handleFocus(event) {
      var onFocus = this.props.onFocus;


      if (onFocus) {
        onFocus(event);
      }

      this.setState({ hasFocus: true });
    }
  }, {
    key: 'handleBlur',
    value: function handleBlur(event) {
      var onBlur = this.props.onBlur;


      if (onBlur) {
        onBlur(event);
      }

      this.setState({ hasFocus: false });
    }
  }, {
    key: 'getIcon',
    value: function getIcon(type) {
      var icons = this.props.icons;

      if (!icons) {
        return null;
      }
      return icons[type] === undefined ? Toggle.defaultProps.icons[type] : icons[type];
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          _icons = _props.icons,
          inputProps = _objectWithoutProperties(_props, ['className', 'icons']);

      var classes = (0, _classnames2.default)('react-toggle', {
        'react-toggle--checked': this.state.checked,
        'react-toggle--focus': this.state.hasFocus,
        'react-toggle--disabled': this.props.disabled
      }, className);

      return _react2.default.createElement(
        'div',
        { className: classes,
          onClick: this.handleClick,
          onTouchStart: this.handleTouchStart,
          onTouchMove: this.handleTouchMove,
          onTouchEnd: this.handleTouchEnd },
        _react2.default.createElement(
          'div',
          { className: 'react-toggle-track' },
          _react2.default.createElement(
            'div',
            { className: 'react-toggle-track-check' },
            this.getIcon('checked')
          ),
          _react2.default.createElement(
            'div',
            { className: 'react-toggle-track-x' },
            this.getIcon('unchecked')
          )
        ),
        _react2.default.createElement('div', { className: 'react-toggle-thumb' }),
        _react2.default.createElement('input', _extends({}, inputProps, {
          ref: function ref(_ref) {
            _this2.input = _ref;
          },
          onFocus: this.handleFocus,
          onBlur: this.handleBlur,
          className: 'react-toggle-screenreader-only',
          type: 'checkbox' }))
      );
    }
  }]);

  return Toggle;
}(_react.PureComponent);

exports.default = Toggle;


Toggle.displayName = 'Toggle';

Toggle.defaultProps = {
  icons: {
    checked: _react2.default.createElement(_check2.default, null),
    unchecked: _react2.default.createElement(_x2.default, null)
  }
};

Toggle.propTypes = {
  checked: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  defaultChecked: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  onFocus: _propTypes2.default.func,
  onBlur: _propTypes2.default.func,
  className: _propTypes2.default.string,
  name: _propTypes2.default.string,
  value: _propTypes2.default.string,
  id: _propTypes2.default.string,
  'aria-labelledby': _propTypes2.default.string,
  'aria-label': _propTypes2.default.string,
  icons: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.shape({
    checked: _propTypes2.default.node,
    unchecked: _propTypes2.default.node
  })])
};

/***/ }),

/***/ 1280:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  return _react2.default.createElement(
    'svg',
    { width: '14', height: '11', viewBox: '0 0 14 11' },
    _react2.default.createElement('path', { d: 'M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0', fill: '#fff', fillRule: 'evenodd' })
  );
};

/***/ }),

/***/ 1281:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  return _react2.default.createElement(
    'svg',
    { width: '10', height: '10', viewBox: '0 0 10 10' },
    _react2.default.createElement('path', { d: 'M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12', fill: '#fff', fillRule: 'evenodd' })
  );
};

/***/ }),

/***/ 1282:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pointerCoord = pointerCoord;
// Copyright 2015-present Drifty Co.
// http://drifty.com/
// from: https://github.com/driftyco/ionic/blob/master/src/util/dom.ts

function pointerCoord(event) {
  // get coordinates for either a mouse click
  // or a touch depending on the given event
  if (event) {
    var changedTouches = event.changedTouches;
    if (changedTouches && changedTouches.length > 0) {
      var touch = changedTouches[0];
      return { x: touch.clientX, y: touch.clientY };
    }
    var pageX = event.pageX;
    if (pageX !== undefined) {
      return { x: pageX, y: event.pageY };
    }
  }
  return { x: 0, y: 0 };
}

/***/ }),

/***/ 1283:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(1037);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

var _reactSlick = __webpack_require__(929);

var _reactSlick2 = _interopRequireDefault(_reactSlick);

var _helpersFunction = __webpack_require__(315);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SampleNextArrow = function SampleNextArrow(props) {
  var className = props.className,
      style = props.style,
      onClick = props.onClick;

  return _react2.default.createElement(
    "div",
    { className: className, style: (0, _extends3.default)({}, style), onClick: onClick },
    _react2.default.createElement(
      "svg",
      {
        width: "10",
        height: "18",
        viewBox: "0 0 10 18",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      },
      _react2.default.createElement("path", {
        d: "M2.19298 1.10152L8.9008 8.22652C9.10588 8.44331 9.20839 8.72152 9.20839 8.99995C9.20839 9.27825 9.10583 9.55636 8.9008 9.77339L2.19298 16.8984C1.76548 17.3484 1.05345 17.3671 0.602516 16.9406C0.148391 16.5128 0.132359 15.7978 0.55857 15.3496L6.57732 8.99808L0.55857 2.64652C0.132359 2.19839 0.148297 1.48823 0.602516 1.05745C1.05345 0.631359 1.76548 0.650109 2.19298 1.10152Z",
        fill: "#161616"
      })
    )
  );
};

var SamplePrevArrow = function SamplePrevArrow(props) {
  var className = props.className,
      style = props.style,
      onClick = props.onClick;

  return _react2.default.createElement(
    "div",
    { className: className, style: (0, _extends3.default)({}, style), onClick: onClick },
    _react2.default.createElement(
      "svg",
      {
        width: "10",
        height: "18",
        viewBox: "0 0 10 18",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      },
      _react2.default.createElement("path", {
        d: "M2.19298 1.10152L8.9008 8.22652C9.10588 8.44331 9.20839 8.72152 9.20839 8.99995C9.20839 9.27825 9.10583 9.55636 8.9008 9.77339L2.19298 16.8984C1.76548 17.3484 1.05345 17.3671 0.602516 16.9406C0.148391 16.5128 0.132359 15.7978 0.55857 15.3496L6.57732 8.99808L0.55857 2.64652C0.132359 2.19839 0.148297 1.48823 0.602516 1.05745C1.05345 0.631359 1.76548 0.650109 2.19298 1.10152Z",
        fill: "#161616"
      })
    )
  );
};

var SuccessAddToBasket = function (_Component) {
  (0, _inherits3.default)(SuccessAddToBasket, _Component);

  function SuccessAddToBasket(props) {
    (0, _classCallCheck3.default)(this, SuccessAddToBasket);

    var _this = (0, _possibleConstructorReturn3.default)(this, (SuccessAddToBasket.__proto__ || Object.getPrototypeOf(SuccessAddToBasket)).call(this, props));

    _this.handleGoToCart = function () {
      _reactRouter.browserHistory.push("/warenkorb");
    };

    _this.handleGoBack = function () {
      var source = _this.props.source;

      if (source == "listingPage" || source == "quickViewPage" || source == "gridPage") {
        _this.props.closeSuccessAddToBasket();
      } else if (source == "detailPage" || source == "accessoryDetailPage") {
        _this.props.closeSuccessAddToBasket();
        _reactRouter.browserHistory.goBack();
      }
    };

    _this.addToBasket = function (e, item) {
      e.preventDefault();
      _this.props.addModelToBasket(e, item);
      if (window.isGoogleConnection) _this.gtagEnhancedEcommerce(e, item, "add_to_cart");
    };

    _this.gtagEnhancedEcommerce = function (e, item, tag) {
      if (tag == "select_content" && e.target.tagName === "BUTTON") {
        return;
      }
      var brands = item.criterias.find(function (item) {
        return item.id === "manufacturer";
      }).values,
          brand = brands.length ? brands[0].name : "",
          items = [{
        id: item.shortcode,
        name: item.descriptionLong || item.model || "",
        list_name: "Kaufen",
        quantity: 1,
        brand: brand,
        price: item.discountPrice || item.price,
        category: item.categoryName
      }];

      if (tag == "select_content") {
        gtag("event", tag, {
          content_type: "product",
          items: items
        });

        var gtagData = { category: item.categoryName };
        window.localStorage.setItem("gtag", JSON.stringify(gtagData));
      } else {
        gtag("event", tag, {
          items: items
        });
      }
    };

    _this.clickOnLink = function (e, item) {
      if (e.target.tagName === "BUTTON") {
        e.preventDefault();
      } else {
        if (window.isGoogleConnection) _this.gtagEnhancedEcommerce(item, "select_content");
      }
    };

    _this.mapRelevantProducts = _this.mapRelevantProducts.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(SuccessAddToBasket, [{
    key: "mapRelevantProducts",
    value: function mapRelevantProducts(model, i) {
      var _this2 = this;

      var url = "",
          modelName = model.modelName ? model.modelName.split(" ").join("-").toLowerCase().replace(/\//g, "--") : model.model.split(" ").join("-").toLowerCase().replace(/\//g, "--"),
          deviceName = model.deviceName.toLowerCase().replace(/ /g, "-");
      url = "/kaufen/detail/zubehoer/" + deviceName + "/" + modelName + "/" + model.shortcode;
      var itemWrap = { paddingLeft: "8px", paddingRight: "8px" };

      return _react2.default.createElement(
        "div",
        { key: "MapRelevantProducts-" + i },
        _react2.default.createElement(
          "div",
          { style: itemWrap },
          _react2.default.createElement(
            _reactRouter.Link,
            {
              to: url,
              onClick: function onClick(e) {
                return _this2.clickOnLink(e, model);
              },
              key: "MapRelevantProductsLink-" + i,
              style: { textDecoration: "none" },
              className: "relevant-link"
            },
            _react2.default.createElement(
              "div",
              { className: "item" },
              _react2.default.createElement(
                "div",
                { className: "img" },
                _react2.default.createElement("img", {
                  loading: "lazy",
                  src: model.colorImage || model.deviceImages.mainImg.src,
                  alt: ""
                }),
                _react2.default.createElement("img", {
                  loading: "lazy",
                  className: "searchBtn",
                  src: "/images/search-icon.svg"
                }),
                _react2.default.createElement("img", {
                  loading: "lazy",
                  className: "wishBtn",
                  src: "/images/wish-icon.svg"
                })
              ),
              _react2.default.createElement(
                "div",
                { className: "heading" },
                _react2.default.createElement(
                  "h4",
                  null,
                  model.model,
                  model.extendedTitle && " (" + model.extendedTitle + ")"
                )
              ),
              _react2.default.createElement(
                "div",
                { className: "cost-block" },
                _react2.default.createElement(
                  "div",
                  { className: "cost" },
                  model.discountPrice && _react2.default.createElement(
                    "p",
                    { className: "price-value discount-price" },
                    (0, _helpersFunction.formatPrice)(model.discountPrice),
                    " ",
                    window.currencyValue
                  ),
                  _react2.default.createElement(
                    "p",
                    {
                      className: model.discountPrice ? "price-value old-price" : "price-value"
                    },
                    (0, _helpersFunction.formatPrice)(model.price),
                    " ",
                    window.currencyValue
                  )
                ),
                _react2.default.createElement("button", {
                  className: "add-cart",
                  "data-source": "relevantProduct",
                  "data-status": "out",
                  onClick: function onClick(e) {
                    return _this2.addToBasket(e, model);
                  }
                })
              )
            )
          )
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      var _settings;

      var _props = this.props,
          model = _props.model,
          recommendProducts = _props.recommendProducts,
          settings = (_settings = {
        infinite: false,
        speed: 500,
        slidesToShow: window.isMobile ? 1 : 3,
        slidesToScroll: 1,
        arrows: false,
        swipeToSlide: true
      }, (0, _defineProperty3.default)(_settings, "arrows", true), (0, _defineProperty3.default)(_settings, "nextArrow", _react2.default.createElement(SampleNextArrow, null)), (0, _defineProperty3.default)(_settings, "prevArrow", _react2.default.createElement(SamplePrevArrow, null)), _settings);

      return _react2.default.createElement(
        "div",
        { className: window.isMobile ? "light-box for-mobile" : "light-box" },
        _react2.default.createElement(
          "div",
          {
            className: "successAddToBasket-wrap " + (recommendProducts ? "m-2" : "m-20")
          },
          !window.isMobile && _react2.default.createElement(
            "div",
            {
              className: "successAddToBasket-wrap-btnClose",
              onClick: this.props.closeSuccessAddToBasket
            },
            _react2.default.createElement("img", { loading: "lazy", src: "/images/design/circle_close.svg" })
          ),
          _react2.default.createElement(
            "div",
            { className: "mainPart" },
            _react2.default.createElement(
              "div",
              { className: "row title" },
              _react2.default.createElement(
                "div",
                { className: "img" },
                _react2.default.createElement("img", {
                  loading: "lazy",
                  src: "/images/design/c-check_new.svg",
                  alt: ""
                })
              ),
              _react2.default.createElement(
                "div",
                { className: "desc" },
                _react2.default.createElement(
                  "p",
                  { className: "success" },
                  "Erfolgreich in den Warenkorb hinzugef\xFCgt"
                ),
                _react2.default.createElement(
                  "p",
                  { className: "model" },
                  model.model,
                  model.capacity ? ", " + model.capacity : "",
                  model.color ? ", " + model.color : ""
                )
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "row buttons" },
              _react2.default.createElement(
                "button",
                { className: "btn detail", onClick: this.handleGoToCart },
                _react2.default.createElement("img", { loading: "lazy", src: "/images/design/cart_new.svg", alt: "" }),
                " ",
                "Zum Warenkorb"
              ),
              _react2.default.createElement(
                "button",
                { className: "btn detail second", onClick: this.handleGoBack },
                _react2.default.createElement("img", {
                  loading: "lazy",
                  src: "/images/design/basket-simple-add_new.svg",
                  alt: ""
                }),
                " ",
                "Weiter einkaufen"
              )
            )
          ),
          _react2.default.createElement("div", { className: "cb" })
        ),
        recommendProducts && recommendProducts.length > 0 && _react2.default.createElement(
          "div",
          { className: "relevantProduct" },
          _react2.default.createElement(
            "h3",
            null,
            "Passendes Zubeh\xF6r"
          ),
          _react2.default.createElement(
            _reactSlick2.default,
            settings,
            recommendProducts.map(this.mapRelevantProducts)
          )
        )
      );
    }
  }]);
  return SuccessAddToBasket;
}(_react.Component);

SuccessAddToBasket.propTypes = {};
SuccessAddToBasket.defaultProps = {};

exports.default = SuccessAddToBasket;

/***/ }),

/***/ 1514:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouter = __webpack_require__(206);

var _modelInfoBlock = __webpack_require__(1253);

var _modelInfoBlock2 = _interopRequireDefault(_modelInfoBlock);

var _helpersFunction = __webpack_require__(315);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var QuickViewPage = function (_Component) {
    (0, _inherits3.default)(QuickViewPage, _Component);

    function QuickViewPage(props) {
        (0, _classCallCheck3.default)(this, QuickViewPage);

        var _this = (0, _possibleConstructorReturn3.default)(this, (QuickViewPage.__proto__ || Object.getPrototypeOf(QuickViewPage)).call(this, props));

        _this.handleCloseQuickView = function () {
            _this.props.closeQuickView();
        };

        _this.state = {
            currentModel: _this.props.model,
            showPrev: _this.props.allModels[0].id !== _this.props.model.id,
            showNext: _this.props.allModels[_this.props.allModels.length - 1].id !== _this.props.model.id
        };

        _this.handleKeyPress = _this.handleKeyPress.bind(_this);
        _this.nextModel = _this.nextModel.bind(_this);
        _this.prevModel = _this.prevModel.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(QuickViewPage, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            document.addEventListener("keyup", this.handleKeyPress, { passive: true });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener("keyup", this.handleKeyPress);
        }
    }, {
        key: 'handleKeyPress',
        value: function handleKeyPress(e) {
            if (e.key === "Escape") {
                this.props.closeQuickView();
            } else if (e.key === 'ArrowRight') {
                this.state.showNext && this.nextModel();
            } else if (e.key === 'ArrowLeft') {
                this.state.showPrev && this.prevModel();
            }
        }
    }, {
        key: 'nextModel',
        value: function nextModel() {
            var _this2 = this;

            var position = this.props.allModels.findIndex(function (item) {
                return item.id === _this2.state.currentModel.id;
            });
            if (position >= 0) {
                this.setState({ currentModel: this.props.allModels[position + 1],
                    showPrev: true,
                    showNext: this.props.allModels.length > position + 2 });
            }
        }
    }, {
        key: 'prevModel',
        value: function prevModel() {
            var _this3 = this;

            var position = this.props.allModels.findIndex(function (item) {
                return item.id === _this3.state.currentModel.id;
            });
            if (position >= 0) {
                this.setState({ currentModel: this.props.allModels[position - 1],
                    showNext: true,
                    showPrev: position - 1 > 0 });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var modelName = this.state.currentModel.model.split(" ").join('-').toLowerCase(),
                color = this.state.currentModel.color.toLowerCase() || 'color',
                capacity = this.state.currentModel.capacity.toLowerCase() || 'capacity',
                deviceName = this.state.currentModel.deviceName.replace(/ /g, '-').toLowerCase();
            var product = this.state.currentModel;
            gtag('event', 'view_item', {
                "items": [{
                    "id": product.shortcode,
                    "name": product.descriptionLong,
                    "list_name": "Kaufen",
                    "quantity": 1,
                    "price": product.price,
                    "brand": product.deviceName,
                    "category": this.props.deviceName || ''
                }]
            });

            (0, _helpersFunction.pushKlavioIdentify)();

            var klavioItem = {
                "ProductName": product.descriptionLong,
                "ProductID": product.shortcode,
                "Categories": [this.props.deviceName],
                "ImageURL": product.deviceImages.mainImg.src,
                "URL": window.location.href,
                "Brand": product.deviceName,
                "Price": product.discountPrice || product.price,
                "CompareAtPrice": product.price
            };

            _learnq.push(["track", "Viewed Product", klavioItem]);

            _learnq.push(["trackViewedItem", {
                "Title": klavioItem.ProductName,
                "ItemId": klavioItem.ProductID,
                "Categories": klavioItem.Categories,
                "ImageUrl": klavioItem.ImageURL,
                "Url": klavioItem.URL,
                "Metadata": {
                    "Brand": klavioItem.Brand,
                    "Price": klavioItem.Price,
                    "CompareAtPrice": klavioItem.CompareAtPrice
                }
            }]);

            return _react2.default.createElement(
                'div',
                { className: 'quickViewPage-overlay' },
                _react2.default.createElement(
                    'div',
                    { className: 'container' },
                    _react2.default.createElement(
                        'div',
                        { className: 'quickViewPage-wrap' },
                        _react2.default.createElement(
                            'div',
                            { className: 'quickViewPage-wrap-btnClose', onClick: this.props.closeQuickView },
                            _react2.default.createElement('i', { className: 'fa fa-times', 'aria-hidden': 'true' })
                        ),
                        this.state.showNext && _react2.default.createElement(
                            'span',
                            { className: 'next', onClick: this.nextModel },
                            _react2.default.createElement('i', { className: 'fa fa-angle-right', 'aria-hidden': 'true' })
                        ),
                        this.state.showPrev && _react2.default.createElement(
                            'span',
                            { className: 'prev', onClick: this.prevModel },
                            _react2.default.createElement('i', { className: 'fa fa-angle-left', 'aria-hidden': 'true' })
                        ),
                        _react2.default.createElement(_modelInfoBlock2.default, { currentModel: [this.state.currentModel],
                            quickPreview: true,
                            handleCloseQuickView: this.handleCloseQuickView,
                            openSuccessAddToBasket: this.props.openSuccessAddToBasket,
                            capacityName: this.props.capacityName,
                            upsellingItems: [] }),
                        _react2.default.createElement('div', { className: 'cb' }),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-sm-12', style: { marginTop: '15px' } },
                            _react2.default.createElement(
                                _reactRouter.Link,
                                { className: 'btn',
                                    style: { color: '#fff' },
                                    to: '/kaufen/detail/' + deviceName + '/' + modelName + '/' + capacity + '/' + color + '/' + this.state.currentModel.shortcode },
                                'Im Detail anzeigen',
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    _react2.default.createElement('i', { className: 'fa fa-long-arrow-right', 'aria-hidden': 'true' })
                                )
                            )
                        ),
                        _react2.default.createElement('div', { className: 'cb' })
                    )
                )
            );
        }
    }]);
    return QuickViewPage;
}(_react.Component);

QuickViewPage.propTypes = {};
QuickViewPage.defaultProps = {};

exports.default = QuickViewPage;

/***/ }),

/***/ 1900:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactInputRange = __webpack_require__(1120);

var _reactInputRange2 = _interopRequireDefault(_reactInputRange);

var _reactSelect = __webpack_require__(902);

var _reactSelect2 = _interopRequireDefault(_reactSelect);

var _itemFilterBlock = __webpack_require__(1901);

var _itemFilterBlock2 = _interopRequireDefault(_itemFilterBlock);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AsideFilter = function AsideFilter(_ref) {
    var selectedFilterOptions = _ref.selectedFilterOptions,
        availableFilterOptions = _ref.availableFilterOptions,
        filterOptions = _ref.filterOptions,
        inputPriceMin = _ref.inputPriceMin,
        inputPriceMax = _ref.inputPriceMax,
        inputPriceErr = _ref.inputPriceErr,
        changePrice = _ref.changePrice,
        changeInputPrice = _ref.changeInputPrice,
        applyInputPrice = _ref.applyInputPrice,
        totalItems = _ref.totalItems,
        mainModelGroupId = _ref.mainModelGroupId,
        mobileChoseItemFilter = _ref.mobileChoseItemFilter,
        mobileApply = _ref.mobileApply,
        changeSortBy = _ref.changeSortBy,
        currentValue = _ref.currentValue,
        viewMode = _ref.viewMode,
        routeParams = _ref.routeParams,
        options = _ref.options,
        isAsideFilterVisible = _ref.isAsideFilterVisible;
    var price = selectedFilterOptions.price;


    function returnItemFilterBlock(key) {
        return _react2.default.createElement(_itemFilterBlock2.default, { key: key,
            mainModelGroupId: mainModelGroupId,
            totalItems: totalItems,
            title: filterOptions[key].name,
            name: key,
            data: filterOptions[key],
            availableOption: availableFilterOptions[key],
            availableFilterOptions: availableFilterOptions,
            selectedOption: selectedFilterOptions[key],
            allSelected: selectedFilterOptions,
            mobileChoseItemFilter: mobileChoseItemFilter,
            routeParams: routeParams });
    }
    var arrayFilterOptions = [];

    if (filterOptions.lagerort) arrayFilterOptions.push(returnItemFilterBlock('lagerort'));
    if (filterOptions.modell) arrayFilterOptions.push(returnItemFilterBlock('modell'));
    if (filterOptions.zustand) arrayFilterOptions.push(returnItemFilterBlock('zustand'));

    for (var key in filterOptions) {
        if (key != 'modell' && key != 'zustand' && key != 'lagerort') {
            var option = returnItemFilterBlock(key);
            arrayFilterOptions.push(option);
        }
    }
    return _react2.default.createElement(
        'div',
        { className: 'col-md-3 asideFilter' },
        _react2.default.createElement(
            'div',
            { className: 'priceFilter itemFilterBlock' },
            _react2.default.createElement(
                'div',
                { className: 'head' },
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/aside_filter_category_icons/price.svg', alt: '' }),
                    _react2.default.createElement(
                        'span',
                        { className: 'headFilterTitle' },
                        'Preis'
                    )
                ),
                _react2.default.createElement(_reactInputRange2.default, {
                    maxValue: +price.max,
                    minValue: +price.min - 0.00001,
                    value: { min: +price.minSearch - 0.00001, max: +price.maxSearch },
                    onChange: changePrice }),
                _react2.default.createElement(
                    'div',
                    { className: 'priceRange' },
                    _react2.default.createElement(
                        'div',
                        { className: 'price-min' },
                        _react2.default.createElement('input', { id: 'price_min', max: +price.max, min: +price.min, className: inputPriceErr.min ? "price-error" : null, value: inputPriceMin != 0 ? +inputPriceMin : +price.minSearch, type: 'number', onChange: function onChange(e) {
                                return changeInputPrice(e, 'min');
                            }, onBlur: function onBlur(e) {
                                return applyInputPrice(e, 'min');
                            } }),
                        ' ',
                        window.currencyValue
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'price-devider' },
                        '-'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'price-max' },
                        _react2.default.createElement('input', { id: 'price_max', max: +price.max, min: +price.min, className: inputPriceErr.max ? "price-error" : null, value: inputPriceMax != 0 ? +inputPriceMax : +price.maxSearch, type: 'number', onChange: function onChange(e) {
                                return changeInputPrice(e, 'max');
                            }, onBlur: function onBlur(e) {
                                return applyInputPrice(e, 'max');
                            } }),
                        ' ',
                        window.currencyValue
                    )
                )
            )
        ),
        arrayFilterOptions.map(function (item, i) {
            return item;
        }),
        _react2.default.createElement(
            'div',
            { className: 'btnApply-mobile mobileFixedBtn' },
            _react2.default.createElement(
                'button',
                { className: 'btn', onClick: mobileApply },
                '\xDCbernehmen'
            )
        )
    );
};

AsideFilter.propTypes = {};
AsideFilter.defaultProps = {};

exports.default = AsideFilter;

/***/ }),

/***/ 1901:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ItemFilterBlock = function ItemFilterBlock(_ref) {
    var routeParams = _ref.routeParams,
        data = _ref.data,
        name = _ref.name,
        title = _ref.title,
        availableOption = _ref.availableOption,
        allSelected = _ref.allSelected,
        selectedOption = _ref.selectedOption,
        totalItems = _ref.totalItems,
        mobileChoseItemFilter = _ref.mobileChoseItemFilter,
        availableFilterOptions = _ref.availableFilterOptions,
        mainModelGroupId = _ref.mainModelGroupId;

    function getStr(arr, name, currentValue) {
        var s = '';
        var selectedFilterOptions = (0, _extends3.default)({}, arr);
        for (var key in selectedFilterOptions) {
            if (key !== 'price' && key !== 'sort' && key !== 'page') {
                selectedFilterOptions[key] = (0, _extends3.default)({}, arr[key]);
                selectedFilterOptions[key].values = arr[key].values.map(function (item) {
                    return (0, _extends3.default)({}, item);
                });
            } else if (key === 'page') {
                selectedFilterOptions[key] = 1;
            }
        }

        if (currentValue === 'allValues') {
            /*if(selectedFilterOptions[name].length === data.length) selectedFilterOptions.Models = []
            else selectedFilterOptions[name] = data*/
            selectedFilterOptions[name] ? selectedFilterOptions[name].values = data.values : null;
        } else {
            if (selectedFilterOptions[name] && selectedFilterOptions[name].values.length === data.values.length) {
                selectedFilterOptions[name].values = [];
                selectedFilterOptions[name].values.push(currentValue);
            } else {
                if (selectedFilterOptions[name] && selectedFilterOptions[name].values.some(function (option) {
                    return option.id === currentValue.id;
                })) {
                    if (selectedFilterOptions[name].values.length === 1) selectedFilterOptions[name].values = [];else selectedFilterOptions[name].values = selectedFilterOptions[name].values.filter(function (item) {
                        return item.id !== currentValue.id;
                    });
                } else if (selectedFilterOptions[name]) {
                    selectedFilterOptions[name].values.push(currentValue);
                }
            }
        }

        var _loop = function _loop(_key) {
            if (_key === 'price') {
                if (selectedFilterOptions[_key].minSearch > 0 || selectedFilterOptions[_key].maxSearch < selectedFilterOptions[_key].max) {
                    s += 'preis=' + selectedFilterOptions[_key].minSearch + '-' + selectedFilterOptions[_key].maxSearch + '/';
                }
            } else if (_key === 'sort' || _key === 'page') s += _key + '=' + selectedFilterOptions[_key] + '/';else {
                var categoryName = _key;

                if (selectedFilterOptions[_key].values.length === availableFilterOptions[_key].values.length) {
                    s += categoryName + '=alle/';
                } else if (selectedFilterOptions[_key].values.length > 0) {
                    selectedFilterOptions[_key].values.forEach(function (item, i) {
                        if (i === 0) {
                            if (selectedFilterOptions[_key].values.length === 1) {
                                s += categoryName + '=' + item.id + '/';
                            } else s += categoryName + '=' + item.id;
                        } else if (i === selectedFilterOptions[_key].values.length - 1) {
                            s += ',' + item.id + '/';
                        } else s += ',' + item.id;
                    });
                }
            }
        };

        for (var _key in selectedFilterOptions) {
            _loop(_key);
        }
        return s;
    }

    var filteredValues = data.values.sort(function (a, b) {
        if (title === 'Speichergrösse') return false;else return a.name > b.name ? 1 : -1;
    });

    var titleName = '';
    switch (title) {
        case 'zustand':
            titleName = 'Allgemeiner Zustand';
            break;
        default:
            titleName = title;
            break;
    }

    function getCategoriesParamRoute() {
        var str = '/';
        for (var key in routeParams) {
            if (key.includes('deviceCategory') && routeParams[key]) str += routeParams[key] + '/';
        }
        return str;
    }

    function mapValues(item, i) {

        var isChecked = selectedOption && selectedOption.values.some(function (model) {
            return model.id === item.id;
        }) && selectedOption.values.length !== data.values.length;
        var color = item.colorCode ? item.colorCode : '';
        var enable = item.hasOwnProperty('enable') ? item.enable : 1;
        return _react2.default.createElement(
            'li',
            { key: i, className: !enable ? 'disable' : isChecked ? 'active' : '' },
            _react2.default.createElement(
                _reactRouter.Link,
                { key: item.id, to: enable ? url + '/' + getStr(allSelected, name, item) : null,
                    onClick: function onClick(e) {
                        return enable ? window.isMobile && mobileChoseItemFilter(e, name, item) : null;
                    } },
                _react2.default.createElement('input', { type: 'checkbox',
                    readOnly: true,
                    checked: isChecked,
                    disabled: availableOption && availableOption.values.every(function (items) {
                        return item.id !== items.id;
                    }) }),
                titleName === 'farbe' ? color && _react2.default.createElement('span', { className: 'checkbox-farbe', key: i, style: { background: color } }) : _react2.default.createElement('span', { className: 'checkbox' }),
                _react2.default.createElement(
                    'span',
                    null,
                    name === 'lagerort' && _react2.default.createElement('img', { loading: 'lazy', className: 'filter-img', src: '/images/design/aside_filter_category_icons/lagerort/filter-lagerort-' + item.id + '.svg', alt: '' }),
                    item.name
                )
            ),
            _react2.default.createElement(
                'span',
                null,
                (name === 'modell' || name === 'lagerort') && '(' + item.count + ')'
            )
        );
    }
    function groupBy(list, keyGetter) {
        var map = new Map();
        list.forEach(function (item) {
            var key = keyGetter(item);
            var collection = map.get(key);
            if (!collection) {
                map.set(key, item.deviceModelGroupOrderBy);
                map.set(key, [item]);
            } else {
                collection.push(item);
            }
        });
        return map;
    }
    function toggleIcon(e) {
        var is_onened = e.currentTarget.getAttribute('aria-expanded');
        if (is_onened === 'true') {
            e.currentTarget.lastChild.classList.remove('glyphicon-plus');
            e.currentTarget.lastChild.className += " glyphicon-minus";
        } else {
            e.currentTarget.lastChild.classList.remove('glyphicon-minus');
            e.currentTarget.lastChild.className += " glyphicon-plus";
        }
    }

    var url = '/kaufen' + getCategoriesParamRoute() + 'filter';
    if (titleName === 'Arbeitsspeicher (RAM)') {
        titleName = titleName.replace('Arbeitsspeicher (RAM)', 'Arbeitsspeicher RAM');
    }

    var customHref = titleName.split(' ');

    return _react2.default.createElement(
        'div',
        { className: titleName + ' itemFilterBlock' },
        _react2.default.createElement(
            'h5',
            { className: 'head',
                'data-toggle': 'collapse',
                href: '#multiCollapseExample-' + customHref[customHref.length - 1],
                'aria-expanded': 'false',
                'aria-controls': 'collapseExample',
                onClick: function onClick(e) {
                    return toggleIcon(e);
                } },
            _react2.default.createElement(
                'span',
                null,
                _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/aside_filter_category_icons/' + mainModelGroupId + '/' + mainModelGroupId + '-' + name + '.svg',
                    onError: function onError(e) {
                        e.target.src = '/images/design/aside_filter_category_icons/default-icon.svg';
                    },
                    alt: '' }),
                _react2.default.createElement(
                    'span',
                    { className: 'head-titleName' },
                    titleName
                )
            ),
            _react2.default.createElement('span', { style: { color: '#b8d4cb' }, className: 'glyphicon glyphicon-plus', 'aria-hidden': 'true' })
        ),
        _react2.default.createElement(
            'ul',
            { id: 'multiCollapseExample-' + customHref[customHref.length - 1],
                className: 'collapse multi-collapse' },
            _react2.default.createElement(
                'li',
                { className: selectedOption && selectedOption.values.length === data.values.length ? 'active' : '' },
                _react2.default.createElement(
                    _reactRouter.Link,
                    { key: 'allValues-' + name, to: url + '/' + getStr(allSelected, name, 'allValues'),
                        onClick: function onClick(e) {
                            return window.isMobile && mobileChoseItemFilter(e, name, 'allValues');
                        } },
                    _react2.default.createElement('input', { type: 'checkbox',
                        className: titleName + '-all',
                        value: 'Show all models',
                        readOnly: true,
                        checked: selectedOption && selectedOption.values.length === data.values.length }),
                    _react2.default.createElement('span', { className: 'checkbox' }),
                    name !== 'lagerort' && _react2.default.createElement(
                        'span',
                        null,
                        'Zeige alle ',
                        routeParams.deviceCategory1 === "zubehör" ? 'Produkte' : 'Modelle'
                    ),
                    name === 'lagerort' && _react2.default.createElement(
                        'span',
                        null,
                        'Alle Filialen anzeigen'
                    )
                ),
                _react2.default.createElement(
                    'span',
                    null,
                    name === 'modell' || name === 'lagerort' && '(' + totalItems + ')'
                )
            ),
            name === 'kategorie-compatibility' ? Array.from(groupBy(data.values, function (item) {
                return item.deviceModelGroupOrderBy + '-' + item.deviceModelGroupName;
            })).sort(function (a, b) {
                return parseInt(a[0].split('-')[0]) > parseInt(b[0].split('-')[0]) ? 1 : -1;
            }).map(function (item, index) {
                return _react2.default.createElement(
                    _react2.default.Fragment,
                    { key: 'label-0-' + index },
                    _react2.default.createElement(
                        'a',
                        { className: 'brand',
                            'data-toggle': 'collapse',
                            href: '#collapseExample-' + item[1][0]['deviceModelGroupId'] + '-' + item[1][0]['deviceModelGroupOrderBy'],
                            'aria-expanded': 'false',
                            'aria-controls': 'collapseExample',
                            onClick: function onClick(e) {
                                return toggleIcon(e);
                            } },
                        _react2.default.createElement(
                            'span',
                            { className: 'name' },
                            item[0].split('-')[1]
                        ),
                        _react2.default.createElement('span', { className: 'glyphicon glyphicon-plus', 'aria-hidden': 'true' })
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'collapse', id: 'collapseExample-' + item[1][0]['deviceModelGroupId'] + '-' + item[1][0]['deviceModelGroupOrderBy'] },
                        item[1][0].deviceModelSubGroupId ? Array.from(groupBy(item[1], function (subItem) {
                            return subItem.deviceModelSubGroupOrderBy + '-' + subItem.deviceModelSubGroupName;
                        })).sort(function (a, b) {
                            return parseInt(a[0].split('-')[0]) > parseInt(b[0].split('-')[0]) ? 1 : -1;
                        }).map(function (subItem, index) {
                            return _react2.default.createElement(
                                _react2.default.Fragment,
                                { key: 'label-1-' + index },
                                _react2.default.createElement(
                                    'a',
                                    { className: 'brand',
                                        'data-toggle': 'collapse',
                                        href: '#collapseExample-' + subItem[1][0]['deviceModelSubGroupId'] + '-' + subItem[1][0]['deviceModelSubGroupOrderBy'],
                                        'aria-expanded': 'false',
                                        'aria-controls': 'collapseExample',
                                        onClick: function onClick(e) {
                                            return toggleIcon(e);
                                        } },
                                    _react2.default.createElement(
                                        'span',
                                        { className: 'name' },
                                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/submodel/' + subItem[1][0]['deviceModelSubGroupId'] + '.svg', alt: '' }),
                                        subItem[0].split('-')[1]
                                    ),
                                    _react2.default.createElement('span', { className: 'glyphicon glyphicon-plus', 'aria-hidden': 'true' })
                                ),
                                _react2.default.createElement(
                                    'span',
                                    { className: 'collapse', id: 'collapseExample-' + subItem[1][0]['deviceModelSubGroupId'] + '-' + subItem[1][0]['deviceModelSubGroupOrderBy'] },
                                    subItem[1].sort(function (a, b) {
                                        return a.orderBy - b.orderBy;
                                    }).map(mapValues)
                                )
                            );
                        }) : item[1].sort(function (a, b) {
                            return a.orderBy - b.orderBy;
                        }).map(mapValues)
                    )
                );
            }) : filteredValues.map(mapValues)
        )
    );
};

ItemFilterBlock.propTypes = {};
ItemFilterBlock.defaultProps = {};

exports.default = ItemFilterBlock;

/***/ }),

/***/ 1902:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouter = __webpack_require__(206);

var _helpersFunction = __webpack_require__(315);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModelsGrid = function ModelsGrid(_ref) {
    var models = _ref.models,
        basketData = _ref.basketData,
        wishlistData = _ref.wishlistData,
        addModelToBasket = _ref.addModelToBasket,
        addModelToWishlist = _ref.addModelToWishlist;

    var interval = null;

    function mouseEnter(e) {
        var current = $(e.currentTarget);
        function changeImage() {
            if ($(current).find('img.active').next().length > 0) {
                $(current).find('img.active').removeClass('active').next().addClass('active');
            } else {
                $(current).find('img').removeClass('active').first().addClass('active');
            }
        }
        changeImage();
        interval = setInterval(function () {
            return changeImage();
        }, 2000);
    }
    function mouseOut(e) {
        clearInterval(interval);
        $(e.currentTarget).find('img').removeClass('active').first().addClass('active');
    }

    function handleAddModelToWishlist(e, model) {
        addModelToWishlist(e, model);
    }

    function mapModels(item) {
        var images = [].concat(item.deviceImages.mainImg, item.deviceImages.realImg),
            modelName = item.model.split(" ").join('-').toLowerCase().replace(/\//g, '--'),
            deviceName = item.deviceName.toLowerCase().replace(/ /g, '-');
        var mainImages = [].concat(item.deviceImages.mainImg);
        var realImages = [].concat(item.deviceImages.realImg);

        var isWish = false;

        wishlistData.map(function (el) {
            if (el.shortcode === item.shortcode) {
                isWish = true;
            }
        });

        return _react2.default.createElement(
            'div',
            { className: 'custom-col-3 col-md-4 col-sm-12 col-xs-12', key: item.id },
            _react2.default.createElement(
                _reactRouter.Link,
                { to: '/kaufen/detail/zubehoer/' + deviceName + '/' + modelName + '/' + item.shortcode,
                    className: item.discountPrice ? 'discount' : '', onClick: function onClick(e) {
                        return gtagEnhancedEcommerce(item);
                    } },
                _react2.default.createElement(
                    'div',
                    { className: 'item-accessory' },
                    _react2.default.createElement(
                        'div',
                        { className: 'icon-row' },
                        _react2.default.createElement(
                            'div',
                            { className: isWish ? "itemHeartView on" : "itemHeartView", onClick: function onClick(e) {
                                    return handleAddModelToWishlist(e, item);
                                } },
                            _react2.default.createElement(
                                'svg',
                                { viewBox: '0 0 24 24' },
                                _react2.default.createElement('use', { href: '#heart' }),
                                _react2.default.createElement('use', { href: '#heart' })
                            ),
                            _react2.default.createElement(
                                'svg',
                                { className: 'hide', viewBox: '0 0 24 24' },
                                _react2.default.createElement(
                                    'defs',
                                    null,
                                    _react2.default.createElement('path', { id: 'heart', d: 'M12 4.435c-1.989-5.399-12-4.597-12 3.568 0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-8.118-10-8.999-12-3.568z' })
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'div',
                            { className: 'images-wrap',
                                onMouseEnter: mouseEnter,
                                onMouseLeave: mouseOut },
                            mainImages.map(function (item, i) {
                                var className = 'active'; //images.length === i+1 ? 'active' : ''
                                return _react2.default.createElement('img', { loading: 'lazy', src: item.src,
                                    key: i,
                                    className: className });
                            }),
                            realImages.map(function (item, i) {
                                var className = ''; //images.length === i+1 ? 'active' : ''
                                return _react2.default.createElement('img', { loading: 'lazy', src: item.src,
                                    key: i,
                                    className: className });
                            })
                        ),
                        _react2.default.createElement(
                            'p',
                            { className: 'modelName' },
                            item.model
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'bottom-row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'price' },
                            _react2.default.createElement(
                                'p',
                                { className: 'price-head' },
                                'Preis'
                            ),
                            item.discountPrice && _react2.default.createElement(
                                'p',
                                { className: 'price-value discount-price' },
                                (0, _helpersFunction.formatPrice)(item.discountPrice),
                                ' ',
                                window.currencyValue
                            ),
                            _react2.default.createElement(
                                'p',
                                { className: item.discountPrice ? 'price-value old-price' : 'price-value' },
                                (0, _helpersFunction.formatPrice)(item.price),
                                ' ',
                                window.currencyValue
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'text-right' },
                            item.quantity > 0 ? _react2.default.createElement('button', { className: 'btn addToBasket',
                                'data-status': 'out',
                                'data-source': 'gridPage',
                                onClick: function onClick(e) {
                                    return addModelToBasket(e, item);
                                } }) : _react2.default.createElement(
                                'span',
                                { className: 'outStock' },
                                'Nicht auf Lager'
                            )
                        )
                    )
                )
            )
        );
    }
    function gtagEnhancedEcommerce(item) {
        var brands = item.criterias.find(function (item) {
            return item.id === 'manufacturer';
        }).values;
        gtag('event', 'select_content', {
            "content_type": "product",
            "items": [{
                "id": item.shortcode,
                "name": item.model,
                "list_name": "Kaufen",
                "quantity": 1,
                "price": item.discountPrice || item.price,
                "brand": brands.length ? brands[0].name : "",
                "category": item.categoryName
            }]
        });
    }
    return _react2.default.createElement(
        'div',
        { className: 'accessories' },
        _react2.default.createElement(
            'div',
            { className: 'row accessory-row' },
            models.map(mapModels)
        )
    );
};

ModelsGrid.propTypes = {};
ModelsGrid.defaultProps = {};

exports.default = ModelsGrid;


var img = ['https://uploads.remarket.ch/gK5_yljXv3AuMqba1nor.jpg', 'https://uploads.remarket.ch/6blor4sgPnUSLp7BDtN0.jpg', 'https://uploads.remarket.ch/BUiWVwG9AQKvSL3f0aH7.jpg'];

/***/ }),

/***/ 1903:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray2 = __webpack_require__(334);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DeviceModelsGrid = function DeviceModelsGrid(_ref) {
    var models = _ref.models,
        openQuickView = _ref.openQuickView,
        capacityName = _ref.capacityName,
        basketData = _ref.basketData,
        wishlistData = _ref.wishlistData,
        addModelToBasket = _ref.addModelToBasket,
        addModelToWishlist = _ref.addModelToWishlist,
        deviceName = _ref.deviceName;

    var _useState = (0, _react.useState)(-1),
        _useState2 = (0, _slicedToArray3.default)(_useState, 2),
        moreIndex = _useState2[0],
        setMoreIndex = _useState2[1];

    var _useState3 = (0, _react.useState)(),
        _useState4 = (0, _slicedToArray3.default)(_useState3, 2),
        wish = _useState4[0],
        setWish = _useState4[1];

    var interval = null;

    function mouseEnter(e) {
        var current = $(e.currentTarget);
        function changeImage() {
            if ($(current).find('img.active').next().length > 0) {
                $(current).find('img.active').removeClass('active').next().addClass('active');
            } else {
                $(current).find('img').removeClass('active').first().addClass('active');
            }
        }
        changeImage();
        interval = setInterval(function () {
            return changeImage();
        }, 2000);
    }
    function mouseOut(e) {
        clearInterval(interval);
        $(e.currentTarget).find('img').removeClass('active').first().addClass('active');
    }

    function gtagEnhancedEcommerce(model) {
        gtag('event', 'select_content', {
            "content_type": "product",
            "items": [{
                "id": model.shortcode,
                "name": model.descriptionLong,
                "list_name": "Kaufen",
                "quantity": 1,
                "price": model.discountPrice || model.price,
                "brand": model.deviceName,
                "category": deviceName
            }]
        });
        var gtagData = { "category": deviceName };
        window.localStorage.setItem('gtag', JSON.stringify(gtagData));
    }

    function handleOpenDetailPage(model, deviceName, modelName, capacity, color, shortcode) {
        if (window.isGoogleConnection) gtagEnhancedEcommerce(model);
        window.open('//' + window.location.host + '/kaufen/detail/' + deviceName + '/' + modelName + '/' + capacity + '/' + color + '/' + shortcode, '_self');
    }

    function showQuickView(e, model) {
        e.stopPropagation();
        openQuickView(model);
        if (window.isGoogleConnection) gtagEnhancedEcommerce(model);
    }

    function showMoreInfos(e, index) {
        e.stopPropagation();
        if (index === moreIndex) {
            setMoreIndex(-1);
        } else {
            setMoreIndex(index);
        }
    }

    function handleAddModelToBasket(e, model) {
        addModelToBasket(e, model);
    }

    function handleAddModelToWishlist(e, model) {
        addModelToWishlist(e, model);
    }

    function mapCriterias(criterias) {
        var dataArr = [];
        criterias.forEach(function (item) {
            if (item.id === 2 || item.id === 4 || item.id === 5) {
                dataArr.push(_react2.default.createElement(
                    'div',
                    { key: item.id, className: 'device-criteria criteria-' + item.id },
                    _react2.default.createElement(
                        'span',
                        null,
                        item.name,
                        ':'
                    ),
                    _react2.default.createElement(
                        'span',
                        null,
                        item.values.map(function (item, i) {
                            return _react2.default.createElement(
                                'b',
                                { key: i },
                                item.name,
                                i < item.length - 1 ? ',' : ''
                            );
                        })
                    )
                ));
            }
        });
        return dataArr;
    }

    function mapModels(model, index) {
        var modelName = model.model.split(" ").join('-').toLowerCase() || 'modelName',
            deviceName = model.deviceName.toLowerCase().replace(/ /g, '-') || 'deviceName',
            color = model.color ? model.color.toLowerCase() : 'color',
            capacity = model.capacity ? model.capacity.toLowerCase() : 'capacity';

        var mainImages = [].concat(model.deviceImages.mainImg);
        var realImages = [].concat(model.deviceImages.realImg);
        var description = '';
        if (description != '') description += ', ';
        description += model.capacity !== '' ? model.capacity : '';
        if (description != '') description += ', ';
        description += model.color !== '' ? model.color : '';
        if (description != '') description += ', ';
        description += model.warranty !== '' ? 'Garantie: ' + model.warranty : '';
        description = description.length > 28 ? description.substr(0, 28) + '...' : description;
        var condition = model.condition.length > 24 ? model.condition.substr(0, 24) + '...' : model.condition;
        var placeDescription = model.placeDescription.length > 24 ? model.placeDescription.substr(0, 24) + '...' : model.placeDescription;

        var isWish = false;

        wishlistData.map(function (el) {
            if (el.shortcode === model.shortcode) {
                isWish = true;
            }
        });

        return _react2.default.createElement(
            'div',
            { className: 'custom-col-3 col-md-4 col-sm-12 col-xs-12', key: model.id, onClick: function onClick(e) {
                    return handleOpenDetailPage(model, deviceName, modelName, capacity, color, model.shortcode);
                } },
            _react2.default.createElement(
                _reactRouter.Link,
                { className: model.discountPrice ? 'discount' : '' },
                _react2.default.createElement(
                    'div',
                    { className: 'item-device' },
                    _react2.default.createElement(
                        'div',
                        { className: 'icon-row' },
                        window.isMobile && _react2.default.createElement(
                            'div',
                            { className: 'itemQuickView', onClick: function onClick(e) {
                                    return showMoreInfos(e, index);
                                } },
                            _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/aside_filter_category_icons/zoom-in-1.svg', alt: '' })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: isWish ? "itemHeartView on" : "itemHeartView", onClick: function onClick(e) {
                                    return handleAddModelToWishlist(e, model);
                                } },
                            _react2.default.createElement(
                                'svg',
                                { viewBox: '0 0 24 24' },
                                _react2.default.createElement('use', { href: '#heart' }),
                                _react2.default.createElement('use', { href: '#heart' })
                            ),
                            _react2.default.createElement(
                                'svg',
                                { className: 'hide', viewBox: '0 0 24 24' },
                                _react2.default.createElement(
                                    'defs',
                                    null,
                                    _react2.default.createElement('path', { id: 'heart', d: 'M12 4.435c-1.989-5.399-12-4.597-12 3.568 0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-8.118-10-8.999-12-3.568z' })
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'div',
                            { className: 'images-wrap',
                                onMouseEnter: mouseEnter,
                                onMouseLeave: mouseOut },
                            mainImages.map(function (item, i) {
                                var className = 'active';
                                return _react2.default.createElement('img', { loading: 'lazy', src: item.src,
                                    key: i,
                                    className: className });
                            }),
                            realImages.map(function (item, i) {
                                var className = '';
                                return _react2.default.createElement('img', { loading: 'lazy', src: item.src,
                                    key: i,
                                    className: className });
                            })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'modelTitle' },
                            _react2.default.createElement(
                                'p',
                                { className: 'modelName' },
                                model.model
                            ),
                            model.colorCode && _react2.default.createElement('span', { className: 'colorPic',
                                style: { backgroundColor: model.colorCode } })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'description-row' },
                        description
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'place-row' },
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/aside_filter_category_icons/location.svg', alt: '' }),
                        _react2.default.createElement(
                            'span',
                            null,
                            placeDescription
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'condition-row' },
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/aside_filter_category_icons/mobile-button-light.svg', alt: '' }),
                        _react2.default.createElement(
                            'span',
                            null,
                            condition
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'bottom-row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'price' },
                            model.discountPrice && _react2.default.createElement(
                                'p',
                                { className: 'price-value discount-price' },
                                model.discountPrice,
                                ' ',
                                window.currencyValue
                            ),
                            _react2.default.createElement(
                                'p',
                                { className: model.discountPrice ? 'price-value old-price' : 'price-value' },
                                model.price,
                                ' ',
                                window.currencyValue
                            ),
                            _react2.default.createElement(
                                'p',
                                { className: 'monthlyPrice' },
                                'ab ',
                                model.discountPrice ? (model.discountPrice / 12).toFixed(2) : (model.price / 12).toFixed(2),
                                ' ',
                                window.currencyValue,
                                '/Monat'
                            )
                        ),
                        _react2.default.createElement('button', { 'data-id': model.id,
                            'data-status': basketData.some(function (item) {
                                return item.id === model.id;
                            }) ? 'in' : 'out',
                            'data-source': 'listingPage',
                            className: basketData.some(function (item) {
                                return item.id === model.id;
                            }) ? 'btn addToBasket in' : 'btn addToBasket out',
                            onClick: function onClick(e) {
                                return handleAddModelToBasket(e, model);
                            } })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: moreIndex !== index ? "hover-block" : "hover-block moreInfo" },
                        mapCriterias(model.criterias),
                        _react2.default.createElement(
                            'div',
                            { className: 'device-criteria criteria' },
                            _react2.default.createElement(
                                'span',
                                null,
                                'Garantie:'
                            ),
                            _react2.default.createElement(
                                'span',
                                null,
                                _react2.default.createElement(
                                    'b',
                                    null,
                                    model.warranty
                                )
                            )
                        ),
                        model.batteryCapacity || model.batteryLoadcycle ? _react2.default.createElement(
                            'div',
                            { className: 'device-criteria criteria' },
                            _react2.default.createElement(
                                'span',
                                null,
                                'Batterie:'
                            ),
                            model.batteryCapacity ? _react2.default.createElement(
                                'span',
                                null,
                                _react2.default.createElement(
                                    'b',
                                    null,
                                    'Kapazitat: ',
                                    model.batteryCapacity == -1 ? "n.v." : model.batteryCapacity + '%'
                                )
                            ) : '',
                            model.batteryLoadcycle ? _react2.default.createElement(
                                'span',
                                null,
                                _react2.default.createElement(
                                    'b',
                                    null,
                                    'Ladezyklen: ',
                                    model.batteryLoadcycle == -1 ? "n.v." : model.batteryLoadcycle
                                )
                            ) : ''
                        ) : ''
                    )
                )
            )
        );
    }
    return _react2.default.createElement(
        'div',
        { className: 'devicelists' },
        _react2.default.createElement(
            'div',
            { className: 'row deviceitem-row' },
            models.map(mapModels)
        )
    );
};

DeviceModelsGrid.propTypes = {};
DeviceModelsGrid.defaultProps = {};

exports.default = DeviceModelsGrid;

/***/ }),

/***/ 1904:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _itemModel = __webpack_require__(1905);

var _itemModel2 = _interopRequireDefault(_itemModel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModelsList = function ModelsList(_ref) {
    var models = _ref.models,
        addModelToBasket = _ref.addModelToBasket,
        basketData = _ref.basketData,
        capacityName = _ref.capacityName,
        openQuickView = _ref.openQuickView,
        deviceName = _ref.deviceName;

    return _react2.default.createElement(
        'div',
        { className: 'col-md-12' },
        models.map(function (model, i) {
            return _react2.default.createElement(_itemModel2.default, { model: model,
                position: i,
                capacityName: capacityName,
                basketData: basketData,
                openQuickView: openQuickView,
                addModelToBasket: addModelToBasket,
                key: i,
                deviceName: deviceName });
        })
    );
};

ModelsList.propTypes = {};
ModelsList.defaultProps = {};

exports.default = ModelsList;

/***/ }),

/***/ 1905:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _helpersFunction = __webpack_require__(315);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ItemModel = function (_Component) {
    (0, _inherits3.default)(ItemModel, _Component);

    function ItemModel(props) {
        (0, _classCallCheck3.default)(this, ItemModel);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ItemModel.__proto__ || Object.getPrototypeOf(ItemModel)).call(this, props));

        _this.showQuickView = _this.showQuickView.bind(_this);
        _this.addModelToBasket = _this.addModelToBasket.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(ItemModel, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (!window.isMobile) AOS.init();
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (!window.isMobile) {
                if (nextProps.model != this.props.model && nextProps.model) {
                    $('.itemModel.aos-init').removeClass('aos-animate');
                    AOS.init();
                }
            }
        }
    }, {
        key: 'gtagEnhancedEcommerce',
        value: function gtagEnhancedEcommerce() {
            var model = this.props.model;
            gtag('event', 'select_content', {
                "content_type": "product",
                "items": [{
                    "id": model.shortcode,
                    "name": model.descriptionLong,
                    "list_name": "Kaufen",
                    "quantity": 1,
                    "price": model.discountPrice || model.price,
                    "brand": model.deviceName,
                    "category": this.props.deviceName
                }]
            });
            var gtagData = { "category": this.props.deviceName };
            window.localStorage.setItem('gtag', JSON.stringify(gtagData));
        }
    }, {
        key: 'showQuickView',
        value: function showQuickView(e) {
            e.stopPropagation();
            this.props.openQuickView(this.props.model);
            if (window.isGoogleConnection) this.gtagEnhancedEcommerce();
        }
    }, {
        key: 'addModelToBasket',
        value: function addModelToBasket(e) {
            e.stopPropagation();
            this.props.addModelToBasket(this.props.model);
        }
    }, {
        key: 'handleOpenDetailPage',
        value: function handleOpenDetailPage(deviceName, modelName, capacity, color, shortcode) {
            if (window.isGoogleConnection) this.gtagEnhancedEcommerce();
            window.open('//' + window.location.host + '/kaufen/detail/' + deviceName + '/' + modelName + '/' + capacity + '/' + color + '/' + shortcode, '_self');
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                model = _props.model,
                addModelToBasket = _props.addModelToBasket,
                basketData = _props.basketData,
                modelName = model.model.split(" ").join('-').toLowerCase() || 'modelName',
                deviceName = model.deviceName.toLowerCase().replace(/ /g, '-') || 'deviceName',
                color = model.color ? model.color.toLowerCase() : 'color',
                capacity = model.capacity ? model.capacity.toLowerCase() : 'capacity',
                rowClass = model.discountPrice ? 'row itemModel discount' : 'row itemModel',
                noAos = window.isMobile || this.props.position === 0 ? true : undefined,
                prozessor = model.criterias.find(function (item) {
                return item.name == 'Prozessor';
            }) ? model.criterias.find(function (item) {
                return item.name == 'Prozessor';
            }).values[0].name : '',
                ram = model.criterias.find(function (item) {
                return item.name == 'Arbeitsspeicher';
            }) ? model.criterias.find(function (item) {
                return item.name == 'Arbeitsspeicher';
            }).values[0].name : '',
                connection = model.criterias.find(function (item) {
                return item.name == 'Verbindungsart';
            }) ? model.criterias.find(function (item) {
                return item.name == 'Verbindungsart';
            }).values[0].name : '';

            return _react2.default.createElement(
                'div',
                { className: rowClass,
                    style: { opacity: 1 }
                    //style={noAos && {opacity: 1}}
                    //data-aos="fade"
                    //data-aos-once="true"
                    //data-aos-duration="1000"
                    //data-aos-anchor-placement="bottom-bottom"
                    , onClick: function onClick(e) {
                        return _this2.handleOpenDetailPage(deviceName, modelName, capacity, color, model.shortcode);
                    } },
                !window.isMobile && _react2.default.createElement(
                    'div',
                    { className: 'itemModel_helper row', style: { display: "block" } },
                    _react2.default.createElement(
                        'div',
                        { className: 'itemMainInfo' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemImage' },
                            _react2.default.createElement('img', { loading: 'lazy', src: model.deviceImages.mainImg.src, alt: '' })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'itemSpec' },
                            _react2.default.createElement(
                                'span',
                                { className: 'modelName' },
                                model.model
                            ),
                            _react2.default.createElement(
                                'span',
                                { className: 'modelCriterias' },
                                connection,
                                prozessor && prozessor + ', ',
                                ram && ram + ' RAM'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'itemSpec' },
                            _react2.default.createElement(
                                'span',
                                { className: 'modelValues' },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    model.capacity,
                                    model.capacityImage && _react2.default.createElement('img', { loading: 'lazy', src: model.capacityImage })
                                ),
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    model.color,
                                    '\xA0',
                                    model.colorCode && _react2.default.createElement('span', { className: 'colorPic',
                                        style: { backgroundColor: model.colorCode } })
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'itemBtn' },
                            _react2.default.createElement(
                                'button',
                                { className: 'btn detail' },
                                'Im Detail ansehen',
                                _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/preview.svg' })
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'itemBtn' },
                            _react2.default.createElement(
                                'button',
                                { 'data-status': basketData.some(function (item) {
                                        return item.id === model.id;
                                    }) ? 'in' : 'out',
                                    'data-source': 'listingPage',
                                    className: 'btn detail',
                                    onClick: function onClick(e) {
                                        return addModelToBasket(e, model);
                                    } },
                                basketData.some(function (item) {
                                    return item.id === model.id;
                                }) ? 'Aus Warenkorb entfernen' : 'In den Warenkorb',
                                _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/bag-20.svg' })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'itemBottomInfo' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemPlace' },
                            _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/aside_filter_category_icons/lagerort.svg', alt: '',
                                style: { width: 16, marginRight: 11 } }),
                            _react2.default.createElement(
                                'span',
                                null,
                                model.placeDescription
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'itemQuickView', onClick: this.showQuickView },
                            _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/search-zoom-in.svg', alt: '',
                                style: { width: 16, marginRight: 11 } }),
                            _react2.default.createElement(
                                'span',
                                null,
                                'Schnellvorschau'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'itemValues' },
                            _react2.default.createElement(
                                'div',
                                { className: 'wrapValues-small' },
                                _react2.default.createElement(
                                    'span',
                                    { className: 'modelValues-small warranty' },
                                    _react2.default.createElement(
                                        'span',
                                        null,
                                        'Garantie:'
                                    ),
                                    _react2.default.createElement('br', null),
                                    _react2.default.createElement(
                                        'span',
                                        { style: { fontWeight: "bold" } },
                                        model.warranty.length > 15 ? model.warranty.substr(0, 15) + '...' : model.warranty
                                    )
                                ),
                                _react2.default.createElement(
                                    'span',
                                    { className: 'modelValues-small condition' },
                                    _react2.default.createElement(
                                        'span',
                                        null,
                                        'Zustand:'
                                    ),
                                    _react2.default.createElement('br', null),
                                    _react2.default.createElement(
                                        'span',
                                        { style: { fontWeight: "bold" } },
                                        ' ',
                                        model.condition.length > 15 ? model.condition.substr(0, 15) + '...' : model.condition
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'price-block' },
                                    _react2.default.createElement(
                                        'span',
                                        { className: 'price' },
                                        _react2.default.createElement(
                                            'span',
                                            { className: 'title' },
                                            'Preis'
                                        ),
                                        _react2.default.createElement('br', null),
                                        model.discountPrice && _react2.default.createElement(
                                            'span',
                                            {
                                                className: 'value discount-price' },
                                            (0, _helpersFunction.formatPrice)(model.discountPrice),
                                            ' ',
                                            window.currencyValue
                                        ),
                                        _react2.default.createElement(
                                            'span',
                                            {
                                                className: model.discountPrice ? 'value old-price' : 'value' },
                                            (0, _helpersFunction.formatPrice)(model.price),
                                            ' ',
                                            window.currencyValue
                                        )
                                    )
                                )
                            )
                        )
                    )
                ),
                window.isMobile && _react2.default.createElement(
                    'div',
                    { className: 'itemModel_helper row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-2 image' },
                        _react2.default.createElement('img', { loading: 'lazy', src: model.deviceImages.mainImg.src, alt: '' })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-10' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemWrap col-md-12' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-8 col-xs-12' },
                                _react2.default.createElement(
                                    'span',
                                    { className: 'modelName' },
                                    model.model,
                                    _react2.default.createElement(
                                        'span',
                                        { className: 'text-light' },
                                        model.extendedTitle && ' (' + model.extendedTitle + ')'
                                    )
                                ),
                                _react2.default.createElement(
                                    'span',
                                    { className: 'modelCriterias' },
                                    connection,
                                    prozessor && prozessor + ', ',
                                    ram && ram + ' RAM'
                                ),
                                _react2.default.createElement(
                                    'span',
                                    { className: 'modelValues' },
                                    _react2.default.createElement(
                                        'span',
                                        null,
                                        model.capacity,
                                        model.capacityImage && _react2.default.createElement('img', { loading: 'lazy', src: model.capacityImage })
                                    ),
                                    _react2.default.createElement(
                                        'span',
                                        null,
                                        model.color,
                                        '\xA0',
                                        model.colorCode && _react2.default.createElement('span', { className: 'colorPic',
                                            style: { backgroundColor: model.colorCode } })
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'span',
                                { className: 'modelValues-small for-mobile' },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'Zustand:'
                                ),
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    ' ',
                                    _react2.default.createElement(
                                        'b',
                                        null,
                                        model.condition
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'col-sm-4 col-xs-8 price-block' },
                                _react2.default.createElement(
                                    'span',
                                    { className: 'price' },
                                    _react2.default.createElement(
                                        'span',
                                        { className: 'title' },
                                        'Preis'
                                    ),
                                    _react2.default.createElement('br', null),
                                    model.discountPrice && _react2.default.createElement(
                                        'span',
                                        {
                                            className: 'value discount-price' },
                                        model.discountPrice,
                                        ' ',
                                        window.currencyValue
                                    ),
                                    _react2.default.createElement(
                                        'span',
                                        {
                                            className: model.discountPrice ? 'value old-price' : 'value' },
                                        model.price,
                                        ' ',
                                        window.currencyValue
                                    )
                                )
                            ),
                            _react2.default.createElement('button', { 'data-id': model.id,
                                'data-status': basketData.some(function (item) {
                                    return item.id === model.id;
                                }) ? 'in' : 'out',
                                'data-source': 'listingPage',
                                className: 'btn addToBasket for-mobile',
                                onClick: function onClick(e) {
                                    return addModelToBasket(e, model);
                                } }),
                            _react2.default.createElement(
                                'div',
                                { className: 'btn addToBasket for-mobile for-mobile_details' },
                                _react2.default.createElement('i', { className: 'fa fa-list' })
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'itemWrap col-md-12' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-sm-8' },
                                _react2.default.createElement(
                                    'div',
                                    { className: 'wrapValues-small' },
                                    _react2.default.createElement(
                                        'span',
                                        { className: 'modelValues-small warranty' },
                                        _react2.default.createElement(
                                            'span',
                                            null,
                                            'Garantie:'
                                        ),
                                        _react2.default.createElement('br', null),
                                        _react2.default.createElement(
                                            'span',
                                            null,
                                            _react2.default.createElement(
                                                'b',
                                                null,
                                                model.warranty
                                            )
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'span',
                                        { className: 'modelValues-small condition' },
                                        _react2.default.createElement(
                                            'span',
                                            null,
                                            'Zustand:'
                                        ),
                                        _react2.default.createElement('br', null),
                                        _react2.default.createElement(
                                            'span',
                                            null,
                                            ' ',
                                            _react2.default.createElement(
                                                'b',
                                                null,
                                                model.condition
                                            )
                                        )
                                    )
                                ),
                                _react2.default.createElement(
                                    'button',
                                    { className: 'quickView', onClick: this.showQuickView },
                                    'Schnellvorschau'
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'col-sm-4 buttonsBlock' },
                                _react2.default.createElement(
                                    'button',
                                    { className: 'btn detail' },
                                    'Im Detail ansehen',
                                    _react2.default.createElement('i', { className: 'fa fa-list' })
                                ),
                                _react2.default.createElement(
                                    'button',
                                    { 'data-status': basketData.some(function (item) {
                                            return item.id === model.id;
                                        }) ? 'in' : 'out',
                                        'data-source': 'listingPage',
                                        className: 'btn addToBasket',
                                        onClick: function onClick(e) {
                                            return addModelToBasket(e, model);
                                        } },
                                    basketData.some(function (item) {
                                        return item.id === model.id;
                                    }) ? 'Aus Warenkorb entfernen' : 'In den Warenkorb'
                                )
                            )
                        )
                    )
                ),
                !window.isMobile || window.location.pathname.split('/')[2] === 'zubeh%C3%B6r' ? '' : _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/aside_filter_category_icons/lagerort.svg', alt: '',
                            style: { width: 16, marginRight: 11 } }),
                        _react2.default.createElement(
                            'span',
                            { style: { fontSize: 12 } },
                            model.placeDescription
                        )
                    )
                )
            );
        }
    }]);
    return ItemModel;
}(_react.Component);

ItemModel.propTypes = {};
ItemModel.defaultProps = {};

exports.default = ItemModel;

/***/ }),

/***/ 1906:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

var _itemTopDeviceMenuRow = __webpack_require__(1907);

var _itemTopDeviceMenuRow2 = _interopRequireDefault(_itemTopDeviceMenuRow);

var _itemTopDeviceMenuRowNew = __webpack_require__(1908);

var _itemTopDeviceMenuRowNew2 = _interopRequireDefault(_itemTopDeviceMenuRowNew);

var _itemTopProductMenuRow = __webpack_require__(1909);

var _itemTopProductMenuRow2 = _interopRequireDefault(_itemTopProductMenuRow);

var _itemTopProductMenuRowNew = __webpack_require__(1910);

var _itemTopProductMenuRowNew2 = _interopRequireDefault(_itemTopProductMenuRowNew);

var _modelMenuRow = __webpack_require__(1911);

var _modelMenuRow2 = _interopRequireDefault(_modelMenuRow);

var _modelMenuRowNew = __webpack_require__(1912);

var _modelMenuRowNew2 = _interopRequireDefault(_modelMenuRowNew);

var _productModelMenuRow = __webpack_require__(1913);

var _productModelMenuRow2 = _interopRequireDefault(_productModelMenuRow);

var _productModelMenuRowNew = __webpack_require__(1914);

var _productModelMenuRowNew2 = _interopRequireDefault(_productModelMenuRowNew);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TopDeviceMenu = function (_Component) {
  (0, _inherits3.default)(TopDeviceMenu, _Component);

  function TopDeviceMenu(props) {
    (0, _classCallCheck3.default)(this, TopDeviceMenu);

    var _this = (0, _possibleConstructorReturn3.default)(this, (TopDeviceMenu.__proto__ || Object.getPrototypeOf(TopDeviceMenu)).call(this, props));

    _this.mapDevices = function (device) {
      var currentDeviceName = _this.props.params.deviceCategory1 && _this.props.params.deviceCategory1.replace(/-/g, ' '),
          className = '',
          imageUrl = '',
          deviceCategories = [device.name.replace(/ /g, '-').toLowerCase()],
          computerIds = [8, 15, 23, 24];

      if (device.submodels && computerIds.every(function (item) {
        return item != device.id;
      })) mapSubmodels(device.submodels);
      var strUrl = deviceCategories.join('/') + '/filter';

      if (device.name.toLowerCase().replace('-', ' ') === currentDeviceName.replace('-', ' ')) {
        className = 'current row smallDevice';
        imageUrl = '/images/design/' + device.id + 'activeDevice.svg';
      } else {
        className = 'row smallDevice';
        imageUrl = '/images/design/' + device.id + 'device.svg';
      }

      function mapSubmodels(submodels) {
        deviceCategories.push(submodels[0].name.replace(/ /g, '-').toLowerCase());
        if (submodels[0].submodels) mapSubmodels(submodels[0].submodels);
      }

      // if (device.name !== 'Zubehör') {
      return _react2.default.createElement(
        _reactRouter.Link,
        {
          to: '/kaufen/' + strUrl,
          title: device.name + ' kaufen',
          className: className,
          key: device.id
        },
        _react2.default.createElement(
          'span',
          { className: 'image' },
          _react2.default.createElement('img', { loading: 'lazy', src: imageUrl, alt: '' })
        ),
        _react2.default.createElement(
          'span',
          { className: 'title' },
          device.name
        ),
        _react2.default.createElement(
          'span',
          { className: 'name' },
          device.name
        )
      );
    };

    _this.groupBy = function (list, keyGetter) {
      var map = new Map();
      list.forEach(function (item) {
        var key = keyGetter(item);
        var collection = map.get(key);
        if (!collection) {
          map.set(key, item.deviceModelGroupOrderBy);
          map.set(key, [item]);
        } else {
          collection.push(item);
        }
      });
      return map;
    };

    _this.mapDevices = _this.mapDevices.bind(_this);
    _this.groupBy = _this.groupBy.bind(_this);

    return _this;
  }

  /*
  groupBy = (list, keyGetter) => {
    const map = new Map();
    list.forEach((item) => {
        const key = keyGetter(item);
        const collection = map.get(key);
        if (!collection) {
            map.set(key, [item]);
        } else {
            collection.push(item);
        }
    });
    return map;
  };
  */

  (0, _createClass3.default)(TopDeviceMenu, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          params = _props.params,
          filterOptions = _props.filterOptions,
          devices = _props.devices,
          productModels = _props.productModels,
          modelCategoryId = _props.modelCategoryId,
          currentDeviceName = params.deviceCategory1.replace(/-/g, ' '),
          currentDevice = devices.filter(function (item) {
        return item.name.toLowerCase() === currentDeviceName;
      }),
          isModelMenu = !!((currentDeviceName === 'tablet' || currentDeviceName === 'smartphone') && params.deviceCategory2);


      var currentSubmodels = [];
      if (currentDevice[0] && currentDevice[0].submodels) {
        currentSubmodels = currentDevice[0].submodels;
      }

      var currentProductBrands = [];
      if (currentDeviceName === "zubehör") {
        for (var key in filterOptions) {
          if (key === 'kategorie-compatibility') {
            Array.from(this.groupBy(filterOptions['kategorie-compatibility'].values, function (item) {
              return item.deviceModelGroupOrderBy + '-' + item.deviceModelGroupName;
            })).sort(function (a, b) {
              return parseInt(a[0].split('-')[0]) > parseInt(b[0].split('-')[0]) ? 1 : -1;
            }).map(function (item) {
              return currentProductBrands.push({
                'deviceModelName': item[0].split('-')[1],
                'deviceModelGroupId': item[1][0]['deviceModelGroupId'],
                'deviceModelGroupLogoContent': item[1][0]['deviceModelGroupLogoContent']
              });
            });
          }
        }
      }

      var paramModelCategoryId = 0;
      for (var _key in params) {
        if (params[_key] && params[_key].includes('kategorie-compatibility-brand=')) {
          paramModelCategoryId = params[_key].split('=')[1];
        }
      }
      var currentProductBrands_1 = [];
      if (currentDeviceName === "zubehör" && paramModelCategoryId != 0) {
        for (var _key2 in filterOptions) {
          if (_key2 === 'kategorie-compatibility') {
            Array.from(this.groupBy(filterOptions['kategorie-compatibility'].values, function (item) {
              return item.deviceModelSubGroupOrderBy + '-' + item.deviceModelSubGroupName;
            })).filter(function (item) {
              return item[1][0]['deviceModelSubGroupName'] != null && item[1][0]['deviceModelGroupId'] == paramModelCategoryId;
            }).sort(function (a, b) {
              return parseInt(a[0].split('-')[0]) > parseInt(b[0].split('-')[0]) ? 1 : -1;
            }).map(function (item) {
              return currentProductBrands_1.push({
                'deviceModelName': item[0].split('-')[1],
                'deviceModelGroupId': item[1][0]['deviceModelSubGroupId'],
                'deviceModelGroupLogoContent': item[1][0]['deviceModelSubGroupLogoContent'],
                'deviceModelParentGroupId': item[1][0]['deviceModelGroupId']
              });
            });
          }
        }
      }
      var paramModelSubCategoryId = 0;
      if (currentProductBrands_1.length > 0) {
        for (var _key3 in params) {
          if (params[_key3] && params[_key3].includes('kategorie-compatibility-brand1=')) {
            paramModelSubCategoryId = params[_key3].split('=')[1];
          }
        }
      }

      var currentProductModels = [];
      if (currentDeviceName === "zubehör" && paramModelCategoryId != 0) {
        for (var _key4 in filterOptions) {
          if (_key4 === 'kategorie-compatibility') {
            Array.from(this.groupBy(filterOptions['kategorie-compatibility'].values, function (item) {
              return paramModelSubCategoryId != 0 ? item.deviceModelSubGroupName : item.deviceModelGroupName;
            })).sort(function (a, b) {
              return a.orderBy > b.orderBy;
            }).filter(function (item) {
              return paramModelSubCategoryId != 0 ? item[1][0].deviceModelSubGroupId == paramModelSubCategoryId : item[1][0].deviceModelGroupId == modelCategoryId;
            }).map(function (item1) {
              return item1[1].map(function (item2) {
                return currentProductModels.push({
                  'id': item2.id,
                  'modelGroupId': item2.deviceModelGroupId,
                  'modelSubGroupId': item2.deviceModelSubGroupId,
                  'name': item2.name,
                  'image': item2.deviceMainImage,
                  'orderBy': item2.orderBy
                });
              });
            });
          }
        }
      }

      return _react2.default.createElement(
        'div',
        { className: 'container no-padding' },
        _react2.default.createElement(
          'div',
          { className: 'model', id: 'devicesListSmall' },
          _react2.default.createElement(
            'div',
            { className: 'clearfix text-center deviceRow' },
            _react2.default.createElement(
              'div',
              null,
              devices.map(this.mapDevices)
            )
          ),
          currentSubmodels.length > 0 && !window.isMobile && _react2.default.createElement(_itemTopDeviceMenuRow2.default, {
            submodels: currentSubmodels || [],
            params: params,
            index: 2
          }),
          currentSubmodels.length > 0 && window.isMobile && _react2.default.createElement(_itemTopDeviceMenuRowNew2.default, {
            submodels: currentSubmodels || [],
            params: params,
            index: 2
          }),
          isModelMenu && !window.isMobile && _react2.default.createElement(_modelMenuRow2.default, {
            models: this.props.models,
            params: this.props.params
          }),
          isModelMenu && window.isMobile && _react2.default.createElement(_modelMenuRowNew2.default, {
            models: this.props.models,
            params: this.props.params
          }),
          currentProductBrands.length > 0 && !window.isMobile && _react2.default.createElement(_itemTopProductMenuRow2.default, {
            submodels: currentProductBrands || [],
            params: params,
            index: 3,
            layer: 0
          }),
          currentProductBrands.length > 0 && window.isMobile && _react2.default.createElement(_itemTopProductMenuRowNew2.default, {
            submodels: currentProductBrands || [],
            params: params,
            index: 3,
            layer: 0
          }),
          currentProductBrands_1.length > 0 && !window.isMobile && _react2.default.createElement(_itemTopProductMenuRow2.default, {
            submodels: currentProductBrands_1 || [],
            params: params,
            index: 3,
            layer: 1
          }),
          currentProductBrands_1.length > 0 && window.isMobile && _react2.default.createElement(_itemTopProductMenuRowNew2.default, {
            submodels: currentProductBrands_1 || [],
            params: params,
            index: 3,
            layer: 1
          }),
          currentProductModels.length > 0 && !window.isMobile && _react2.default.createElement(_productModelMenuRow2.default, {
            models: currentProductModels || [],
            params: this.props.params
          }),
          currentProductModels.length > 0 && window.isMobile && _react2.default.createElement(_productModelMenuRowNew2.default, {
            models: currentProductModels || [],
            params: this.props.params
          }),
          _react2.default.createElement('div', { className: 'cb' })
        )
      );
    }
  }]);
  return TopDeviceMenu;
}(_react.Component);

exports.default = TopDeviceMenu;

/***/ }),

/***/ 1907:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouter = __webpack_require__(206);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ItemTopDeviceMenuRow = function (_Component) {
    (0, _inherits3.default)(ItemTopDeviceMenuRow, _Component);

    function ItemTopDeviceMenuRow(props) {
        (0, _classCallCheck3.default)(this, ItemTopDeviceMenuRow);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ItemTopDeviceMenuRow.__proto__ || Object.getPrototypeOf(ItemTopDeviceMenuRow)).call(this, props));

        _this.state = {};

        _this.mapSubmodels = _this.mapSubmodels.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(ItemTopDeviceMenuRow, [{
        key: 'mapSubmodels',
        value: function mapSubmodels(item) {
            var _props = this.props,
                index = _props.index,
                params = _props.params,
                className = 'smallBrand',
                strPrevUrl = '';
            /*get prev url*/

            for (var key in params) {
                var paramKeyIndex = key.slice(14);
                if (key.includes('deviceCategory') && params[key] && +paramKeyIndex < index) strPrevUrl += params[key] + '/';
            }
            /*add current name*/
            strPrevUrl += item.name.toLowerCase().replace(/ /g, '-') + '/';
            /*add submodels url*/
            /*
            we need to ignore submdels url for now
            function mapSubmodels(submodels){
                strPrevUrl += submodels[0].name.replace( / /g, '-').toLowerCase() + '/'
                if(submodels[0].submodels) mapSubmodels(submodels[0].submodels)
            }
            if(item.submodels) mapSubmodels(item.submodels)
            */

            if (params['deviceCategory' + index] && params['deviceCategory' + index].replace(/-/g, ' ') === item.name.toLowerCase()) className += ' current';
            return _react2.default.createElement(
                _reactRouter.Link,
                { to: '/kaufen/' + strPrevUrl + 'filter',
                    className: className,
                    key: item.id },
                item.images && _react2.default.createElement('img', { loading: 'lazy', src: item.images[0], className: 'deviceIcon', alt: '' }),
                _react2.default.createElement(
                    'span',
                    null,
                    item.name
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props,
                submodels = _props2.submodels,
                index = _props2.index,
                params = _props2.params,
                currentDevice = [],
                currentSubmodels = [];

            if (params['deviceCategory' + index]) {
                currentDevice = submodels.filter(function (item) {
                    return item.name.toLowerCase() == params['deviceCategory' + index].replace(/-/g, ' ');
                });
            }
            if (currentDevice[0] && currentDevice[0].submodels) currentSubmodels = currentDevice[0].submodels;
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'clearfix text-center subModels' },
                    _react2.default.createElement(
                        'div',
                        { style: { maxWidth: "970px" } },
                        submodels.map(this.mapSubmodels)
                    )
                ),
                currentSubmodels.length > 0 && _react2.default.createElement(ItemTopDeviceMenuRow, { submodels: currentSubmodels,
                    params: params,
                    index: index + 1 })
            );
        }
    }]);
    return ItemTopDeviceMenuRow;
}(_react.Component);

ItemTopDeviceMenuRow.propTypes = {};
ItemTopDeviceMenuRow.defaultProps = {};
exports.default = ItemTopDeviceMenuRow;

/***/ }),

/***/ 1908:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

var _reactSlick = __webpack_require__(929);

var _reactSlick2 = _interopRequireDefault(_reactSlick);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ItemTopDeviceMenuRowNew = function (_Component) {
    (0, _inherits3.default)(ItemTopDeviceMenuRowNew, _Component);

    function ItemTopDeviceMenuRowNew(props) {
        (0, _classCallCheck3.default)(this, ItemTopDeviceMenuRowNew);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ItemTopDeviceMenuRowNew.__proto__ || Object.getPrototypeOf(ItemTopDeviceMenuRowNew)).call(this, props));

        _this.state = {};

        _this.mapSubmodels = _this.mapSubmodels.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(ItemTopDeviceMenuRowNew, [{
        key: 'mapSubmodels',
        value: function mapSubmodels(item) {
            var _props = this.props,
                index = _props.index,
                params = _props.params,
                className = 'smallModel forBrand',
                strPrevUrl = '';
            /*get prev url*/

            for (var key in params) {
                var paramKeyIndex = key.slice(14);
                if (key.includes('deviceCategory') && params[key] && +paramKeyIndex < index) strPrevUrl += params[key] + '/';
            }
            /*add current name*/
            strPrevUrl += item.name.toLowerCase().replace(/ /g, '-') + '/';
            /*add submodels url*/
            /*
            we need to ignore submdels url for now
            function mapSubmodels(submodels){
                strPrevUrl += submodels[0].name.replace( / /g, '-').toLowerCase() + '/'
                if(submodels[0].submodels) mapSubmodels(submodels[0].submodels)
            }
            if(item.submodels) mapSubmodels(item.submodels)
            */

            if (params['deviceCategory' + index] && params['deviceCategory' + index].replace(/-/g, ' ') === item.name.toLowerCase()) className += ' current';
            return _react2.default.createElement(
                'span',
                { key: 'top-device-menu-' + item.id },
                _react2.default.createElement(
                    _reactRouter.Link,
                    { to: '/kaufen/' + strPrevUrl + 'filter',
                        className: className },
                    item.images && _react2.default.createElement('img', { loading: 'lazy', src: item.images[0], className: 'deviceIcon', alt: '' }),
                    _react2.default.createElement(
                        'span',
                        null,
                        item.name
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props,
                submodels = _props2.submodels,
                index = _props2.index,
                params = _props2.params,
                currentDevice = [],
                currentSubmodels = [];

            if (params['deviceCategory' + index]) {
                currentDevice = submodels.filter(function (item) {
                    return item.name.toLowerCase() == params['deviceCategory' + index].replace(/-/g, ' ');
                });
            }
            if (currentDevice[0] && currentDevice[0].submodels) currentSubmodels = currentDevice[0].submodels;
            var settings = {
                dots: false,
                arrows: true,
                infinite: false,
                speed: 300,
                slidesToShow: 7,
                slidesToScroll: 5,
                responsive: [{
                    breakpoint: 800,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 4
                    }
                }, {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 4,
                        slidesToScroll: 3
                    }
                }, {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 3
                    }
                }]
            };
            return _react2.default.createElement(
                _react.Fragment,
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'clearfix container text-center subModels slideEffect bgChange' },
                    _react2.default.createElement(
                        _react.Fragment,
                        null,
                        _react2.default.createElement(
                            _reactSlick2.default,
                            (0, _extends3.default)({ ref: 'sliderMod' }, settings),
                            submodels.map(this.mapSubmodels)
                        )
                    )
                ),
                currentSubmodels.length > 0 && _react2.default.createElement(ItemTopDeviceMenuRowNew, { submodels: currentSubmodels,
                    params: params,
                    index: index + 1 })
            );
        }
    }]);
    return ItemTopDeviceMenuRowNew;
}(_react.Component);

ItemTopDeviceMenuRowNew.propTypes = {};
ItemTopDeviceMenuRowNew.defaultProps = {};
exports.default = ItemTopDeviceMenuRowNew;

/***/ }),

/***/ 1909:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ItemTopProductMenuRow = function (_Component) {
    (0, _inherits3.default)(ItemTopProductMenuRow, _Component);

    function ItemTopProductMenuRow(props) {
        (0, _classCallCheck3.default)(this, ItemTopProductMenuRow);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ItemTopProductMenuRow.__proto__ || Object.getPrototypeOf(ItemTopProductMenuRow)).call(this, props));

        _this.state = {};
        _this.mapSubmodels = _this.mapSubmodels.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(ItemTopProductMenuRow, [{
        key: 'mapSubmodels',
        value: function mapSubmodels(item) {
            var _props = this.props,
                index = _props.index,
                params = _props.params,
                layer = _props.layer;

            var className = "smallBrand";
            var filterParams = '';
            if (layer == 0) {
                filterParams = 'kategorie-compatibility-brand=';
            } else if (layer == 1) {
                filterParams = 'kategorie-compatibility-brand1=';
            }
            for (var key in params) {
                if (params[key].includes(filterParams)) {
                    var brandInfos = params[key].split('=');
                    if (brandInfos.length > 1 && brandInfos[1] == item.deviceModelGroupId) {
                        className += ' current';
                    }
                }
            }
            var linkUrl = '';
            if (layer == 0) {
                linkUrl = '/kaufen/' + params.deviceCategory1 + '/' + params.deviceCategory2 + '/filter/kategorie-compatibility-brand=' + item.deviceModelGroupId;
            } else if (layer == 1) {
                linkUrl = '/kaufen/' + params.deviceCategory1 + '/' + params.deviceCategory2 + '/filter/kategorie-compatibility-brand=' + item.deviceModelParentGroupId + '/kategorie-compatibility-brand1=' + item.deviceModelGroupId;
            }

            return _react2.default.createElement(
                _reactRouter.Link,
                { to: linkUrl,
                    className: className,
                    key: item.deviceModelGroupId, style: { paddingLeft: '12px', paddingRight: '12px' } },
                _react2.default.createElement(
                    'span',
                    null,
                    item.deviceModelName
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props,
                submodels = _props2.submodels,
                index = _props2.index,
                params = _props2.params;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'clearfix text-center subModels' },
                    _react2.default.createElement(
                        'div',
                        { style: { maxWidth: "970px" } },
                        submodels.map(this.mapSubmodels)
                    )
                )
            );
        }
    }]);
    return ItemTopProductMenuRow;
}(_react.Component);

ItemTopProductMenuRow.propTypes = {};
ItemTopProductMenuRow.defaultProps = {};
exports.default = ItemTopProductMenuRow;

/***/ }),

/***/ 1910:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

var _reactSlick = __webpack_require__(929);

var _reactSlick2 = _interopRequireDefault(_reactSlick);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ItemTopProductMenuRowNew = function (_Component) {
    (0, _inherits3.default)(ItemTopProductMenuRowNew, _Component);

    function ItemTopProductMenuRowNew(props) {
        (0, _classCallCheck3.default)(this, ItemTopProductMenuRowNew);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ItemTopProductMenuRowNew.__proto__ || Object.getPrototypeOf(ItemTopProductMenuRowNew)).call(this, props));

        _this.state = {};
        _this.mapSubmodels = _this.mapSubmodels.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(ItemTopProductMenuRowNew, [{
        key: 'mapSubmodels',
        value: function mapSubmodels(item) {
            var _props = this.props,
                index = _props.index,
                params = _props.params,
                layer = _props.layer;

            var className = "smallModel forBrand";
            var filterParams = '';
            if (layer == 0) {
                filterParams = 'kategorie-compatibility-brand=';
            } else if (layer == 1) {
                filterParams = 'kategorie-compatibility-brand1=';
            }
            for (var key in params) {
                if (params[key].includes(filterParams)) {
                    var brandInfos = params[key].split('=');
                    if (brandInfos.length > 1 && brandInfos[1] == item.deviceModelGroupId) {
                        className += ' current';
                    }
                }
            }
            var linkUrl = '';
            if (layer == 0) {
                linkUrl = '/kaufen/' + params.deviceCategory1 + '/' + params.deviceCategory2 + '/filter/kategorie-compatibility-brand=' + item.deviceModelGroupId;
            } else if (layer == 1) {
                linkUrl = '/kaufen/' + params.deviceCategory1 + '/' + params.deviceCategory2 + '/filter/kategorie-compatibility-brand=' + item.deviceModelParentGroupId + '/kategorie-compatibility-brand1=' + item.deviceModelGroupId;
            }
            return _react2.default.createElement(
                'span',
                { key: 'top-product-menu-' + item.id },
                _react2.default.createElement(
                    _reactRouter.Link,
                    { to: linkUrl,
                        className: className, style: { paddingLeft: '12px', paddingRight: '12px' } },
                    item.deviceModelGroupLogoContent ? _react2.default.createElement('div', { className: 'image', dangerouslySetInnerHTML: { __html: item.deviceModelGroupLogoContent } }) : _react2.default.createElement(
                        'div',
                        { className: 'image' },
                        _react2.default.createElement('img', { loading: 'lazy', src: '/images/design/submodel/' + item.deviceModelGroupId + '.svg', alt: '' })
                    ),
                    _react2.default.createElement(
                        'span',
                        null,
                        item.deviceModelName
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props,
                submodels = _props2.submodels,
                index = _props2.index,
                params = _props2.params;

            var settings = {
                dots: false,
                arrows: true,
                infinite: false,
                speed: 300,
                slidesToShow: 7,
                slidesToScroll: 5,
                responsive: [{
                    breakpoint: 800,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 4
                    }
                }, {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 4,
                        slidesToScroll: 3
                    }
                }, {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 3
                    }
                }]
            };
            return _react2.default.createElement(
                _react.Fragment,
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'clearfix container text-center subModels slideEffect topChange' },
                    _react2.default.createElement(
                        _react.Fragment,
                        null,
                        _react2.default.createElement(
                            _reactSlick2.default,
                            (0, _extends3.default)({ ref: 'sliderMod' }, settings),
                            submodels.map(this.mapSubmodels)
                        )
                    )
                )
            );
        }
    }]);
    return ItemTopProductMenuRowNew;
}(_react.Component);

ItemTopProductMenuRowNew.propTypes = {};
ItemTopProductMenuRowNew.defaultProps = {};
exports.default = ItemTopProductMenuRowNew;

/***/ }),

/***/ 1911:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

var _reactSlick = __webpack_require__(929);

var _reactSlick2 = _interopRequireDefault(_reactSlick);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModelMenuRow = function (_PureComponent) {
    (0, _inherits3.default)(ModelMenuRow, _PureComponent);

    function ModelMenuRow(props) {
        (0, _classCallCheck3.default)(this, ModelMenuRow);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ModelMenuRow.__proto__ || Object.getPrototypeOf(ModelMenuRow)).call(this, props));

        _this.mapModels = function (item, key) {
            var params = _this.props.params;

            var className = 'smallModel';
            Object.values(params).map(function (param) {
                if (param.replace(/modell=/, '') == item.id) {
                    className = className + ' current';
                    if (!_this.state.currentSlide || _this.state.currentSlide != key) {
                        _this.setState({ currentSlide: key });
                    }
                }
            });

            var isModel = Object.values(params).find(function (param) {
                return param.includes('modell=');
            });
            if (!isModel && _this.state.currentSlide) {
                _this.setState({ currentSlide: null });
            }
            var url = "/kaufen/";
            url = params.deviceCategory1 ? url + params.deviceCategory1 : url;
            url = params.deviceCategory2 ? url + '/' + params.deviceCategory2 : url;
            url = params.deviceCategory3 ? url + '/' + params.deviceCategory3 : url;
            url = params.deviceCategory4 ? url + '/' + params.deviceCategory4 : url;
            url = params.deviceCategory5 ? url + '/' + params.deviceCategory5 : url;
            url += "/filter/modell=" + item.id;
            return _react2.default.createElement(
                "span",
                { key: item.id },
                _react2.default.createElement(
                    _reactRouter.Link,
                    { to: url,
                        className: className },
                    item.deviceImages && _react2.default.createElement("img", { loading: "lazy", src: item.deviceImages.mainImg.src, className: "deviceIcon", alt: "" }),
                    _react2.default.createElement(
                        "span",
                        null,
                        item.name
                    )
                )
            );
        };

        _this.state = {
            currentSlide: null
        };
        return _this;
    }

    (0, _createClass3.default)(ModelMenuRow, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                models = _props.models,
                params = _props.params;

            models.sort(function (a, b) {
                return a.orderBy - b.orderBy;
            });
            var settings = {
                dots: false,
                arrows: true,
                infinite: false,
                speed: 300,
                slidesToShow: 7,
                slidesToScroll: 5,
                responsive: [{
                    breakpoint: 800,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 4
                    }
                }, {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 4,
                        slidesToScroll: 3
                    }
                }, {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 2
                    }
                }]
            };
            var maxcount = window.isMobile ? 3 : 5;
            return _react2.default.createElement(
                _react.Fragment,
                null,
                _react2.default.createElement(
                    "div",
                    { className: "clearfix container text-center subModels" },
                    !window.isMobile && !!models.length && _react2.default.createElement(
                        _reactRouter.Link,
                        { className: "backButton", to: "/kaufen/" + params.deviceCategory1 + "/filter/" },
                        _react2.default.createElement("img", { loading: "lazy", src: "/images/icons/arrow-back.svg", alt: "" })
                    ),
                    !!models.length && models.length > maxcount && _react2.default.createElement(
                        _react.Fragment,
                        null,
                        _react2.default.createElement(
                            _reactSlick2.default,
                            (0, _extends3.default)({ ref: "sliderMod" }, settings),
                            models.map(this.mapModels)
                        )
                    ),
                    models.length <= maxcount && _react2.default.createElement(
                        "div",
                        null,
                        models.map(this.mapModels)
                    )
                )
            );
        }
    }]);
    return ModelMenuRow;
}(_react.PureComponent);

exports.default = ModelMenuRow;

/***/ }),

/***/ 1912:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

var _reactSlick = __webpack_require__(929);

var _reactSlick2 = _interopRequireDefault(_reactSlick);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModelMenuRowNew = function (_PureComponent) {
    (0, _inherits3.default)(ModelMenuRowNew, _PureComponent);

    function ModelMenuRowNew(props) {
        (0, _classCallCheck3.default)(this, ModelMenuRowNew);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ModelMenuRowNew.__proto__ || Object.getPrototypeOf(ModelMenuRowNew)).call(this, props));

        _this.mapModels = function (item, key) {
            var params = _this.props.params;

            var className = 'smallModel';
            Object.values(params).map(function (param) {
                if (param.replace(/modell=/, '') == item.id) {
                    className = className + ' current';
                    if (!_this.state.currentSlide || _this.state.currentSlide != key) {
                        _this.setState({ currentSlide: key });
                    }
                }
            });

            var isModel = Object.values(params).find(function (param) {
                return param.includes('modell=');
            });
            if (!isModel && _this.state.currentSlide) {
                _this.setState({ currentSlide: null });
            }
            var url = "/kaufen/";
            url = params.deviceCategory1 ? url + params.deviceCategory1 : url;
            url = params.deviceCategory2 ? url + '/' + params.deviceCategory2 : url;
            url = params.deviceCategory3 ? url + '/' + params.deviceCategory3 : url;
            url = params.deviceCategory4 ? url + '/' + params.deviceCategory4 : url;
            url = params.deviceCategory5 ? url + '/' + params.deviceCategory5 : url;
            url += "/filter/modell=" + item.id;
            return _react2.default.createElement(
                "span",
                { key: "model-menu-" + item.id },
                _react2.default.createElement(
                    _reactRouter.Link,
                    { to: url,
                        className: className },
                    item.deviceImages && _react2.default.createElement("img", { loading: "lazy", src: item.deviceImages.mainImg.src, className: "deviceIcon", alt: "" }),
                    _react2.default.createElement(
                        "span",
                        null,
                        item.name
                    )
                )
            );
        };

        _this.state = {
            currentSlide: null
        };
        return _this;
    }

    (0, _createClass3.default)(ModelMenuRowNew, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                models = _props.models,
                params = _props.params;

            models.sort(function (a, b) {
                return a.orderBy - b.orderBy;
            });
            var settings = {
                dots: false,
                arrows: true,
                infinite: false,
                speed: 300,
                slidesToShow: 7,
                slidesToScroll: 5,
                responsive: [{
                    breakpoint: 800,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 4
                    }
                }, {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 4,
                        slidesToScroll: 3
                    }
                }, {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 3
                    }
                }]
            };
            var maxcount = window.isMobile ? 3 : 5;
            return _react2.default.createElement(
                _react.Fragment,
                null,
                _react2.default.createElement(
                    "div",
                    { className: "clearfix container text-center subModels slideEffect bgChange" },
                    !window.isMobile && !!models.length && _react2.default.createElement(
                        _reactRouter.Link,
                        { className: "backButton", to: "/kaufen/" + params.deviceCategory1 + "/filter/" },
                        _react2.default.createElement("img", { loading: "lazy", src: "/images/icons/arrow-back.svg", alt: "" })
                    ),
                    !!models.length && models.length > maxcount && _react2.default.createElement(
                        _react.Fragment,
                        null,
                        _react2.default.createElement(
                            _reactSlick2.default,
                            (0, _extends3.default)({ ref: "sliderMod" }, settings),
                            models.map(this.mapModels)
                        )
                    ),
                    models.length <= maxcount && _react2.default.createElement(
                        "div",
                        null,
                        models.map(this.mapModels)
                    )
                )
            );
        }
    }]);
    return ModelMenuRowNew;
}(_react.PureComponent);

exports.default = ModelMenuRowNew;

/***/ }),

/***/ 1913:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

var _reactSlick = __webpack_require__(929);

var _reactSlick2 = _interopRequireDefault(_reactSlick);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ProductModelMenuRow = function (_PureComponent) {
    (0, _inherits3.default)(ProductModelMenuRow, _PureComponent);

    function ProductModelMenuRow(props) {
        (0, _classCallCheck3.default)(this, ProductModelMenuRow);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ProductModelMenuRow.__proto__ || Object.getPrototypeOf(ProductModelMenuRow)).call(this, props));

        _this.mapModels = function (item, key) {
            var params = _this.props.params;

            var className = 'smallModel';
            for (var _key in params) {
                if (params[_key].includes('kategorie-compatibility=')) {
                    var modelInfos = params[_key].split('=');
                    if (modelInfos.length > 1 && modelInfos[1] == item.id) {
                        className += ' current';
                    }
                }
            }
            var linkUrl = '';
            linkUrl = item.modelSubGroupId ? "/kaufen/" + params.deviceCategory1 + "/" + params.deviceCategory2 + "/filter/kategorie-compatibility-brand=" + item.modelGroupId + "/kategorie-compatibility-brand1=" + item.modelSubGroupId + "/kategorie-compatibility=" + item.id : "/kaufen/" + params.deviceCategory1 + "/" + params.deviceCategory2 + "/filter/kategorie-compatibility-brand=" + item.modelGroupId + "/kategorie-compatibility=" + item.id;
            return _react2.default.createElement(
                "span",
                { key: item.id },
                _react2.default.createElement(
                    _reactRouter.Link,
                    { to: linkUrl,
                        className: className },
                    item.image && _react2.default.createElement("img", { loading: "lazy", src: item.image, className: "deviceIcon", alt: "" }),
                    _react2.default.createElement(
                        "span",
                        null,
                        item.name
                    )
                )
            );
        };

        _this.state = {
            currentSlide: null
        };
        return _this;
    }

    (0, _createClass3.default)(ProductModelMenuRow, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                models = _props.models,
                params = _props.params;

            models.sort(function (a, b) {
                return a.orderBy - b.orderBy;
            });
            var settings = {
                dots: false,
                arrows: true,
                infinite: false,
                speed: 300,
                slidesToShow: 7,
                slidesToScroll: 5,
                responsive: [{
                    breakpoint: 800,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 4
                    }
                }, {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 4,
                        slidesToScroll: 3
                    }
                }, {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 2
                    }
                }]
            };
            var maxcount = window.isMobile ? 3 : 5;
            return _react2.default.createElement(
                _react.Fragment,
                null,
                _react2.default.createElement(
                    "div",
                    { className: "clearfix container text-center subModels" },
                    !!models.length && models.length > maxcount && _react2.default.createElement(
                        _react.Fragment,
                        null,
                        _react2.default.createElement(
                            _reactSlick2.default,
                            (0, _extends3.default)({ ref: "sliderMod" }, settings),
                            models.map(this.mapModels)
                        )
                    ),
                    models.length <= maxcount && _react2.default.createElement(
                        "div",
                        null,
                        models.map(this.mapModels)
                    )
                )
            );
        }
    }]);
    return ProductModelMenuRow;
}(_react.PureComponent);

exports.default = ProductModelMenuRow;

/***/ }),

/***/ 1914:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(206);

var _reactSlick = __webpack_require__(929);

var _reactSlick2 = _interopRequireDefault(_reactSlick);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ProductModelMenuRowNew = function (_PureComponent) {
    (0, _inherits3.default)(ProductModelMenuRowNew, _PureComponent);

    function ProductModelMenuRowNew(props) {
        (0, _classCallCheck3.default)(this, ProductModelMenuRowNew);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ProductModelMenuRowNew.__proto__ || Object.getPrototypeOf(ProductModelMenuRowNew)).call(this, props));

        _this.mapModels = function (item, key) {
            var params = _this.props.params;

            var className = 'smallModel';
            for (var _key in params) {
                if (params[_key].includes('kategorie-compatibility=')) {
                    var modelInfos = params[_key].split('=');
                    if (modelInfos.length > 1 && modelInfos[1] == item.id) {
                        className += ' current';
                    }
                }
            }
            var linkUrl = '';
            linkUrl = item.modelSubGroupId ? "/kaufen/" + params.deviceCategory1 + "/" + params.deviceCategory2 + "/filter/kategorie-compatibility-brand=" + item.modelGroupId + "/kategorie-compatibility-brand1=" + item.modelSubGroupId + "/kategorie-compatibility=" + item.id : "/kaufen/" + params.deviceCategory1 + "/" + params.deviceCategory2 + "/filter/kategorie-compatibility-brand=" + item.modelGroupId + "/kategorie-compatibility=" + item.id;
            return _react2.default.createElement(
                "span",
                { key: "product-menu-" + item.id },
                _react2.default.createElement(
                    _reactRouter.Link,
                    { to: linkUrl,
                        className: className },
                    item.image && _react2.default.createElement("img", { loading: "lazy", src: item.image, className: "deviceIcon", alt: "" }),
                    _react2.default.createElement(
                        "span",
                        null,
                        item.name
                    )
                )
            );
        };

        _this.state = {
            currentSlide: null
        };
        return _this;
    }

    (0, _createClass3.default)(ProductModelMenuRowNew, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                models = _props.models,
                params = _props.params;

            models.sort(function (a, b) {
                return a.orderBy - b.orderBy;
            });
            var settings = {
                dots: false,
                arrows: true,
                infinite: false,
                speed: 300,
                slidesToShow: 7,
                slidesToScroll: 5,
                responsive: [{
                    breakpoint: 800,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 4
                    }
                }, {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 4,
                        slidesToScroll: 3
                    }
                }, {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 5,
                        slidesToScroll: 3
                    }
                }]
            };
            var maxcount = window.isMobile ? 3 : 5;
            return _react2.default.createElement(
                _react.Fragment,
                null,
                _react2.default.createElement(
                    "div",
                    { className: "clearfix container text-center subModels slideEffect bgChange" },
                    !!models.length && models.length > maxcount && _react2.default.createElement(
                        _react.Fragment,
                        null,
                        _react2.default.createElement(
                            _reactSlick2.default,
                            (0, _extends3.default)({ ref: "sliderMod" }, settings),
                            models.map(this.mapModels)
                        )
                    ),
                    models.length <= maxcount && _react2.default.createElement(
                        "div",
                        null,
                        models.map(this.mapModels)
                    )
                )
            );
        }
    }]);
    return ProductModelMenuRowNew;
}(_react.PureComponent);

exports.default = ProductModelMenuRowNew;

/***/ }),

/***/ 1915:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactSelect = __webpack_require__(902);

var _reactSelect2 = _interopRequireDefault(_reactSelect);

var _searchBarKaufen = __webpack_require__(1229);

var _searchBarKaufen2 = _interopRequireDefault(_searchBarKaufen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TopFilter = function TopFilter(_ref) {
    var changeSortBy = _ref.changeSortBy,
        viewMode = _ref.viewMode,
        changeViewMode = _ref.changeViewMode,
        currentValue = _ref.currentValue,
        totalItems = _ref.totalItems,
        showSearchBar = _ref.showSearchBar,
        options = _ref.options,
        mapDuplicateFilter = _ref.mapDuplicateFilter;


    return _react2.default.createElement(
        'div',
        { className: 'row topFilter' },
        _react2.default.createElement(
            'div',
            { className: 'col-sm-12 sortBy' },
            mapDuplicateFilter,
            _react2.default.createElement('div', { className: 'flex-grow-1' }),
            _react2.default.createElement(
                'div',
                { className: 'text-center countProducts' },
                _react2.default.createElement(
                    'p',
                    null,
                    totalItems,
                    ' Artikel'
                )
            ),
            _react2.default.createElement(
                'span',
                null,
                'Sortieren nach'
            ),
            _react2.default.createElement(
                'div',
                { className: 'select' },
                _react2.default.createElement(_reactSelect2.default, {
                    options: options,
                    onChange: changeSortBy,
                    value: currentValue,
                    searchable: false,
                    clearable: false
                })
            )
        )
    );
};

TopFilter.propTypes = {};
TopFilter.defaultProps = {};

exports.default = TopFilter;

/***/ }),

/***/ 806:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ModelsInnerPage = undefined;

var _toConsumableArray2 = __webpack_require__(316);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = __webpack_require__(66);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(866);

var _typeof3 = _interopRequireDefault(_typeof2);

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _axios = __webpack_require__(149);

var _axios2 = _interopRequireDefault(_axios);

var _debounce2 = __webpack_require__(899);

var _debounce3 = _interopRequireDefault(_debounce2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _reactHelmet = __webpack_require__(1057);

var _reactPaginate = __webpack_require__(1245);

var _reactPaginate2 = _interopRequireDefault(_reactPaginate);

var _reactRedux = __webpack_require__(313);

var _reactRouter = __webpack_require__(206);

var _redux = __webpack_require__(148);

var _basket = __webpack_require__(327);

var basketActions = _interopRequireWildcard(_basket);

var _shop = __webpack_require__(873);

var shopActions = _interopRequireWildcard(_shop);

var _index = __webpack_require__(330);

var _index2 = _interopRequireDefault(_index);

var _addToBasketEffect = __webpack_require__(950);

var _addToBasketEffect2 = _interopRequireDefault(_addToBasketEffect);

var _addToWishlistEffect = __webpack_require__(1058);

var _addToWishlistEffect2 = _interopRequireDefault(_addToWishlistEffect);

var _banner = __webpack_require__(1249);

var _banner2 = _interopRequireDefault(_banner);

var _customerAboutUs = __webpack_require__(1250);

var _customerAboutUs2 = _interopRequireDefault(_customerAboutUs);

var _searchBarKaufen = __webpack_require__(1229);

var _searchBarKaufen2 = _interopRequireDefault(_searchBarKaufen);

var _asideFilter = __webpack_require__(1900);

var _asideFilter2 = _interopRequireDefault(_asideFilter);

var _modelsGrid = __webpack_require__(1902);

var _modelsGrid2 = _interopRequireDefault(_modelsGrid);

var _deviceModelsGrid = __webpack_require__(1903);

var _deviceModelsGrid2 = _interopRequireDefault(_deviceModelsGrid);

var _modelsList = __webpack_require__(1904);

var _modelsList2 = _interopRequireDefault(_modelsList);

var _quickViewPage = __webpack_require__(1514);

var _quickViewPage2 = _interopRequireDefault(_quickViewPage);

var _successAddToBasket = __webpack_require__(1283);

var _successAddToBasket2 = _interopRequireDefault(_successAddToBasket);

var _topDeviceMenu = __webpack_require__(1906);

var _topDeviceMenu2 = _interopRequireDefault(_topDeviceMenu);

var _topFilter = __webpack_require__(1915);

var _topFilter2 = _interopRequireDefault(_topFilter);

var _reactSelect = __webpack_require__(902);

var _reactSelect2 = _interopRequireDefault(_reactSelect);

var _seoText = __webpack_require__(1079);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModelsInnerPage = exports.ModelsInnerPage = function (_Component) {
    (0, _inherits3.default)(ModelsInnerPage, _Component);

    function ModelsInnerPage(props) {
        (0, _classCallCheck3.default)(this, ModelsInnerPage);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ModelsInnerPage.__proto__ || Object.getPrototypeOf(ModelsInnerPage)).call(this, props));

        _this.mapDuplicateFilter = function () {
            var path = _this.props.location.pathname;

            var searchParamsArr = path.split('/').filter(function (x) {
                return x;
            });
            var _this$state = _this.state,
                selectedFilterOptions = _this$state.selectedFilterOptions,
                mainModelGroupId = _this$state.mainModelGroupId;
            var params = _this.props.params;

            var filtered = void 0;

            searchParamsArr.forEach(function (el, index) {
                if (el === 'filter') {
                    searchParamsArr.length = index + 1;
                    searchParamsArr = searchParamsArr.join('/');
                }
            });

            Object.keys(params).forEach(function (key) {
                if (typeof params[key] === 'undefined') {
                    delete params[key];
                }
            });

            var filteredParams = Object.values(params);
            for (var elem in filteredParams) {
                if (filteredParams[elem].split('=').length === 1 || filteredParams[elem].split('=')[1] === 'alle') {
                    delete filteredParams[elem];
                    filtered = filteredParams.filter(function (e) {
                        return e;
                    });
                }
            }

            if (filtered && selectedFilterOptions) {
                return _react2.default.createElement(
                    'div',
                    null,
                    filtered.length > 3 ? _react2.default.createElement(
                        'div',
                        { className: 'duplicate-header' },
                        _react2.default.createElement(
                            'span',
                            { className: 'duplicate-header__title' },
                            'Filteroptionen'
                        ),
                        _react2.default.createElement(
                            _reactRouter.Link,
                            { to: '/' + searchParamsArr, className: 'duplicate-header__link' },
                            'Alle Filter entfernen'
                        )
                    ) : null,
                    filtered.map(function (el, i) {
                        var searchKey = el.split('=')[0];
                        var searchValue = el.split('=')[1];
                        var checkedValues = [];

                        if (selectedFilterOptions[searchKey] && selectedFilterOptions[searchKey].name) {
                            selectedFilterOptions[searchKey].values.forEach(function (el) {
                                searchValue.split(',').forEach(function (el2) {
                                    if (+el2 === +el.id) {
                                        checkedValues.push(el);
                                    }
                                });
                            });
                        }

                        var hasName = selectedFilterOptions[searchKey] && selectedFilterOptions[searchKey].name;
                        var hasValues = selectedFilterOptions[searchKey] && selectedFilterOptions[searchKey].values;
                        if (!hasName && !hasValues) return null;
                        return _react2.default.createElement(
                            'span',
                            { className: 'duplicate-filter', key: i },
                            hasName ? _react2.default.createElement(
                                'span',
                                { className: 'duplicate-filter__key' },
                                _react2.default.createElement('img', { loading: 'lazy',
                                    src: '/images/design/aside_filter_category_icons/' + mainModelGroupId + '/' + mainModelGroupId + '-' + searchKey + '.svg',
                                    onError: function onError(e) {
                                        e.target.src = '/images/design/aside_filter_category_icons/default-icon.svg';
                                    } }),
                                selectedFilterOptions[searchKey].name,
                                ':'
                            ) : null,
                            hasValues ? _react2.default.createElement(
                                'span',
                                { className: 'duplicate-filter__values' },
                                checkedValues.map(function (item, i2) {
                                    return _react2.default.createElement(
                                        'span',
                                        { key: i2 },
                                        item.name,
                                        _react2.default.createElement('i', { 'data-target-key': searchKey,
                                            'data-target-id': item.id,
                                            onClick: function onClick(e) {
                                                return _this.goTo(e);
                                            },
                                            className: 'fa fa-times',
                                            style: { fontSize: '12px', paddingLeft: '10px' },
                                            'aria-hidden': 'true' })
                                    );
                                })
                            ) : null
                        );
                    })
                );
            }
        };

        _this.goTo = function (e) {
            var path = _this.props.location.pathname;

            var searchParamsArr = path.split('/').filter(function (x) {
                return x;
            });
            var targetParam = e.target.dataset.targetId;
            var targetKey = e.target.dataset.targetKey;

            var searchParams = void 0;
            var searchKey = void 0;
            var replasedParam = void 0;
            var filteredOption = void 0;

            for (var i = 0; i < searchParamsArr.length; i++) {
                searchKey = searchParamsArr[i].split('=')[0];
                searchParams = searchParamsArr[i].split('=')[1];

                if (searchParamsArr[i].substr(0, targetKey.length) === targetKey) {
                    searchParamsArr.splice(i, 1);

                    if (searchKey === targetKey) {
                        replasedParam = searchParams.split(',').filter(function (elem) {
                            return elem !== targetParam && elem !== ',';
                        });

                        if (replasedParam === 'alle' || replasedParam.length === 0) {
                            filteredOption = searchKey + '=alle';
                        } else filteredOption = searchKey + '=' + replasedParam.join(',');

                        searchParamsArr.push(filteredOption);
                        searchParamsArr = searchParamsArr.join('/');
                        _reactRouter.browserHistory.push('/' + searchParamsArr);
                    }
                }
            }
        };

        _this.mapSelectedCriteria = function (all, selected) {
            var filtered = [];
            var newAll = [];
            var diff = new Set();

            for (var item in selected) {
                for (var item2 in all) {

                    if ((0, _typeof3.default)(all[item2]) === 'object') newAll.push(all[item2]);

                    newAll = newAll.filter(function (property) {
                        return typeof property.name !== "undefined";
                    });
                }

                if ((0, _typeof3.default)(selected[item]) === 'object') filtered.push(selected[item]);
                filtered = filtered.filter(function (property) {
                    return typeof property.name !== "undefined";
                });
            }
        };

        _this.state = {
            pagination: {
                activePage: 0,
                totalItemsCount: 0,
                pageCount: 0
            },
            options: _this.props.params.deviceCategory1 === 'zubehör' ? [{ label: "Nach Beliebtheit", value: 'popular' }, { label: "Günstige Preise zuerst anzeigen", value: 'niedrighoch' }, { label: "Hohe Preise zuerst anzeigen", value: 'hochniedrig' }, { label: "Nach Einstelldatum sortieren", value: 'neu' }] : [{ label: "Beliebteste Produkte", value: 'popular' }, { label: "Günstige Preise zuerst anzeigen", value: 'niedrighoch' }, { label: "Hohe Preise zuerst anzeigen", value: 'hochniedrig' }, { label: "Nach Einstelldatum sortieren", value: 'neu' }],
            selectedFilterOptions: {
                page: 1,
                price: {
                    min: 0,
                    max: 1,
                    maxSearch: 0,
                    minSearch: 0
                },
                lagerort: { values: [] },
                modell: { values: [] },
                zustand: { values: [] },
                sort: _this.props.params.deviceCategory1 === 'zubehör' ? 'popular' : 'popular'
            },
            availableFilterOptions: {
                lagerort: { values: [] },
                modell: { values: [] },
                zustand: { values: [] }
            },
            mainModelGroupId: null,
            modelCategoryId: 0,
            viewMode: _this.props.params.deviceCategory1 !== 'zubehör' ? 'List' : 'Group',
            totalCountModels: 0,
            addBasketEffect: null,
            quickViewPage: null,
            capacityName: null,
            infoNoModels: false,
            showSidebar: false,
            seoData: null,
            successAddToBasket: null,
            recommendProducts: null,
            seoAccessoriesData: null,
            productModels: [],
            inputPriceMin: 0,
            inputPriceMax: 0,
            inputPriceErr: {
                min: false,
                max: false
            }
        };

        _this.changeViewMode = _this.changeViewMode.bind(_this);
        _this.changePrice = _this.changePrice.bind(_this);
        _this.changeInputPrice = _this.changeInputPrice.bind(_this);
        _this.applyInputPrice = _this.applyInputPrice.bind(_this);
        _this.changeSortBy = _this.changeSortBy.bind(_this);
        _this.handlePageChange = _this.handlePageChange.bind(_this);
        _this.handleClickItemGroup = _this.handleClickItemGroup.bind(_this);
        _this.handleChooseFilterItemMobile = _this.handleChooseFilterItemMobile.bind(_this);
        _this.handleApplyFiltersMobile = _this.handleApplyFiltersMobile.bind(_this);
        _this.addModelToBasket = _this.addModelToBasket.bind(_this);
        _this.addModelToWishlist = _this.addModelToWishlist.bind(_this);
        _this.openQuickView = _this.openQuickView.bind(_this);
        _this.closeQuickView = _this.closeQuickView.bind(_this);
        _this._parseUrl = _this._parseUrl.bind(_this);
        _this._getBrowserUrl = _this._getBrowserUrl.bind(_this);
        _this._getObjForRequest = _this._getObjForRequest.bind(_this);
        _this._getObjForRequestByCategoryId = _this._getObjForRequestByCategoryId.bind(_this);

        _this._setSelectedFilterOption = _this._setSelectedFilterOption.bind(_this);
        _this._parseDevicesForUrl = _this._parseDevicesForUrl.bind(_this);
        _this._getModelsData = _this._getModelsData.bind(_this);
        _this._getModelsDataByCategoryId = _this._getModelsDataByCategoryId.bind(_this);
        _this._getAccessoriesData = _this._getAccessoriesData.bind(_this);
        _this._getSeoData = _this._getSeoData.bind(_this);
        _this.openSuccessAddToBasket = _this.openSuccessAddToBasket.bind(_this);
        _this.closeSuccessAddToBasket = _this.closeSuccessAddToBasket.bind(_this);
        _this.showFilters = _this.showFilters.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(ModelsInnerPage, [{
        key: '_getAccessoriesData',
        value: function _getAccessoriesData(params) {
            var _this2 = this;

            var deviceName = null,
                ifNoCriterias = false;
            /*find device name*/
            for (var key in params) {
                if (key.includes('deviceCategory') && params[key]) deviceName = params[key].replace(/-/g, ' ');
            }
            var selectedFilterOptions = this._parseUrl(params);
            var objForRequest = this._getObjForRequest(selectedFilterOptions, selectedFilterOptions.page, deviceName);
            document.getElementById('spinner-box-load').style.display = 'block';
            this.setState({ infoNoModels: false });
            _index2.default.getModels('/api/getShopCategoryProducts', objForRequest).then(function (_ref) {
                var data = _ref.data;

                document.getElementById('spinner-box-load').style.display = 'none';
                _this2.setState({ viewMode: 'Group' });
                var filterOptions = {};
                var availableFilterOptions = {};

                selectedFilterOptions = _this2._setSelectedFilterOption(selectedFilterOptions, data);
                data.meta.criteriasList.forEach(function (item) {
                    if (!filterOptions['kategorie-' + item.id]) filterOptions['kategorie-' + item.id] = (0, _extends3.default)({}, item);
                    if (!availableFilterOptions['kategorie-' + item.id]) availableFilterOptions['kategorie-' + item.id] = (0, _extends3.default)({}, item);
                    if (!selectedFilterOptions['kategorie-' + item.id]) {
                        selectedFilterOptions['kategorie-' + item.id] = []; //if no such criteria, then add to object SelectedFilterOptions
                        if (selectedFilterOptions['kategorie-' + item.id].length === 0) selectedFilterOptions['kategorie-' + item.id] = item;
                    }
                });
                var pagination = data.meta.pagination;
                var capacityName = data.meta.capacityName;

                selectedFilterOptions.price.max = data.meta.maxPrice;
                selectedFilterOptions.price.min = data.meta.minPrice;
                if (selectedFilterOptions.price.maxSearch === 0) selectedFilterOptions.price.maxSearch = data.meta.maxPrice;
                if (selectedFilterOptions.price.minSearch === 0) selectedFilterOptions.price.minSearch = data.meta.minPrice;

                _this2.props.shopActions.setFilterOptions(filterOptions);
                _this2.props.shopActions.loadModels(data.data, data.meta.categoriesList);
                var count = Math.ceil(pagination.total / pagination.per_page);
                selectedFilterOptions.page = count > selectedFilterOptions.page ? selectedFilterOptions.page : count;
                _this2.setState({
                    pagination: (0, _extends3.default)({}, _this2.state.pagination, {
                        activePage: selectedFilterOptions.page - 1,
                        totalItemsCount: pagination.total,
                        pageCount: count
                    }),
                    totalCountModels: data.meta.totalCount,
                    selectedFilterOptions: selectedFilterOptions,
                    availableFilterOptions: availableFilterOptions,
                    capacityName: capacityName,
                    infoNoModels: !ifNoCriterias && data.data.length === 0,
                    showSidebar: data.meta.minPrice !== null,
                    seoAccessoriesData: (0, _extends3.default)({}, _this2.state.seoAccessoriesData, {
                        html_description: data.meta.html_description,
                        meta_description: data.meta.meta_description,
                        meta_keywords: data.meta.meta_keywords,
                        title: data.meta.title
                    })
                });
                if (window.isGoogleConnection) _this2.gtagEnhancedEcommerce();
                document.getElementById('devicesListSmall').scrollIntoView();
            }).catch(function () {
                document.getElementById('spinner-box-load').style.display = 'none';
                if (window.isGoogleConnection === true) {
                    _this2.props.shopActions.setFilterOptions({
                        lagerort: { values: [] },
                        modell: { values: [] },
                        zustand: { values: [] }
                    });
                    _this2.props.shopActions.loadModels([], []);
                    _this2.setState({ infoNoModels: true });
                    _this2.setState({ seoAccessoriesData: null });
                }
            });
        }
    }, {
        key: '_getModelsDataByCategoryId',
        value: function _getModelsDataByCategoryId(params) {
            var modelCategoryId = 0;
            for (var key in params) {
                if (key.includes('param1') && params[key]) {
                    modelCategoryId = params[key].split('=')[1];
                }
            }
            if (modelCategoryId != 0) {
                var selectedFilterOptions = this._parseUrl(params);
                var objForRequest = this._getObjForRequestByCategoryId(selectedFilterOptions, selectedFilterOptions.page, modelCategoryId);
                document.getElementById('spinner-box-load').style.display = 'block';
                this.setState({
                    infoNoModels: false,
                    objForRequest: objForRequest
                });

                this.setState({
                    modelCategoryId: modelCategoryId
                });

                // api.getModels(`/api/modelsByCategoryId`, objForRequest)
                //     .then(({data}) => {
                //         document.getElementById('spinner-box-load').style.display = 'none'
                //         this.setState({
                //             productModels: data.meta.namesList.values
                //         });

                //     })
                //     .catch(() => {
                //         document.getElementById('spinner-box-load').style.display = 'none'
                //         this.setState({
                //             productModels: []
                //         });
                //     })
            }
        }
    }, {
        key: '_getModelsData',
        value: function _getModelsData(params) {
            var _this3 = this;

            var deviceName = null,
                ifNoCriterias = false;
            /*find device name*/
            for (var key in params) {
                if (key.includes('deviceCategory') && params[key]) deviceName = params[key].replace(/-/g, ' ');
            }

            var selectedFilterOptions = this._parseUrl(params);
            var objForRequest = this._getObjForRequest(selectedFilterOptions, selectedFilterOptions.page, deviceName);
            document.getElementById('spinner-box-load').style.display = 'block';
            this.setState({
                infoNoModels: false,
                objForRequest: objForRequest
            });

            _index2.default.getModels('/api/models', objForRequest).then(function (_ref2) {
                var data = _ref2.data;

                document.getElementById('spinner-box-load').style.display = 'none';

                var filterOptions = {
                    lagerort: data.meta.placesList,
                    modell: data.meta.namesList,
                    zustand: data.meta.conditionsList
                };

                var availableFilterOptions = {
                    lagerort: data.meta.placesList,
                    modell: data.meta.namesList,
                    zustand: data.meta.conditionsList
                };

                selectedFilterOptions = _this3._setSelectedFilterOption(selectedFilterOptions, data);

                data.meta.criteriasList.forEach(function (item) {
                    if (!filterOptions['kategorie-' + item.id]) filterOptions['kategorie-' + item.id] = (0, _extends3.default)({}, item);
                    if (!availableFilterOptions['kategorie-' + item.id]) availableFilterOptions['kategorie-' + item.id] = (0, _extends3.default)({}, item);
                    if (!selectedFilterOptions['kategorie-' + item.id]) {
                        selectedFilterOptions['kategorie-' + item.id] = []; //if no such criteria, then add to object SelectedFilterOptions
                        if (selectedFilterOptions['kategorie-' + item.id].length === 0) selectedFilterOptions['kategorie-' + item.id] = item;
                    }
                });

                data.meta.specificationsList.forEach(function (item) {
                    if (!filterOptions['spezifikation-' + item.id]) filterOptions['spezifikation-' + item.id] = (0, _extends3.default)({}, item);
                    if (!availableFilterOptions['spezifikation-' + item.id]) availableFilterOptions['spezifikation-' + item.id] = (0, _extends3.default)({}, item);
                    if (!selectedFilterOptions['spezifikation-' + item.id]) {
                        selectedFilterOptions['spezifikation-' + item.id] = []; //if no such criteria, then add to object SelectedFilterOptions
                        if (selectedFilterOptions['spezifikation-' + item.id].length === 0) selectedFilterOptions['spezifikation-' + item.id] = item;
                    }
                });

                if (data.meta.warrantiesList.values.length > 0) {
                    filterOptions.garantie = data.meta.warrantiesList;
                    availableFilterOptions.garantie = data.meta.warrantiesList;
                    if (!selectedFilterOptions.garantie) selectedFilterOptions.garantie = (0, _extends3.default)({}, data.meta.warrantiesList);
                }

                var pagination = data.meta.pagination;
                var capacityName = data.meta.capacityName;

                if (selectedFilterOptions.lagerort.length === 0) selectedFilterOptions.lagerort = data.meta.placesList;
                if (selectedFilterOptions.modell.length === 0) selectedFilterOptions.modell = data.meta.namesList;
                if (selectedFilterOptions.zustand.length === 0) selectedFilterOptions.zustand = data.meta.conditionsList;
                if (data.meta.warrantiesList.values.length > 0 && selectedFilterOptions.garantie && selectedFilterOptions.garantie.length === 0) {
                    selectedFilterOptions.garantie = data.meta.warrantiesList;
                }
                selectedFilterOptions.price.max = data.meta.maxPrice;
                selectedFilterOptions.price.min = data.meta.minPrice;
                if (selectedFilterOptions.price.maxSearch === 0) selectedFilterOptions.price.maxSearch = data.meta.maxPrice;
                if (selectedFilterOptions.price.minSearch === 0) selectedFilterOptions.price.minSearch = data.meta.minPrice;
                _this3.props.shopActions.setFilterOptions(filterOptions);
                _this3.props.shopActions.loadModels(data.data, data.meta.categoriesList);
                var count = Math.ceil(pagination.total / pagination.per_page);
                selectedFilterOptions.page = count > selectedFilterOptions.page ? selectedFilterOptions.page : count;
                _this3.setState({
                    mainModelGroupId: data.meta.mainModelGroupId,
                    pagination: (0, _extends3.default)({}, _this3.state.pagination, {
                        activePage: selectedFilterOptions.page - 1,
                        totalItemsCount: pagination.total,
                        pageCount: count
                    }),
                    totalCountModels: data.meta.totalCount,
                    selectedFilterOptions: selectedFilterOptions,
                    availableFilterOptions: availableFilterOptions,
                    capacityName: capacityName,
                    infoNoModels: !ifNoCriterias && data.data.length === 0,
                    showSidebar: data.meta.namesList.values.length > 0,
                    viewMode: 'List'
                });
                if (window.isGoogleConnection) _this3.gtagEnhancedEcommerce();
                // document.getElementById('devicesListSmall').scrollIntoView(); function that scroll to devicesListSmall id on page
            }).catch(function () {
                document.getElementById('spinner-box-load').style.display = 'none';
                if (window.isGoogleConnection === true) {
                    _this3.props.shopActions.setFilterOptions({
                        lagerort: { values: [] },
                        modell: { values: [] },
                        zustand: { values: [] }
                    });
                    _this3.props.shopActions.loadModels([], []);
                    _this3.setState({ infoNoModels: true });
                }
            });
        }
    }, {
        key: '_getSeoData',
        value: function _getSeoData(params) {
            var _this4 = this;

            var deviceName = null;
            /*find device name*/
            for (var key in params) {
                if (key.includes('deviceCategory') && params[key]) deviceName = params[key].replace(/-/g, ' ');
            }

            _axios2.default.get('/api/deviceGroupMetaData?modelGroup=' + deviceName + '&pageType=buy').then(function (_ref3) {
                var data = _ref3.data;

                if (data[0]) {
                    if (data[0].footer) $('.footerBottom p.seo').html(data[0].footer);else $('.footerBottom p.seo').empty();
                    _this4.setState({
                        seoData: {
                            description: data[0].description,
                            title: data[0].title,
                            keywords: data[0].keywords
                        }
                    });
                } else {
                    $('.footerBottom p.seo').empty();
                    _this4.setState({ seoData: null });
                }
                (0, _seoText.seoTextAdjustHeight)();
            }).catch(function () {
                document.getElementById('spinner-box-load').style.display = 'none';
                $('.footerBottom p.seo').empty();
                _this4.setState({ seoData: null });
                (0, _seoText.seoTextAdjustHeight)();
            });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.props.shopActions.setFilterOptions({ lagerort: { values: [] }, modell: { values: [] }, zustand: { values: [] } });
            this.props.shopActions.loadModels([], []);

            //save checked filters
            var categoriesParams = [];

            for (var key in this.props.params) {
                if (key.includes('deviceCategory') && this.props.params[key]) categoriesParams.push(this.props.params[key]);
            }

            var obj = {
                values: this.state.selectedFilterOptions,
                availableFilterOptions: this.state.availableFilterOptions,
                categoriesParams: categoriesParams
            };
            window.localStorage.setItem('selectedFilterOptions', JSON.stringify(obj));
            $('.footerBottom p.seo').empty();
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.inputPriceCallback = (0, _debounce3.default)(function () {
                var selectedFilterOptions = this.state.selectedFilterOptions;

                _reactRouter.browserHistory.push('/kaufen/' + this._getBrowserUrl(selectedFilterOptions));
            }, 1000);
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.props.shopActions.loadDevices('/api/devices');
            if (this.props.params.deviceCategory1) {
                if (this.props.params.deviceCategory1 === 'zubehör') {
                    this._getAccessoriesData(this.props.params);
                    this._getModelsDataByCategoryId(this.props.params);
                } else {
                    this._getSeoData(this.props.params);
                    this._getModelsData(this.props.params);
                }
            } else if (window.localStorage.getItem('selectedFilterOptions')) {
                var obj = JSON.parse(window.localStorage.getItem('selectedFilterOptions'));
                if (page = obj.values.page) {
                    this.setState({
                        pagination: (0, _extends3.default)({}, this.state.pagination, {
                            activePage: page - 1
                        })
                    });
                }
                _reactRouter.browserHistory.push('/kaufen/' + obj.categoriesParams.join('/') + '/' + this._getBrowserUrl(obj.values, obj.availableFilterOptions));
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps, nextState) {

            if (nextProps.devices !== this.props.devices && nextProps.devices.length > 0) {
                if (!this.props.params.deviceCategory1) {
                    var devices = nextProps.devices;

                    this._parseDevicesForUrl(devices);
                }
            }
            if (nextProps.params && nextProps.params !== this.props.params && nextProps.params.deviceCategory1) {
                var selectedFilterOptions = this.state.selectedFilterOptions;
                if (nextProps.params.deviceCategory1 === 'zubehör') {
                    this._getAccessoriesData(nextProps.params);
                    this._getModelsDataByCategoryId(nextProps.params);
                    selectedFilterOptions.sort = 'popular';
                    this.setState({
                        options: [{ label: "Nach Beliebtheit", value: 'popular' }, { label: "Günstige Preise zuerst anzeigen", value: 'niedrighoch' }, { label: "Hohe Preise zuerst anzeigen", value: 'hochniedrig' }, { label: "Nach Einstelldatum sortieren", value: 'neu' }],
                        selectedFilterOptions: selectedFilterOptions
                    });
                } else {
                    this._getSeoData(nextProps.params);
                    this._getModelsData(nextProps.params);
                    selectedFilterOptions.sort = 'popular';
                    this.setState({
                        options: [{ label: "Nach Beliebtheit", value: 'popular' }, { label: "Günstige Preise zuerst anzeigen", value: 'niedrighoch' }, { label: "Hohe Preise zuerst anzeigen", value: 'hochniedrig' }, { label: "Nach Einstelldatum sortieren", value: 'neu' }],
                        selectedFilterOptions: selectedFilterOptions
                    });
                }
            }
            if (nextState.selectedFilterOptions !== this.state.selectedFilterOptions || nextState.availableFilterOptions !== this.state.availableFilterOptions) {
                this.mapSelectedCriteria(nextProps.availableFilterOptions, this.state.selectedFilterOptions);
            }
        }
    }, {
        key: '_parseDevicesForUrl',
        value: function _parseDevicesForUrl(devices) {
            var defaultDevice = devices.filter(function (item) {
                return item.id === 23;
            }),
                defaultBrand = [],
                otherCategories = [];
            if (defaultDevice.length > 0) {
                defaultBrand = defaultDevice[0].submodels.filter(function (item) {
                    return item.id === 2;
                });
                otherCategories.push(defaultBrand[0].name.replace(/ /g, '-').toLowerCase());
            }
            if (defaultDevice.length === 0) {
                defaultDevice = [devices[0]];
                mapSubmodels(defaultDevice[0].submodels);
            }
            var strOtherCategories = otherCategories.join('/');
            _reactRouter.browserHistory.push('/kaufen/' + defaultDevice[0].name.toLowerCase() + '/' + strOtherCategories + '/filter');

            function mapSubmodels(submodels) {
                otherCategories.push(submodels[0].name.replace(/ /g, '-').toLowerCase());
                if (submodels[0].submodels) mapSubmodels(submodels[0].submodels);
            }
        }
    }, {
        key: '_setSelectedFilterOption',
        value: function _setSelectedFilterOption(selectedFilterOptions, data) {
            var _loop = function _loop(key) {
                if (key === 'modell' && data.meta.namesList || key === 'garantie' && data.meta.conditionsList || key === 'zustand' && data.meta.warrantiesList || key === 'lagerort' && data.meta.placesList) {
                    var arrayList = '',
                        tmpArr = selectedFilterOptions[key];

                    if (key === 'modell') arrayList = 'namesList';else if (key === 'lagerort') arrayList = 'placesList';else if (key === 'zustand') arrayList = 'conditionsList';else if (key === 'garantie') arrayList = 'warrantiesList';

                    if (selectedFilterOptions[key][0] === 'alle') {
                        selectedFilterOptions[key] = (0, _extends3.default)({}, data.meta[arrayList]);
                    } else if (selectedFilterOptions[key].length > 0) {
                        selectedFilterOptions[key] = (0, _extends3.default)({}, data.meta[arrayList]);
                        selectedFilterOptions[key].values = selectedFilterOptions[key].values.filter(function (element) {
                            return tmpArr.some(function (itemId) {
                                return +itemId === element.id;
                            });
                        });
                    } else selectedFilterOptions[key] = (0, _extends3.default)({}, data.meta[arrayList]);
                } else {
                    var idOfKey = key.slice(key.lastIndexOf('-') + 1);
                    if (key.includes('kategorie') || key.includes('spezifikation')) {
                        var _arrayList = key.includes('kategorie') ? 'criteriasList' : 'specificationsList',
                            filterTypePrefix = key.includes('kategorie') ? 'kategorie-' : 'spezifikation-';
                        if (data.meta[_arrayList].some(function (item) {
                            return item.id == idOfKey;
                        })) {
                            data.meta[_arrayList].forEach(function (item) {
                                if (item.id == idOfKey) {
                                    if (selectedFilterOptions[key][0] === 'alle') {
                                        selectedFilterOptions[filterTypePrefix + item.id] = (0, _extends3.default)({}, item);
                                    } else {
                                        var tmpIds = selectedFilterOptions[key];
                                        selectedFilterOptions[filterTypePrefix + item.id] = (0, _extends3.default)({}, item);
                                        selectedFilterOptions[filterTypePrefix + item.id].values = selectedFilterOptions[filterTypePrefix + item.id].values.filter(function (element) {
                                            return tmpIds.some(function (itemId) {
                                                return +itemId === element.id;
                                            });
                                        });
                                    }
                                }
                            });
                        } else if (key !== 'price' && key !== 'sort' && key !== 'page') delete selectedFilterOptions[key];
                    } else if (key !== 'price' && key !== 'sort' && key !== 'page') delete selectedFilterOptions[key];
                }
            };

            for (var key in selectedFilterOptions) {
                _loop(key);
            }

            return selectedFilterOptions;
        }
    }, {
        key: '_getObjForRequest',
        value: function _getObjForRequest(selectedFilterOptions, page, deviceName) {
            var objForRequest = (0, _extends3.default)({}, selectedFilterOptions);
            console.log(selectedFilterOptions);
            for (var key in objForRequest) {
                if (key !== 'price' && key !== 'sort' && key !== 'page') {
                    objForRequest[key] = [].concat((0, _toConsumableArray3.default)(selectedFilterOptions[key]));
                    console.log([].concat((0, _toConsumableArray3.default)(selectedFilterOptions[key])));
                }
            }

            objForRequest['criterias'] = {};
            objForRequest['specifications'] = {};
            objForRequest['deviceName'] = deviceName;
            objForRequest['page'] = page;
            var arrKeys = ['lagerort', 'modell', 'deviceName', 'page', 'price', 'zustand', 'garantie', 'sort', 'page', 'criterias', 'specifications'];

            var _loop2 = function _loop2(_key) {
                if (arrKeys.every(function (item) {
                    return item !== _key;
                })) {
                    var name = _key.slice(_key.lastIndexOf('-') + 1),
                        currentFilterName = _key.slice(0, _key.lastIndexOf('-')),
                        filterType = currentFilterName === 'kategorie' ? 'criterias' : 'specifications';

                    objForRequest[filterType][name] = [].concat((0, _toConsumableArray3.default)(objForRequest[_key]));
                    delete objForRequest[_key];
                }
            };

            for (var _key in objForRequest) {
                _loop2(_key);
            }
            console.log(objForRequest);
            return objForRequest;
        }
    }, {
        key: '_getObjForRequestByCategoryId',
        value: function _getObjForRequestByCategoryId(selectedFilterOptions, page, modelCategoryId) {
            var objForRequest = (0, _extends3.default)({}, selectedFilterOptions);

            for (var key in objForRequest) {
                if (key !== 'price' && key !== 'sort' && key !== 'page') objForRequest[key] = [].concat((0, _toConsumableArray3.default)(selectedFilterOptions[key]));
            }

            objForRequest['criterias'] = {};
            objForRequest['specifications'] = {};
            objForRequest['page'] = page;
            objForRequest['modelCategoryId'] = parseInt(modelCategoryId);
            objForRequest['sort'] = 'popular';
            var arrKeys = ['lagerort', 'modell', 'deviceName', 'modelCategoryId', 'page', 'price', 'zustand', 'garantie', 'sort', 'page', 'criterias'];

            var _loop3 = function _loop3(_key2) {
                if (arrKeys.every(function (item) {
                    return item !== _key2;
                })) {
                    var name = _key2.slice(_key2.lastIndexOf('-') + 1),
                        currentFilterName = _key2.slice(0, _key2.lastIndexOf('-')),
                        filterType = currentFilterName === 'kategorie' ? 'criterias' : 'specifications';

                    objForRequest[filterType][name] = [].concat((0, _toConsumableArray3.default)(objForRequest[_key2]));
                    delete objForRequest[_key2];
                }
            };

            for (var _key2 in objForRequest) {
                _loop3(_key2);
            }
            return objForRequest;
        }
    }, {
        key: '_getBrowserUrl',
        value: function _getBrowserUrl(selectedFilterOptions) {
            var availableFilterOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.availableFilterOptions;
            var s = '',
                params = this.props.params;

            for (var key in params) {
                if (key.includes('deviceCategory') && params[key]) s += params[key] + '/';
            }
            s += 'filter/';

            for (var _key3 in params) {
                if (_key3.includes('param') && params[_key3] && params[_key3].includes('kategorie-compatibility-brand')) s += params[_key3] + '/';
            }

            var _loop4 = function _loop4(_key4) {
                if (_key4 === 'price') {
                    if (selectedFilterOptions[_key4].minSearch > 0 || selectedFilterOptions[_key4].maxSearch < selectedFilterOptions[_key4].max) {
                        s += 'preis=' + selectedFilterOptions[_key4].minSearch + '-' + selectedFilterOptions[_key4].maxSearch + '/';
                    }
                } else if (_key4 === 'sort' || _key4 === 'page') {
                    s += _key4 + '=' + selectedFilterOptions[_key4] + '/';
                } else {
                    var categoryName = _key4;

                    if (selectedFilterOptions[_key4].values.length === availableFilterOptions[_key4].values.length) {
                        s += categoryName + '=alle/';
                    } else if (selectedFilterOptions[_key4].values.length > 0) {
                        selectedFilterOptions[_key4].values.forEach(function (item, i) {
                            if (i === 0) {
                                if (selectedFilterOptions[_key4].values.length === 1) {
                                    s += categoryName + '=' + (item.id || 'alle') + '/';
                                } else s += categoryName + '=' + item.id;
                            } else if (i === selectedFilterOptions[_key4].values.length - 1) {
                                s += ',' + item.id + '/';
                            } else s += ',' + item.id;
                        });
                    }
                }
            };

            for (var _key4 in selectedFilterOptions) {
                _loop4(_key4);
            }
            return s;
        }
    }, {
        key: '_parseUrl',
        value: function _parseUrl(nextPropsParams) {
            var urlParams = nextPropsParams,
                selectedFilterOptions = {
                page: 1,
                price: {
                    min: 0,
                    max: 1,
                    maxSearch: 0,
                    minSearch: 0
                },
                lagerort: { values: [] },
                modell: { values: [] },
                zustand: { values: [] },
                sort: nextPropsParams.deviceCategory1 === 'zubehör' ? 'popular' : 'popular'

            },
                storageLocationData = JSON.parse(window.localStorage.getItem("locationData")),
                currentLocationData = {};
            this.props.places ? currentLocationData = this.props.places : storageLocationData ? storageLocationData.data.forEach(function (item) {
                if (item.active === true) {
                    currentLocationData = item;
                }
            }) : currentLocationData = null;
            for (var key in urlParams) {
                if (key.includes('param') && urlParams[key]) {
                    (function () {
                        var name = urlParams[key].slice(0, urlParams[key].indexOf('=')),
                            paramsArr = [];

                        if (name === "preis") {
                            paramsArr = urlParams[key].slice(urlParams[key].indexOf('=') + 1).split('-');
                            selectedFilterOptions.price.minSearch = paramsArr[0];
                            selectedFilterOptions.price.maxSearch = paramsArr[1];
                        } else if (name === "sort" || name === "page") {
                            paramsArr = urlParams[key].slice(urlParams[key].indexOf('=') + 1);
                            selectedFilterOptions[name] = paramsArr;
                        } else {
                            paramsArr = urlParams[key].slice(urlParams[key].indexOf('=') + 1).split(',');
                            paramsArr.forEach(function (item, i) {
                                return paramsArr[i] = item.replace(/-/g, ' ').replace(/\|/g, '/');
                            });
                            selectedFilterOptions[name] = paramsArr;
                        }
                    })();
                }
            }

            /*!selectedFilterOptions.lagerort ?
                !currentLocationData ?
                selectedFilterOptions.lagerort = {values: []}
                    :
                selectedFilterOptions.lagerort = [currentLocationData.id]
                    :
                 selectedFilterOptions.lagerort = selectedFilterOptions.lagerort*/

            return selectedFilterOptions;
        }
    }, {
        key: 'handleChooseFilterItemMobile',
        value: function handleChooseFilterItemMobile(e, name, value) {
            e.preventDefault();
            var filterOptions = this.props.filterOptions,
                selectedFilterOptions = this.state.selectedFilterOptions;


            if (value === 'allValues') {
                selectedFilterOptions[name] ? selectedFilterOptions[name].values = [].concat((0, _toConsumableArray3.default)(filterOptions[name].values)) : null;
            } else {
                if (selectedFilterOptions[name] && selectedFilterOptions[name].values.length === filterOptions[name].values.length) {
                    selectedFilterOptions[name].values = [];
                    selectedFilterOptions[name].values.push(value);
                } else {
                    if (selectedFilterOptions[name] && selectedFilterOptions[name].values.some(function (option) {
                        return option.id === value.id;
                    })) {
                        if (selectedFilterOptions[name].values.length === 1) selectedFilterOptions[name].values = [];else selectedFilterOptions[name].values = selectedFilterOptions[name].values.filter(function (item) {
                            return item.id !== value.id;
                        });
                    } else if (selectedFilterOptions[name]) {
                        selectedFilterOptions[name].values.push(value);
                    }
                }
            }
            this.setState({ selectedFilterOptions: selectedFilterOptions });
        }
    }, {
        key: 'handleApplyFiltersMobile',
        value: function handleApplyFiltersMobile() {
            var selectedFilterOptions = this.state.selectedFilterOptions;


            _reactRouter.browserHistory.push('/kaufen/' + this._getBrowserUrl(selectedFilterOptions));

            $('.modelInnerPage-inner .contentPart').css({ display: 'block' });
            $('.modelInnerPage #devicesListSmall').css({ display: 'block' });
            // $('.modelInnerPage-inner .asideFilter').css({ display: 'none' })
            this.props.defineTitleHeadMobile(this.props.params.deviceCategory1 || 'Categories');
            this.props.handleBackFilter();
        }
    }, {
        key: 'openQuickView',
        value: function openQuickView(model) {
            var models = this.props.models;

            this.setState({
                quickViewPage: _react2.default.createElement(_quickViewPage2.default, { model: model,
                    allModels: models,
                    openSuccessAddToBasket: this.openSuccessAddToBasket,
                    capacityName: this.state.capacityName,
                    closeQuickView: this.closeQuickView,
                    deviceName: this.props.params.deviceCategory1
                })
            });
        }
    }, {
        key: 'closeQuickView',
        value: function closeQuickView() {
            this.setState({ quickViewPage: null });
        }
    }, {
        key: 'openSuccessAddToBasket',
        value: function openSuccessAddToBasket(item, source) {
            var _this5 = this;

            var successAddToBasket = this.state.successAddToBasket;

            var promise = new Promise(function (resolve, reject) {
                if (item.modelId) {
                    _axios2.default.get('/api/loadRecommendProducts?modelId=' + item.modelId).then(function (result) {
                        resolve(result.data.data.length ? result.data.data : null);
                    });
                } else if (source === 'gridPage') {
                    _axios2.default.get('/api/loadBestBuyProducts?shortcode=' + item.shortcode + '&deviceName=' + encodeURIComponent(item.deviceName)).then(function (result) {
                        resolve(result.data.data.length ? result.data.data : null);
                    });
                } else {
                    resolve(null);
                }
            });
            promise.then(function (result) {
                if (result && successAddToBasket == null && result.length > 0) {
                    _this5.setState({ recommendProducts: result });

                    _this5.setState({
                        successAddToBasket: _react2.default.createElement(_successAddToBasket2.default, {
                            addModelToBasket: _this5.addModelToBasket,
                            basketData: _this5.props.basketData,
                            source: source,
                            model: item,
                            recommendProducts: _this5.state.recommendProducts,
                            closeSuccessAddToBasket: _this5.closeSuccessAddToBasket })
                    });
                }
            });
        }
    }, {
        key: 'closeSuccessAddToBasket',
        value: function closeSuccessAddToBasket() {
            this.setState({ successAddToBasket: null });
        }
    }, {
        key: 'addModelToBasket',
        value: function addModelToBasket(e, item) {
            var _this6 = this;

            e.stopPropagation();
            e.preventDefault();
            var status = e.target.getAttribute('data-status'),
                source = e.target.getAttribute('data-source'),
                _props = this.props,
                basketData = _props.basketData,
                params = _props.params,
                newBasketData = null;

            if (item.categoryName) {
                newBasketData = [].concat((0, _toConsumableArray3.default)(basketData), [item]);
            } else if (basketData.every(function (itemBasket) {
                return itemBasket.id != item.id;
            })) {
                newBasketData = [].concat((0, _toConsumableArray3.default)(basketData), [item]);
            } else {
                newBasketData = basketData.filter(function (itemBasket) {
                    return itemBasket.shortcode != item.shortcode;
                });
            }
            this.props.basketActions.changeBasketData(newBasketData);

            var brands = void 0,
                brand = void 0,
                category = void 0;
            if (source == "relevantProduct" || params.deviceCategory1 == "zubehör") {
                brands = item.criterias.find(function (item) {
                    return item.id === 'manufacturer';
                }).values, brand = brands.length ? brands[0].name : "", category = item.categoryName;
            } else {
                brand = item.deviceName, category = params.deviceCategory1 || '';
            }
            if (status === 'out') {
                gtag('event', 'add_to_cart', {
                    "items": [{
                        "id": item.shortcode,
                        "list_name": "Kaufen",
                        "quantity": 1,
                        "price": item.discountPrice || item.price,
                        "name": item.descriptionLong || item.model || '',
                        "brand": brand,
                        "category": category
                    }]
                });
                if (!window.isMobile) {
                    this.props.basketActions.basketAddEffect(_react2.default.createElement(_addToBasketEffect2.default, { startPosition: $(e.target).offset(),
                        image: item.deviceImages.mainImg.src,
                        basketType: 'kaufen' }));
                    setTimeout(function () {
                        if (source !== 'relevantProduct') {
                            _this6.openSuccessAddToBasket(item, source);
                        }
                        _this6.props.basketActions.basketAddEffect(null);
                    }, 2000);
                } else {
                    this.openSuccessAddToBasket(item, source);
                    // browserHistory.push('/warenkorb')
                }
            }
            if (status === 'in') {
                gtag('event', 'remove_from_cart', {
                    "items": [{
                        "id": item.shortcode,
                        "list_name": "Kaufen",
                        "quantity": 1,
                        "price": item.discountPrice || item.price,
                        "name": item.descriptionLong || item.model || '',
                        "brand": brand,
                        "category": category
                    }]
                });
                if (!newBasketData.length || !newBasketData.filter(function (item) {
                    return item.productTypeId == 7;
                }).length) {
                    var deadline = JSON.parse(window.localStorage.getItem('deadline'));
                    if (deadline) {
                        deadline.isActive = 0;
                        window.localStorage.setItem('deadline', JSON.stringify(deadline));
                        newBasketData = newBasketData.filter(function (item) {
                            return item.shortcode != deadline.couponShortcode;
                        });
                        this.props.basketActions.changeBasketData(newBasketData);
                    }
                }
            }

            this.props.basketData.map(function (el) {
                return snaptr('track', 'ADD_CART', {
                    'shortcode': el.shortcode,
                    'name': el.name
                });
            });
        }
    }, {
        key: 'addModelToWishlist',
        value: function addModelToWishlist(e, item) {
            var _this7 = this;

            e.stopPropagation();
            e.preventDefault();
            var wishlistData = this.props.wishlistData,
                newWishlistData = null;
            var status = '';
            if (wishlistData.every(function (itemWishlist) {
                return itemWishlist.id != item.id;
            })) {
                newWishlistData = [].concat((0, _toConsumableArray3.default)(wishlistData), [item]);
                status = 'add';
            } else {
                newWishlistData = wishlistData.filter(function (itemWishlist) {
                    return itemWishlist.shortcode != item.shortcode;
                });
                status = 'remove';
            }
            this.props.basketActions.changeWishlisteData(newWishlistData);
            if (!window.isMobile && status === 'add') {
                this.props.basketActions.wishlistAddEffect(_react2.default.createElement(_addToWishlistEffect2.default, { startPosition: $(e.target).offset(),
                    image: item.deviceImages.mainImg.src }));
                setTimeout(function () {
                    _this7.props.basketActions.wishlistAddEffect(null);
                }, 2000);
            }
        }
    }, {
        key: 'handleClickItemGroup',
        value: function handleClickItemGroup(e) {
            var _state = this.state,
                selectedFilterOptions = _state.selectedFilterOptions,
                capacityName = _state.capacityName,
                params = this.props.params,
                model = e.currentTarget.getAttribute('data-model'),
                capacity = e.currentTarget.getAttribute('data-capacity'),
                color = e.currentTarget.getAttribute('data-color');


            selectedFilterOptions.farbe = [color];
            selectedFilterOptions[capacityName] = [capacity];
            selectedFilterOptions.modell = [model];

            _reactRouter.browserHistory.push('/kaufen/' + this._getBrowserUrl(selectedFilterOptions));

            this.setState({ viewMode: 'List' });
        }
    }, {
        key: 'handlePageChange',
        value: function handlePageChange(pageNumber) {
            var _this8 = this;

            var params = this.props.params,
                selectedFilterOptions = this._parseUrl(this.props.params),
                deviceName = '',
                url = '';
            /*find device name*/
            for (var key in params) {
                if (key.includes('deviceCategory') && params[key]) deviceName = params[key].replace(/-/g, ' ');
            }

            document.getElementById('spinner-box-load').style.display = 'block';
            selectedFilterOptions.page = pageNumber.selected + 1;
            var objForRequest = this._getObjForRequest(selectedFilterOptions, pageNumber.selected + 1, deviceName);
            this.props.params.deviceCategory1 === 'zubehör' ? url = '/api/getShopCategoryProducts' : url = '/api/models';
            _index2.default.getModels(url, objForRequest).then(function (_ref4) {
                var data = _ref4.data;

                $(window, document).scrollTop(0);
                document.getElementById('spinner-box-load').style.display = 'none';
                _this8.setState({
                    pagination: (0, _extends3.default)({}, _this8.state.pagination, { activePage: pageNumber.selected }),
                    infoNoModels: data.data.length === 0,
                    selectedFilterOptions: (0, _extends3.default)({}, _this8.state.selectedFilterOptions, { page: pageNumber.selected + 1 })
                });
                _this8.props.shopActions.loadModels(data.data, data.meta.categoriesList);
                _reactRouter.browserHistory.push('/kaufen/' + _this8._getBrowserUrl(_this8.state.selectedFilterOptions));
            });
        }
    }, {
        key: 'gtagEnhancedEcommerce',
        value: function gtagEnhancedEcommerce() {
            var data = this.props,
                gTagItems = data.models.map(function (item) {
                var brand = '';
                if (data.params.deviceCategory1 == "zubehör") {
                    var brands = item.criterias.find(function (item) {
                        return item.id === 'manufacturer';
                    }).values;
                    brand = brands.length ? brands[0].name : "";
                }
                return {
                    "id": item.shortcode,
                    "name": item.descriptionLong || item.model || '',
                    "list_name": "Kaufen",
                    "quantity": 1,
                    "brand": data.params.deviceCategory1 == "zubehör" ? brand : item.deviceName,
                    "category": data.params.deviceCategory1 == "zubehör" ? data.params.deviceCategory2 : data.params.deviceCategory1 || '',
                    "price": item.discountPrice || item.price
                };
            });

            gtag('event', 'view_item_list', {
                "items": gTagItems
            });
        }
    }, {
        key: 'changeViewMode',
        value: function changeViewMode(e) {
            var viewMode = e.target.getAttribute('data-mode');
            this.setState({ viewMode: viewMode });
        }
    }, {
        key: 'changePrice',
        value: function changePrice(e) {
            var selectedFilterOptions = this.state.selectedFilterOptions;

            if ((+e.min).toFixed(0) !== (+e.max).toFixed(0)) {
                selectedFilterOptions.price.minSearch = (+e.min).toFixed(0);
                selectedFilterOptions.price.maxSearch = (+e.max).toFixed(0);
                this.setState({ inputPriceMin: (+e.min).toFixed(0) });
                this.setState({ inputPriceMax: (+e.max).toFixed(0) });
                selectedFilterOptions.page = 1;
                if (!window.isMobile) this.inputPriceCallback(e);
                this.setState({ selectedFilterOptions: selectedFilterOptions });
            }
        }
    }, {
        key: 'changeInputPrice',
        value: function changeInputPrice(e, type) {
            if (type === 'min') {
                this.setState({ inputPriceMin: e.target.value });
            }
            if (type === 'max') {
                this.setState({ inputPriceMax: e.target.value });
            }
        }
    }, {
        key: 'applyInputPrice',
        value: function applyInputPrice(e, type) {
            var _state2 = this.state,
                inputPriceMin = _state2.inputPriceMin,
                inputPriceMax = _state2.inputPriceMax,
                selectedFilterOptions = _state2.selectedFilterOptions;

            inputPriceMin = inputPriceMin != 0 ? inputPriceMin : selectedFilterOptions.price.minSearch;
            inputPriceMax = inputPriceMax != 0 ? inputPriceMax : selectedFilterOptions.price.maxSearch;
            this.setState({ inputPriceErr: {
                    min: false,
                    max: false
                } });
            if (type === 'min' && (parseInt(inputPriceMin) > parseInt(inputPriceMax) || parseInt(inputPriceMin) < parseInt(selectedFilterOptions.price.min))) {
                this.setState({ inputPriceErr: {
                        min: true,
                        max: false
                    } });
                this.setState({ inputPriceMin: selectedFilterOptions.price.minSearch });
                $("#price_min").focus();
                return;
            }
            if (type === 'max' && (parseInt(inputPriceMax) < parseInt(inputPriceMin) || parseInt(inputPriceMax) > parseInt(selectedFilterOptions.price.max))) {
                this.setState({ inputPriceErr: {
                        min: false,
                        max: true
                    } });
                this.setState({ inputPriceMax: selectedFilterOptions.price.maxSearch });
                $("#price_max").focus();
                return;
            }

            if (parseInt(inputPriceMin) != parseInt(selectedFilterOptions.price.minSearch) || parseInt(inputPriceMax) != parseInt(selectedFilterOptions.price.maxSearch)) {
                selectedFilterOptions.price.minSearch = (+inputPriceMin).toFixed(0);
                selectedFilterOptions.price.maxSearch = (+inputPriceMax).toFixed(0);
                this.setState({ selectedFilterOptions: selectedFilterOptions });
                if (!window.isMobile) this.inputPriceCallback(e);
            }
        }
    }, {
        key: 'changeInputPrice1',
        value: function changeInputPrice1(e, type) {
            var _state3 = this.state,
                inputPriceMin = _state3.inputPriceMin,
                inputPriceMax = _state3.inputPriceMax,
                selectedFilterOptions = _state3.selectedFilterOptions;

            this.setState({ inputPriceErr: {
                    min: false,
                    max: false
                } });
            if (type === 'min' && (parseInt(e.target.value) > parseInt(inputPriceMax != 0 ? inputPriceMax : selectedFilterOptions.price.maxSearch) || parseInt(e.target.value) < parseInt(selectedFilterOptions.price.min))) {
                this.setState({ inputPriceErr: {
                        min: true,
                        max: false
                    } });
                return;
            }
            if (type === 'max' && (parseInt(e.target.value) < parseInt(inputPriceMin != 0 ? inputPriceMin : selectedFilterOptions.price.minSearch) || parseInt(e.target.value) > parseInt(selectedFilterOptions.price.max))) {
                this.setState({ inputPriceErr: {
                        min: false,
                        max: true
                    } });
                return;
            }
            if (type === 'min') {
                this.setState({ inputPriceMin: e.target.value });
                selectedFilterOptions.price.minSearch = (+e.target.value).toFixed(0);
                this.setState({ selectedFilterOptions: selectedFilterOptions });
            }

            if (type === 'max') {
                this.setState({ inputPriceMax: e.target.value });
                selectedFilterOptions.price.maxSearch = (+e.target.value).toFixed(0);
                this.setState({ selectedFilterOptions: selectedFilterOptions });
            }
        }
    }, {
        key: 'changeSortBy',
        value: function changeSortBy(e) {
            var value = e.value,
                selectedFilterOptions = this.state.selectedFilterOptions,
                params = this.props.params;


            selectedFilterOptions.sort = value;
            // if (!window.isMobile) {
            _reactRouter.browserHistory.push('/kaufen/' + this._getBrowserUrl(selectedFilterOptions));
            // }
            this.setState({ selectedFilterOptions: selectedFilterOptions });
        }
    }, {
        key: 'showFilters',
        value: function showFilters(event) {
            event.preventDefault();

            $('.modelInnerPage-inner .asideFilter').css({ display: 'block' });

            if (!window.isMobile) {
                $('.modelInnerPage-inner .filters-btn-mobile').css({ display: 'none' });
            } else {
                $('.modelInnerPage-inner .contentPart').css({ display: 'none' });
                $('.modelInnerPage #devicesListSmall').css({ display: 'none' });

                var height = $('.mobileFixedBtn').outerHeight() + 30;
                $('#intercom-container .intercom-launcher-frame').attr('style', 'bottom:' + height + 'px !important');
                height -= 30;
                $('#tidio-chat #tidio-chat-iframe').css({ bottom: height, right: '10px' });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _state4 = this.state,
                viewMode = _state4.viewMode,
                availableFilterOptions = _state4.availableFilterOptions,
                selectedFilterOptions = _state4.selectedFilterOptions,
                quickViewPage = _state4.quickViewPage,
                addBasketEffect = _state4.addBasketEffect,
                capacityName = _state4.capacityName,
                pagination = _state4.pagination,
                seoData = _state4.seoData,
                totalCountModels = _state4.totalCountModels,
                showSidebar = _state4.showSidebar,
                mainModelGroupId = _state4.mainModelGroupId,
                options = _state4.options,
                successAddToBasket = _state4.successAddToBasket,
                seoAccessoriesData = _state4.seoAccessoriesData,
                productModels = _state4.productModels,
                inputPriceMin = _state4.inputPriceMin,
                inputPriceMax = _state4.inputPriceMax,
                inputPriceErr = _state4.inputPriceErr,
                _props2 = this.props,
                filterOptions = _props2.filterOptions,
                models = _props2.models,
                modelsGroup = _props2.modelsGroup,
                basketData = _props2.basketData,
                wishlistData = _props2.wishlistData,
                devices = _props2.devices,
                deviceName = this.props.params.deviceCategory1,
                content = void 0;


            if (viewMode === "Group") content = _react2.default.createElement(_modelsGrid2.default, { models: models,
                basketData: basketData,
                wishlistData: wishlistData,
                addModelToBasket: this.addModelToBasket,
                addModelToWishlist: this.addModelToWishlist
            });else content = _react2.default.createElement(_deviceModelsGrid2.default, { models: models,
                openQuickView: this.openQuickView,
                capacityName: capacityName,
                basketData: basketData,
                wishlistData: wishlistData,
                addModelToBasket: this.addModelToBasket,
                addModelToWishlist: this.addModelToWishlist,
                deviceName: deviceName });
            // else content = <ModelsList models={models}
            //     openQuickView={this.openQuickView}
            //     capacityName={capacityName}
            //     basketData={basketData}
            //     addModelToBasket={this.addModelToBasket}
            //     deviceName={deviceName}/>
            return _react2.default.createElement(
                'div',
                { className: 'modelInnerPage' },
                this.state.seoAccessoriesData && _react2.default.createElement(_reactHelmet.Helmet, {
                    title: seoAccessoriesData.title || '',
                    meta: [{ "name": "description", "content": seoAccessoriesData.meta_description || '' }, { "name": "keywords", "content": seoAccessoriesData.meta_keywords || '' }]
                }),
                _react2.default.createElement(
                    'div',
                    { className: 'container-fluid' },
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        deviceName && _react2.default.createElement(_topDeviceMenu2.default, { filterOptions: filterOptions,
                            devices: devices,
                            params: this.props.params,
                            currentDevice: deviceName,
                            models: this.state.availableFilterOptions.modell ? this.state.availableFilterOptions.modell.values : '',
                            productModels: this.state.productModels,
                            modelCategoryId: this.state.modelCategoryId
                        })
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'modelInnerPage-inner' },
                    _react2.default.createElement(
                        'div',
                        { className: 'container-fluid' },
                        _react2.default.createElement(
                            'div',
                            { style: { width: '95%', margin: "0 auto" } },
                            _react2.default.createElement(
                                'div',
                                { className: 'row row-flex' },
                                showSidebar && _react2.default.createElement(_asideFilter2.default, { filterOptions: filterOptions,
                                    mainModelGroupId: mainModelGroupId,
                                    selectedFilterOptions: selectedFilterOptions,
                                    availableFilterOptions: availableFilterOptions,
                                    inputPriceMin: inputPriceMin,
                                    inputPriceMax: inputPriceMax,
                                    inputPriceErr: inputPriceErr,
                                    changePrice: this.changePrice,
                                    changeInputPrice: this.changeInputPrice,
                                    applyInputPrice: this.applyInputPrice,
                                    mobileApply: this.handleApplyFiltersMobile,
                                    mobileChoseItemFilter: this.handleChooseFilterItemMobile,
                                    routeParams: this.props.params,
                                    changeSortBy: this.changeSortBy,
                                    viewMode: viewMode,
                                    totalItems: totalCountModels,
                                    currentValue: selectedFilterOptions.sort,
                                    options: options,
                                    handleBackFilter: this.props.handleBackFilter }),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'col-md-9 contentPart' },
                                    window.isMobile && this.mapDuplicateFilter(),
                                    window.isMobile && _react2.default.createElement(
                                        'div',
                                        { className: 'topFilter-mobile' },
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'filters-btn-mobile', onClick: this.showFilters /*onClick={this.props.showFiltersMobile}*/ },
                                            'Filter'
                                        ),
                                        _react2.default.createElement(
                                            'div',
                                            { className: 'text-right sortBy for-mobile' },
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'select' },
                                                _react2.default.createElement(_reactSelect2.default, {
                                                    options: options,
                                                    onChange: this.changeSortBy,
                                                    value: selectedFilterOptions.sort,
                                                    searchable: false
                                                })
                                            )
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'redisplay' },
                                        this.mapSelectedCriteria(availableFilterOptions, selectedFilterOptions)
                                    ),
                                    _react2.default.createElement(_topFilter2.default, { changeSortBy: this.changeSortBy
                                        //    showSearchBar={this.props.params.deviceCategory1}
                                        , showSearchBar: false,
                                        viewMode: viewMode,
                                        changeViewMode: this.changeViewMode,
                                        totalItems: pagination.totalItemsCount,
                                        currentValue: selectedFilterOptions.sort,
                                        options: options,
                                        mapDuplicateFilter: this.mapDuplicateFilter(),
                                        valueSelected: this.valueSelected }),
                                    _react2.default.createElement(
                                        'div',
                                        null,
                                        models.length > 0 && content,
                                        this.state.infoNoModels && _react2.default.createElement(
                                            'div',
                                            { className: 'col-md-12 text-center' },
                                            _react2.default.createElement(
                                                'h1',
                                                null,
                                                'Information'
                                            ),
                                            _react2.default.createElement(
                                                'p',
                                                null,
                                                'Aktuell sind von diesem Typ keine Produkte an Lager.'
                                            )
                                        ),
                                        models.length > 0 && _react2.default.createElement(
                                            'div',
                                            { className: 'col-md-12 text-center' },
                                            _react2.default.createElement(_reactPaginate2.default, { previousLabel: "<",
                                                nextLabel: ">",
                                                breakLabel: _react2.default.createElement(
                                                    'a',
                                                    { href: '' },
                                                    '...'
                                                ),
                                                breakClassName: "break-me",
                                                pageCount: this.state.pagination.pageCount,
                                                forcePage: pagination.activePage,
                                                marginPagesDisplayed: 5,
                                                pageRangeDisplayed: 5,
                                                onPageChange: this.handlePageChange,
                                                containerClassName: "pagination",
                                                subContainerClassName: "pages pagination",
                                                activeClassName: "active"
                                            })
                                        )
                                    )
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'container margin-line-20' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-sm-12' },
                        _react2.default.createElement(
                            'p',
                            { className: 'seo' },
                            this.state.seoAccessoriesData ? this.state.seoAccessoriesData.html_description : ''
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'container customersAboutUs' },
                    _react2.default.createElement(_customerAboutUs2.default, { notShowLoader: 'true' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'container banner-area' },
                    _react2.default.createElement(_banner2.default, null)
                ),
                addBasketEffect,
                quickViewPage,
                successAddToBasket
            );
        }
    }]);
    return ModelsInnerPage;
}(_react.Component);

ModelsInnerPage.propTypes = {};
ModelsInnerPage.defaultProps = {};

function mapStateToProps(state) {
    return {
        filterOptions: state.shop.filterOptions,
        models: state.shop.models,
        devices: state.shop.devices,
        modelsGroup: state.shop.modelsGroup,
        basketData: state.basket.basketData,
        places: state.places.currentLocation,
        wishlistData: state.basket.wishlistData
    };
}

function mapDispatchToProps(dispatch) {
    return {
        shopActions: (0, _redux.bindActionCreators)(shopActions, dispatch),
        basketActions: (0, _redux.bindActionCreators)(basketActions, dispatch)
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ModelsInnerPage);

/***/ }),

/***/ 856:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),

/***/ 857:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(871);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),

/***/ 858:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(866);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),

/***/ 859:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(889);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(893);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(866);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),

/***/ 863:
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(43);

/***/ }),

/***/ 864:
/***/ (function(module, exports, __webpack_require__) {

var global         = __webpack_require__(67)
  , core           = __webpack_require__(65)
  , LIBRARY        = __webpack_require__(317)
  , wksExt         = __webpack_require__(863)
  , defineProperty = __webpack_require__(110).f;
module.exports = function(name){
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
};

/***/ }),

/***/ 866:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(877);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(879);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),

/***/ 867:
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys      = __webpack_require__(326)
  , hiddenKeys = __webpack_require__(216).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
  return $keys(O, hiddenKeys);
};

/***/ }),

/***/ 868:
/***/ (function(module, exports, __webpack_require__) {

var pIE            = __webpack_require__(314)
  , createDesc     = __webpack_require__(152)
  , toIObject      = __webpack_require__(147)
  , toPrimitive    = __webpack_require__(318)
  , has            = __webpack_require__(112)
  , IE8_DOM_DEFINE = __webpack_require__(324)
  , gOPD           = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(111) ? gOPD : function getOwnPropertyDescriptor(O, P){
  O = toIObject(O);
  P = toPrimitive(P, true);
  if(IE8_DOM_DEFINE)try {
    return gOPD(O, P);
  } catch(e){ /* empty */ }
  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
};

/***/ }),

/***/ 869:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),

/***/ 870:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = compareObjects;
function compareObjects(objA, objB) {
  var keys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  if (objA === objB) {
    return false;
  }

  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);

  if (aKeys.length !== bKeys.length) {
    return true;
  }

  var keysMap = {};
  var i = void 0,
      len = void 0;

  for (i = 0, len = keys.length; i < len; i++) {
    keysMap[keys[i]] = true;
  }

  for (i = 0, len = aKeys.length; i < len; i++) {
    var key = aKeys[i];
    var aValue = objA[key];
    var bValue = objB[key];

    if (aValue === bValue) {
      continue;
    }

    if (!keysMap[key] || aValue === null || bValue === null || (typeof aValue === 'undefined' ? 'undefined' : _typeof(aValue)) !== 'object' || (typeof bValue === 'undefined' ? 'undefined' : _typeof(bValue)) !== 'object') {
      return true;
    }

    var aValueKeys = Object.keys(aValue);
    var bValueKeys = Object.keys(bValue);

    if (aValueKeys.length !== bValueKeys.length) {
      return true;
    }

    for (var n = 0, length = aValueKeys.length; n < length; n++) {
      var aValueKey = aValueKeys[n];

      if (aValue[aValueKey] !== bValue[aValueKey]) {
        return true;
      }
    }
  }

  return false;
}

/***/ }),

/***/ 871:
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(875), __esModule: true };

/***/ }),

/***/ 873:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _toConsumableArray2 = __webpack_require__(316);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.loadDevices = loadDevices;
exports.loadModels = loadModels;
exports.setFilterOptions = setFilterOptions;
exports.setSearchResult = setSearchResult;
exports.definedCounerForSearchInput = definedCounerForSearchInput;

var _shop = __webpack_require__(332);

var types = _interopRequireWildcard(_shop);

var _index = __webpack_require__(330);

var _index2 = _interopRequireDefault(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function loadDevices(url, type) {
    return function (dispatch) {
        if (type === 'verkaufen') {
            var devicesForPurchaseWithParams = window.localStorage.getItem("devicesForPurchaseWithParams") && window.localStorage.getItem("devicesForPurchaseWithParams") !== '' ? JSON.parse(window.localStorage.getItem("devicesForPurchaseWithParams")) : null;
            if (devicesForPurchaseWithParams) {
                dispatch({
                    type: types.LOAD_DEVICES_FOR_SELL_SUCCESS,
                    payload: devicesForPurchaseWithParams
                });
            } else {
                _index2.default.loadDevices(url).then(function (_ref) {
                    var data = _ref.data.data;

                    window.localStorage.setItem('devicesForPurchaseWithParams', JSON.stringify(data));
                    dispatch({
                        type: types.LOAD_DEVICES_FOR_SELL_SUCCESS,
                        payload: data
                    });
                });
            }
        } else {
            var devicesData = window.localStorage.getItem("devicesData") && window.localStorage.getItem("devicesData") !== '' ? JSON.parse(window.localStorage.getItem("devicesData")) : null;
            var devicesForPurchase = window.localStorage.getItem("devicesForPurchase") && window.localStorage.getItem("devicesForPurchase") !== '' ? JSON.parse(window.localStorage.getItem("devicesForPurchase")) : null;
            if (url === '/api/devices' && devicesData) {
                dispatch({
                    type: types.LOAD_DEVICES_SUCCESS,
                    payload: devicesData
                });
            } else if (url === '/api/devicesForPurchase' && devicesForPurchase) {
                dispatch({
                    type: types.LOAD_DEVICES_SUCCESS,
                    payload: devicesForPurchase
                });
            } else {
                _index2.default.loadDevices(url).then(function (_ref2) {
                    var data = _ref2.data.data;

                    axios.get('/api/getShopCategories').then(function (result) {
                        var newData = [].concat((0, _toConsumableArray3.default)(data));
                        if (result.data.length > 0) newData = [].concat((0, _toConsumableArray3.default)(data), [{ id: 11, name: 'Zubehör', submodels: result.data }]);
                        if (url === '/api/devices') window.localStorage.setItem('devicesData', JSON.stringify(newData));
                        if (url === '/api/devicesForPurchase') window.localStorage.setItem('devicesForPurchase', JSON.stringify(newData));
                        dispatch({
                            type: types.LOAD_DEVICES_SUCCESS,
                            payload: newData
                        });
                    });
                });
            }
        }
    };
}

function loadModels(models, categoriesList) {
    return function (dispatch) {
        dispatch({
            type: types.LOAD_MODELS_SUCCESS,
            payload: {
                models: models,
                categoriesList: categoriesList
            }
        });
    };
}
function setFilterOptions(data) {
    return function (dispatch) {
        dispatch({
            type: types.SET_FILTER_OPTIONS_SUCCESS,
            payload: data
        });
    };
}
function setSearchResult(data, searchValue) {
    return {
        type: types.SET_SEARCH_RESULTS,
        payload: { data: data.data, total: data.meta.totalCount, searchValue: searchValue }
    };
}

function definedCounerForSearchInput(data) {
    return {
        type: types.RETURN_SEARCH_RESULTS_TO_PREV_ROUTE,
        payload: data
    };
}

/***/ }),

/***/ 874:
/***/ (function(module, exports) {



/***/ }),

/***/ 875:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(876);
var $Object = __webpack_require__(65).Object;
module.exports = function defineProperty(it, key, desc){
  return $Object.defineProperty(it, key, desc);
};

/***/ }),

/***/ 876:
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(146);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(111), 'Object', {defineProperty: __webpack_require__(110).f});

/***/ }),

/***/ 877:
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(878), __esModule: true };

/***/ }),

/***/ 878:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(154);
__webpack_require__(213);
module.exports = __webpack_require__(863).f('iterator');

/***/ }),

/***/ 879:
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(880), __esModule: true };

/***/ }),

/***/ 880:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(881);
__webpack_require__(874);
__webpack_require__(887);
__webpack_require__(888);
module.exports = __webpack_require__(65).Symbol;

/***/ }),

/***/ 881:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global         = __webpack_require__(67)
  , has            = __webpack_require__(112)
  , DESCRIPTORS    = __webpack_require__(111)
  , $export        = __webpack_require__(146)
  , redefine       = __webpack_require__(325)
  , META           = __webpack_require__(882).KEY
  , $fails         = __webpack_require__(151)
  , shared         = __webpack_require__(215)
  , setToStringTag = __webpack_require__(214)
  , uid            = __webpack_require__(208)
  , wks            = __webpack_require__(43)
  , wksExt         = __webpack_require__(863)
  , wksDefine      = __webpack_require__(864)
  , keyOf          = __webpack_require__(883)
  , enumKeys       = __webpack_require__(884)
  , isArray        = __webpack_require__(885)
  , anObject       = __webpack_require__(84)
  , toIObject      = __webpack_require__(147)
  , toPrimitive    = __webpack_require__(318)
  , createDesc     = __webpack_require__(152)
  , _create        = __webpack_require__(319)
  , gOPNExt        = __webpack_require__(886)
  , $GOPD          = __webpack_require__(868)
  , $DP            = __webpack_require__(110)
  , $keys          = __webpack_require__(207)
  , gOPD           = $GOPD.f
  , dP             = $DP.f
  , gOPN           = gOPNExt.f
  , $Symbol        = global.Symbol
  , $JSON          = global.JSON
  , _stringify     = $JSON && $JSON.stringify
  , PROTOTYPE      = 'prototype'
  , HIDDEN         = wks('_hidden')
  , TO_PRIMITIVE   = wks('toPrimitive')
  , isEnum         = {}.propertyIsEnumerable
  , SymbolRegistry = shared('symbol-registry')
  , AllSymbols     = shared('symbols')
  , OPSymbols      = shared('op-symbols')
  , ObjectProto    = Object[PROTOTYPE]
  , USE_NATIVE     = typeof $Symbol == 'function'
  , QObject        = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function(){
  return _create(dP({}, 'a', {
    get: function(){ return dP(this, 'a', {value: 7}).a; }
  })).a != 7;
}) ? function(it, key, D){
  var protoDesc = gOPD(ObjectProto, key);
  if(protoDesc)delete ObjectProto[key];
  dP(it, key, D);
  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function(tag){
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
  return typeof it == 'symbol';
} : function(it){
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D){
  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if(has(AllSymbols, key)){
    if(!D.enumerable){
      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
      D = _create(D, {enumerable: createDesc(0, false)});
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P){
  anObject(it);
  var keys = enumKeys(P = toIObject(P))
    , i    = 0
    , l = keys.length
    , key;
  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P){
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key){
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
  it  = toIObject(it);
  key = toPrimitive(key, true);
  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
  var D = gOPD(it, key);
  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it){
  var names  = gOPN(toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
  var IS_OP  = it === ObjectProto
    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if(!USE_NATIVE){
  $Symbol = function Symbol(){
    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function(value){
      if(this === ObjectProto)$set.call(OPSymbols, value);
      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f   = $defineProperty;
  __webpack_require__(867).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(314).f  = $propertyIsEnumerable;
  __webpack_require__(320).f = $getOwnPropertySymbols;

  if(DESCRIPTORS && !__webpack_require__(317)){
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function(name){
    return wrap(wks(name));
  }
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

for(var symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function(key){
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(key){
    if(isSymbol(key))return keyOf(SymbolRegistry, key);
    throw TypeError(key + ' is not a symbol!');
  },
  useSetter: function(){ setter = true; },
  useSimple: function(){ setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it){
    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
    var args = [it]
      , i    = 1
      , replacer, $replacer;
    while(arguments.length > i)args.push(arguments[i++]);
    replacer = args[1];
    if(typeof replacer == 'function')$replacer = replacer;
    if($replacer || !isArray(replacer))replacer = function(key, value){
      if($replacer)value = $replacer.call(this, key, value);
      if(!isSymbol(value))return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(85)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

/***/ }),

/***/ 882:
/***/ (function(module, exports, __webpack_require__) {

var META     = __webpack_require__(208)('meta')
  , isObject = __webpack_require__(150)
  , has      = __webpack_require__(112)
  , setDesc  = __webpack_require__(110).f
  , id       = 0;
var isExtensible = Object.isExtensible || function(){
  return true;
};
var FREEZE = !__webpack_require__(151)(function(){
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function(it){
  setDesc(it, META, {value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  }});
};
var fastKey = function(it, create){
  // return primitive with prefix
  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return 'F';
    // not necessary to add metadata
    if(!create)return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function(it, create){
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return true;
    // not necessary to add metadata
    if(!create)return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function(it){
  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY:      META,
  NEED:     false,
  fastKey:  fastKey,
  getWeak:  getWeak,
  onFreeze: onFreeze
};

/***/ }),

/***/ 883:
/***/ (function(module, exports, __webpack_require__) {

var getKeys   = __webpack_require__(207)
  , toIObject = __webpack_require__(147);
module.exports = function(object, el){
  var O      = toIObject(object)
    , keys   = getKeys(O)
    , length = keys.length
    , index  = 0
    , key;
  while(length > index)if(O[key = keys[index++]] === el)return key;
};

/***/ }),

/***/ 884:
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(207)
  , gOPS    = __webpack_require__(320)
  , pIE     = __webpack_require__(314);
module.exports = function(it){
  var result     = getKeys(it)
    , getSymbols = gOPS.f;
  if(getSymbols){
    var symbols = getSymbols(it)
      , isEnum  = pIE.f
      , i       = 0
      , key;
    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
  } return result;
};

/***/ }),

/***/ 885:
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(212);
module.exports = Array.isArray || function isArray(arg){
  return cof(arg) == 'Array';
};

/***/ }),

/***/ 886:
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(147)
  , gOPN      = __webpack_require__(867).f
  , toString  = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function(it){
  try {
    return gOPN(it);
  } catch(e){
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it){
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ 887:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(864)('asyncIterator');

/***/ }),

/***/ 888:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(864)('observable');

/***/ }),

/***/ 889:
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(890), __esModule: true };

/***/ }),

/***/ 890:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(891);
module.exports = __webpack_require__(65).Object.setPrototypeOf;

/***/ }),

/***/ 891:
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(146);
$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(892).set});

/***/ }),

/***/ 892:
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(150)
  , anObject = __webpack_require__(84);
var check = function(O, proto){
  anObject(O);
  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function(test, buggy, set){
      try {
        set = __webpack_require__(211)(Function.call, __webpack_require__(868).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch(e){ buggy = true; }
      return function setPrototypeOf(O, proto){
        check(O, proto);
        if(buggy)O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

/***/ }),

/***/ 893:
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(894), __esModule: true };

/***/ }),

/***/ 894:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(895);
var $Object = __webpack_require__(65).Object;
module.exports = function create(P, D){
  return $Object.create(P, D);
};

/***/ }),

/***/ 895:
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(146)
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', {create: __webpack_require__(319)});

/***/ }),

/***/ 897:
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ 898:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkSpecKeys = exports.checkNavigable = exports.changeSlide = exports.canUseDOM = exports.canGoNext = void 0;
exports.clamp = clamp;
exports.swipeStart = exports.swipeMove = exports.swipeEnd = exports.slidesOnRight = exports.slidesOnLeft = exports.slideHandler = exports.siblingDirection = exports.safePreventDefault = exports.lazyStartIndex = exports.lazySlidesOnRight = exports.lazySlidesOnLeft = exports.lazyEndIndex = exports.keyHandler = exports.initializedState = exports.getWidth = exports.getTrackLeft = exports.getTrackCSS = exports.getTrackAnimateCSS = exports.getTotalSlides = exports.getSwipeDirection = exports.getSlideCount = exports.getRequiredLazySlides = exports.getPreClones = exports.getPostClones = exports.getOnDemandLazySlides = exports.getNavigableIndexes = exports.getHeight = exports.extractObject = void 0;

var _react = _interopRequireDefault(__webpack_require__(16));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function clamp(number, lowerBound, upperBound) {
  return Math.max(lowerBound, Math.min(number, upperBound));
}

var safePreventDefault = function safePreventDefault(event) {
  var passiveEvents = ["onTouchStart", "onTouchMove", "onWheel"];

  if (!passiveEvents.includes(event._reactName)) {
    event.preventDefault();
  }
};

exports.safePreventDefault = safePreventDefault;

var getOnDemandLazySlides = function getOnDemandLazySlides(spec) {
  var onDemandSlides = [];
  var startIndex = lazyStartIndex(spec);
  var endIndex = lazyEndIndex(spec);

  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {
    if (spec.lazyLoadedList.indexOf(slideIndex) < 0) {
      onDemandSlides.push(slideIndex);
    }
  }

  return onDemandSlides;
}; // return list of slides that need to be present


exports.getOnDemandLazySlides = getOnDemandLazySlides;

var getRequiredLazySlides = function getRequiredLazySlides(spec) {
  var requiredSlides = [];
  var startIndex = lazyStartIndex(spec);
  var endIndex = lazyEndIndex(spec);

  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {
    requiredSlides.push(slideIndex);
  }

  return requiredSlides;
}; // startIndex that needs to be present


exports.getRequiredLazySlides = getRequiredLazySlides;

var lazyStartIndex = function lazyStartIndex(spec) {
  return spec.currentSlide - lazySlidesOnLeft(spec);
};

exports.lazyStartIndex = lazyStartIndex;

var lazyEndIndex = function lazyEndIndex(spec) {
  return spec.currentSlide + lazySlidesOnRight(spec);
};

exports.lazyEndIndex = lazyEndIndex;

var lazySlidesOnLeft = function lazySlidesOnLeft(spec) {
  return spec.centerMode ? Math.floor(spec.slidesToShow / 2) + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : 0;
};

exports.lazySlidesOnLeft = lazySlidesOnLeft;

var lazySlidesOnRight = function lazySlidesOnRight(spec) {
  return spec.centerMode ? Math.floor((spec.slidesToShow - 1) / 2) + 1 + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : spec.slidesToShow;
}; // get width of an element


exports.lazySlidesOnRight = lazySlidesOnRight;

var getWidth = function getWidth(elem) {
  return elem && elem.offsetWidth || 0;
};

exports.getWidth = getWidth;

var getHeight = function getHeight(elem) {
  return elem && elem.offsetHeight || 0;
};

exports.getHeight = getHeight;

var getSwipeDirection = function getSwipeDirection(touchObject) {
  var verticalSwiping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var xDist, yDist, r, swipeAngle;
  xDist = touchObject.startX - touchObject.curX;
  yDist = touchObject.startY - touchObject.curY;
  r = Math.atan2(yDist, xDist);
  swipeAngle = Math.round(r * 180 / Math.PI);

  if (swipeAngle < 0) {
    swipeAngle = 360 - Math.abs(swipeAngle);
  }

  if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {
    return "left";
  }

  if (swipeAngle >= 135 && swipeAngle <= 225) {
    return "right";
  }

  if (verticalSwiping === true) {
    if (swipeAngle >= 35 && swipeAngle <= 135) {
      return "up";
    } else {
      return "down";
    }
  }

  return "vertical";
}; // whether or not we can go next


exports.getSwipeDirection = getSwipeDirection;

var canGoNext = function canGoNext(spec) {
  var canGo = true;

  if (!spec.infinite) {
    if (spec.centerMode && spec.currentSlide >= spec.slideCount - 1) {
      canGo = false;
    } else if (spec.slideCount <= spec.slidesToShow || spec.currentSlide >= spec.slideCount - spec.slidesToShow) {
      canGo = false;
    }
  }

  return canGo;
}; // given an object and a list of keys, return new object with given keys


exports.canGoNext = canGoNext;

var extractObject = function extractObject(spec, keys) {
  var newObject = {};
  keys.forEach(function (key) {
    return newObject[key] = spec[key];
  });
  return newObject;
}; // get initialized state


exports.extractObject = extractObject;

var initializedState = function initializedState(spec) {
  // spec also contains listRef, trackRef
  var slideCount = _react["default"].Children.count(spec.children);

  var listNode = spec.listRef;
  var listWidth = Math.ceil(getWidth(listNode));
  var trackNode = spec.trackRef && spec.trackRef.node;
  var trackWidth = Math.ceil(getWidth(trackNode));
  var slideWidth;

  if (!spec.vertical) {
    var centerPaddingAdj = spec.centerMode && parseInt(spec.centerPadding) * 2;

    if (typeof spec.centerPadding === "string" && spec.centerPadding.slice(-1) === "%") {
      centerPaddingAdj *= listWidth / 100;
    }

    slideWidth = Math.ceil((listWidth - centerPaddingAdj) / spec.slidesToShow);
  } else {
    slideWidth = listWidth;
  }

  var slideHeight = listNode && getHeight(listNode.querySelector('[data-index="0"]'));
  var listHeight = slideHeight * spec.slidesToShow;
  var currentSlide = spec.currentSlide === undefined ? spec.initialSlide : spec.currentSlide;

  if (spec.rtl && spec.currentSlide === undefined) {
    currentSlide = slideCount - 1 - spec.initialSlide;
  }

  var lazyLoadedList = spec.lazyLoadedList || [];
  var slidesToLoad = getOnDemandLazySlides(_objectSpread(_objectSpread({}, spec), {}, {
    currentSlide: currentSlide,
    lazyLoadedList: lazyLoadedList
  }));
  lazyLoadedList = lazyLoadedList.concat(slidesToLoad);
  var state = {
    slideCount: slideCount,
    slideWidth: slideWidth,
    listWidth: listWidth,
    trackWidth: trackWidth,
    currentSlide: currentSlide,
    slideHeight: slideHeight,
    listHeight: listHeight,
    lazyLoadedList: lazyLoadedList
  };

  if (spec.autoplaying === null && spec.autoplay) {
    state["autoplaying"] = "playing";
  }

  return state;
};

exports.initializedState = initializedState;

var slideHandler = function slideHandler(spec) {
  var waitForAnimate = spec.waitForAnimate,
      animating = spec.animating,
      fade = spec.fade,
      infinite = spec.infinite,
      index = spec.index,
      slideCount = spec.slideCount,
      lazyLoad = spec.lazyLoad,
      currentSlide = spec.currentSlide,
      centerMode = spec.centerMode,
      slidesToScroll = spec.slidesToScroll,
      slidesToShow = spec.slidesToShow,
      useCSS = spec.useCSS;
  var lazyLoadedList = spec.lazyLoadedList;
  if (waitForAnimate && animating) return {};
  var animationSlide = index,
      finalSlide,
      animationLeft,
      finalLeft;
  var state = {},
      nextState = {};
  var targetSlide = infinite ? index : clamp(index, 0, slideCount - 1);

  if (fade) {
    if (!infinite && (index < 0 || index >= slideCount)) return {};

    if (index < 0) {
      animationSlide = index + slideCount;
    } else if (index >= slideCount) {
      animationSlide = index - slideCount;
    }

    if (lazyLoad && lazyLoadedList.indexOf(animationSlide) < 0) {
      lazyLoadedList = lazyLoadedList.concat(animationSlide);
    }

    state = {
      animating: true,
      currentSlide: animationSlide,
      lazyLoadedList: lazyLoadedList,
      targetSlide: animationSlide
    };
    nextState = {
      animating: false,
      targetSlide: animationSlide
    };
  } else {
    finalSlide = animationSlide;

    if (animationSlide < 0) {
      finalSlide = animationSlide + slideCount;
      if (!infinite) finalSlide = 0;else if (slideCount % slidesToScroll !== 0) finalSlide = slideCount - slideCount % slidesToScroll;
    } else if (!canGoNext(spec) && animationSlide > currentSlide) {
      animationSlide = finalSlide = currentSlide;
    } else if (centerMode && animationSlide >= slideCount) {
      animationSlide = infinite ? slideCount : slideCount - 1;
      finalSlide = infinite ? 0 : slideCount - 1;
    } else if (animationSlide >= slideCount) {
      finalSlide = animationSlide - slideCount;
      if (!infinite) finalSlide = slideCount - slidesToShow;else if (slideCount % slidesToScroll !== 0) finalSlide = 0;
    }

    if (!infinite && animationSlide + slidesToShow >= slideCount) {
      finalSlide = slideCount - slidesToShow;
    }

    animationLeft = getTrackLeft(_objectSpread(_objectSpread({}, spec), {}, {
      slideIndex: animationSlide
    }));
    finalLeft = getTrackLeft(_objectSpread(_objectSpread({}, spec), {}, {
      slideIndex: finalSlide
    }));

    if (!infinite) {
      if (animationLeft === finalLeft) animationSlide = finalSlide;
      animationLeft = finalLeft;
    }

    if (lazyLoad) {
      lazyLoadedList = lazyLoadedList.concat(getOnDemandLazySlides(_objectSpread(_objectSpread({}, spec), {}, {
        currentSlide: animationSlide
      })));
    }

    if (!useCSS) {
      state = {
        currentSlide: finalSlide,
        trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {
          left: finalLeft
        })),
        lazyLoadedList: lazyLoadedList,
        targetSlide: targetSlide
      };
    } else {
      state = {
        animating: true,
        currentSlide: finalSlide,
        trackStyle: getTrackAnimateCSS(_objectSpread(_objectSpread({}, spec), {}, {
          left: animationLeft
        })),
        lazyLoadedList: lazyLoadedList,
        targetSlide: targetSlide
      };
      nextState = {
        animating: false,
        currentSlide: finalSlide,
        trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {
          left: finalLeft
        })),
        swipeLeft: null,
        targetSlide: targetSlide
      };
    }
  }

  return {
    state: state,
    nextState: nextState
  };
};

exports.slideHandler = slideHandler;

var changeSlide = function changeSlide(spec, options) {
  var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;
  var slidesToScroll = spec.slidesToScroll,
      slidesToShow = spec.slidesToShow,
      slideCount = spec.slideCount,
      currentSlide = spec.currentSlide,
      previousTargetSlide = spec.targetSlide,
      lazyLoad = spec.lazyLoad,
      infinite = spec.infinite;
  unevenOffset = slideCount % slidesToScroll !== 0;
  indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;

  if (options.message === "previous") {
    slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;
    targetSlide = currentSlide - slideOffset;

    if (lazyLoad && !infinite) {
      previousInt = currentSlide - slideOffset;
      targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;
    }

    if (!infinite) {
      targetSlide = previousTargetSlide - slidesToScroll;
    }
  } else if (options.message === "next") {
    slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;
    targetSlide = currentSlide + slideOffset;

    if (lazyLoad && !infinite) {
      targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;
    }

    if (!infinite) {
      targetSlide = previousTargetSlide + slidesToScroll;
    }
  } else if (options.message === "dots") {
    // Click on dots
    targetSlide = options.index * options.slidesToScroll;
  } else if (options.message === "children") {
    // Click on the slides
    targetSlide = options.index;

    if (infinite) {
      var direction = siblingDirection(_objectSpread(_objectSpread({}, spec), {}, {
        targetSlide: targetSlide
      }));

      if (targetSlide > options.currentSlide && direction === "left") {
        targetSlide = targetSlide - slideCount;
      } else if (targetSlide < options.currentSlide && direction === "right") {
        targetSlide = targetSlide + slideCount;
      }
    }
  } else if (options.message === "index") {
    targetSlide = Number(options.index);
  }

  return targetSlide;
};

exports.changeSlide = changeSlide;

var keyHandler = function keyHandler(e, accessibility, rtl) {
  if (e.target.tagName.match("TEXTAREA|INPUT|SELECT") || !accessibility) return "";
  if (e.keyCode === 37) return rtl ? "next" : "previous";
  if (e.keyCode === 39) return rtl ? "previous" : "next";
  return "";
};

exports.keyHandler = keyHandler;

var swipeStart = function swipeStart(e, swipe, draggable) {
  e.target.tagName === "IMG" && safePreventDefault(e);
  if (!swipe || !draggable && e.type.indexOf("mouse") !== -1) return "";
  return {
    dragging: true,
    touchObject: {
      startX: e.touches ? e.touches[0].pageX : e.clientX,
      startY: e.touches ? e.touches[0].pageY : e.clientY,
      curX: e.touches ? e.touches[0].pageX : e.clientX,
      curY: e.touches ? e.touches[0].pageY : e.clientY
    }
  };
};

exports.swipeStart = swipeStart;

var swipeMove = function swipeMove(e, spec) {
  // spec also contains, trackRef and slideIndex
  var scrolling = spec.scrolling,
      animating = spec.animating,
      vertical = spec.vertical,
      swipeToSlide = spec.swipeToSlide,
      verticalSwiping = spec.verticalSwiping,
      rtl = spec.rtl,
      currentSlide = spec.currentSlide,
      edgeFriction = spec.edgeFriction,
      edgeDragged = spec.edgeDragged,
      onEdge = spec.onEdge,
      swiped = spec.swiped,
      swiping = spec.swiping,
      slideCount = spec.slideCount,
      slidesToScroll = spec.slidesToScroll,
      infinite = spec.infinite,
      touchObject = spec.touchObject,
      swipeEvent = spec.swipeEvent,
      listHeight = spec.listHeight,
      listWidth = spec.listWidth;
  if (scrolling) return;
  if (animating) return safePreventDefault(e);
  if (vertical && swipeToSlide && verticalSwiping) safePreventDefault(e);
  var swipeLeft,
      state = {};
  var curLeft = getTrackLeft(spec);
  touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;
  touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;
  touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));
  var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));

  if (!verticalSwiping && !swiping && verticalSwipeLength > 10) {
    return {
      scrolling: true
    };
  }

  if (verticalSwiping) touchObject.swipeLength = verticalSwipeLength;
  var positionOffset = (!rtl ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);
  if (verticalSwiping) positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;
  var dotCount = Math.ceil(slideCount / slidesToScroll);
  var swipeDirection = getSwipeDirection(spec.touchObject, verticalSwiping);
  var touchSwipeLength = touchObject.swipeLength;

  if (!infinite) {
    if (currentSlide === 0 && (swipeDirection === "right" || swipeDirection === "down") || currentSlide + 1 >= dotCount && (swipeDirection === "left" || swipeDirection === "up") || !canGoNext(spec) && (swipeDirection === "left" || swipeDirection === "up")) {
      touchSwipeLength = touchObject.swipeLength * edgeFriction;

      if (edgeDragged === false && onEdge) {
        onEdge(swipeDirection);
        state["edgeDragged"] = true;
      }
    }
  }

  if (!swiped && swipeEvent) {
    swipeEvent(swipeDirection);
    state["swiped"] = true;
  }

  if (!vertical) {
    if (!rtl) {
      swipeLeft = curLeft + touchSwipeLength * positionOffset;
    } else {
      swipeLeft = curLeft - touchSwipeLength * positionOffset;
    }
  } else {
    swipeLeft = curLeft + touchSwipeLength * (listHeight / listWidth) * positionOffset;
  }

  if (verticalSwiping) {
    swipeLeft = curLeft + touchSwipeLength * positionOffset;
  }

  state = _objectSpread(_objectSpread({}, state), {}, {
    touchObject: touchObject,
    swipeLeft: swipeLeft,
    trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {
      left: swipeLeft
    }))
  });

  if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {
    return state;
  }

  if (touchObject.swipeLength > 10) {
    state["swiping"] = true;
    safePreventDefault(e);
  }

  return state;
};

exports.swipeMove = swipeMove;

var swipeEnd = function swipeEnd(e, spec) {
  var dragging = spec.dragging,
      swipe = spec.swipe,
      touchObject = spec.touchObject,
      listWidth = spec.listWidth,
      touchThreshold = spec.touchThreshold,
      verticalSwiping = spec.verticalSwiping,
      listHeight = spec.listHeight,
      swipeToSlide = spec.swipeToSlide,
      scrolling = spec.scrolling,
      onSwipe = spec.onSwipe,
      targetSlide = spec.targetSlide,
      currentSlide = spec.currentSlide,
      infinite = spec.infinite;

  if (!dragging) {
    if (swipe) safePreventDefault(e);
    return {};
  }

  var minSwipe = verticalSwiping ? listHeight / touchThreshold : listWidth / touchThreshold;
  var swipeDirection = getSwipeDirection(touchObject, verticalSwiping); // reset the state of touch related state variables.

  var state = {
    dragging: false,
    edgeDragged: false,
    scrolling: false,
    swiping: false,
    swiped: false,
    swipeLeft: null,
    touchObject: {}
  };

  if (scrolling) {
    return state;
  }

  if (!touchObject.swipeLength) {
    return state;
  }

  if (touchObject.swipeLength > minSwipe) {
    safePreventDefault(e);

    if (onSwipe) {
      onSwipe(swipeDirection);
    }

    var slideCount, newSlide;
    var activeSlide = infinite ? currentSlide : targetSlide;

    switch (swipeDirection) {
      case "left":
      case "up":
        newSlide = activeSlide + getSlideCount(spec);
        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
        state["currentDirection"] = 0;
        break;

      case "right":
      case "down":
        newSlide = activeSlide - getSlideCount(spec);
        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
        state["currentDirection"] = 1;
        break;

      default:
        slideCount = activeSlide;
    }

    state["triggerSlideHandler"] = slideCount;
  } else {
    // Adjust the track back to it's original position.
    var currentLeft = getTrackLeft(spec);
    state["trackStyle"] = getTrackAnimateCSS(_objectSpread(_objectSpread({}, spec), {}, {
      left: currentLeft
    }));
  }

  return state;
};

exports.swipeEnd = swipeEnd;

var getNavigableIndexes = function getNavigableIndexes(spec) {
  var max = spec.infinite ? spec.slideCount * 2 : spec.slideCount;
  var breakpoint = spec.infinite ? spec.slidesToShow * -1 : 0;
  var counter = spec.infinite ? spec.slidesToShow * -1 : 0;
  var indexes = [];

  while (breakpoint < max) {
    indexes.push(breakpoint);
    breakpoint = counter + spec.slidesToScroll;
    counter += Math.min(spec.slidesToScroll, spec.slidesToShow);
  }

  return indexes;
};

exports.getNavigableIndexes = getNavigableIndexes;

var checkNavigable = function checkNavigable(spec, index) {
  var navigables = getNavigableIndexes(spec);
  var prevNavigable = 0;

  if (index > navigables[navigables.length - 1]) {
    index = navigables[navigables.length - 1];
  } else {
    for (var n in navigables) {
      if (index < navigables[n]) {
        index = prevNavigable;
        break;
      }

      prevNavigable = navigables[n];
    }
  }

  return index;
};

exports.checkNavigable = checkNavigable;

var getSlideCount = function getSlideCount(spec) {
  var centerOffset = spec.centerMode ? spec.slideWidth * Math.floor(spec.slidesToShow / 2) : 0;

  if (spec.swipeToSlide) {
    var swipedSlide;
    var slickList = spec.listRef;
    var slides = slickList.querySelectorAll && slickList.querySelectorAll(".slick-slide") || [];
    Array.from(slides).every(function (slide) {
      if (!spec.vertical) {
        if (slide.offsetLeft - centerOffset + getWidth(slide) / 2 > spec.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      } else {
        if (slide.offsetTop + getHeight(slide) / 2 > spec.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      }

      return true;
    });

    if (!swipedSlide) {
      return 0;
    }

    var currentIndex = spec.rtl === true ? spec.slideCount - spec.currentSlide : spec.currentSlide;
    var slidesTraversed = Math.abs(swipedSlide.dataset.index - currentIndex) || 1;
    return slidesTraversed;
  } else {
    return spec.slidesToScroll;
  }
};

exports.getSlideCount = getSlideCount;

var checkSpecKeys = function checkSpecKeys(spec, keysArray) {
  return keysArray.reduce(function (value, key) {
    return value && spec.hasOwnProperty(key);
  }, true) ? null : console.error("Keys Missing:", spec);
};

exports.checkSpecKeys = checkSpecKeys;

var getTrackCSS = function getTrackCSS(spec) {
  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth"]);
  var trackWidth, trackHeight;
  var trackChildren = spec.slideCount + 2 * spec.slidesToShow;

  if (!spec.vertical) {
    trackWidth = getTotalSlides(spec) * spec.slideWidth;
  } else {
    trackHeight = trackChildren * spec.slideHeight;
  }

  var style = {
    opacity: 1,
    transition: "",
    WebkitTransition: ""
  };

  if (spec.useTransform) {
    var WebkitTransform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
    var transform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
    var msTransform = !spec.vertical ? "translateX(" + spec.left + "px)" : "translateY(" + spec.left + "px)";
    style = _objectSpread(_objectSpread({}, style), {}, {
      WebkitTransform: WebkitTransform,
      transform: transform,
      msTransform: msTransform
    });
  } else {
    if (spec.vertical) {
      style["top"] = spec.left;
    } else {
      style["left"] = spec.left;
    }
  }

  if (spec.fade) style = {
    opacity: 1
  };
  if (trackWidth) style.width = trackWidth;
  if (trackHeight) style.height = trackHeight; // Fallback for IE8

  if (window && !window.addEventListener && window.attachEvent) {
    if (!spec.vertical) {
      style.marginLeft = spec.left + "px";
    } else {
      style.marginTop = spec.left + "px";
    }
  }

  return style;
};

exports.getTrackCSS = getTrackCSS;

var getTrackAnimateCSS = function getTrackAnimateCSS(spec) {
  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth", "speed", "cssEase"]);
  var style = getTrackCSS(spec); // useCSS is true by default so it can be undefined

  if (spec.useTransform) {
    style.WebkitTransition = "-webkit-transform " + spec.speed + "ms " + spec.cssEase;
    style.transition = "transform " + spec.speed + "ms " + spec.cssEase;
  } else {
    if (spec.vertical) {
      style.transition = "top " + spec.speed + "ms " + spec.cssEase;
    } else {
      style.transition = "left " + spec.speed + "ms " + spec.cssEase;
    }
  }

  return style;
};

exports.getTrackAnimateCSS = getTrackAnimateCSS;

var getTrackLeft = function getTrackLeft(spec) {
  if (spec.unslick) {
    return 0;
  }

  checkSpecKeys(spec, ["slideIndex", "trackRef", "infinite", "centerMode", "slideCount", "slidesToShow", "slidesToScroll", "slideWidth", "listWidth", "variableWidth", "slideHeight"]);
  var slideIndex = spec.slideIndex,
      trackRef = spec.trackRef,
      infinite = spec.infinite,
      centerMode = spec.centerMode,
      slideCount = spec.slideCount,
      slidesToShow = spec.slidesToShow,
      slidesToScroll = spec.slidesToScroll,
      slideWidth = spec.slideWidth,
      listWidth = spec.listWidth,
      variableWidth = spec.variableWidth,
      slideHeight = spec.slideHeight,
      fade = spec.fade,
      vertical = spec.vertical;
  var slideOffset = 0;
  var targetLeft;
  var targetSlide;
  var verticalOffset = 0;

  if (fade || spec.slideCount === 1) {
    return 0;
  }

  var slidesToOffset = 0;

  if (infinite) {
    slidesToOffset = -getPreClones(spec); // bring active slide to the beginning of visual area
    // if next scroll doesn't have enough children, just reach till the end of original slides instead of shifting slidesToScroll children

    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
      slidesToOffset = -(slideIndex > slideCount ? slidesToShow - (slideIndex - slideCount) : slideCount % slidesToScroll);
    } // shift current slide to center of the frame


    if (centerMode) {
      slidesToOffset += parseInt(slidesToShow / 2);
    }
  } else {
    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
      slidesToOffset = slidesToShow - slideCount % slidesToScroll;
    }

    if (centerMode) {
      slidesToOffset = parseInt(slidesToShow / 2);
    }
  }

  slideOffset = slidesToOffset * slideWidth;
  verticalOffset = slidesToOffset * slideHeight;

  if (!vertical) {
    targetLeft = slideIndex * slideWidth * -1 + slideOffset;
  } else {
    targetLeft = slideIndex * slideHeight * -1 + verticalOffset;
  }

  if (variableWidth === true) {
    var targetSlideIndex;
    var trackElem = trackRef && trackRef.node;
    targetSlideIndex = slideIndex + getPreClones(spec);
    targetSlide = trackElem && trackElem.childNodes[targetSlideIndex];
    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;

    if (centerMode === true) {
      targetSlideIndex = infinite ? slideIndex + getPreClones(spec) : slideIndex;
      targetSlide = trackElem && trackElem.children[targetSlideIndex];
      targetLeft = 0;

      for (var slide = 0; slide < targetSlideIndex; slide++) {
        targetLeft -= trackElem && trackElem.children[slide] && trackElem.children[slide].offsetWidth;
      }

      targetLeft -= parseInt(spec.centerPadding);
      targetLeft += targetSlide && (listWidth - targetSlide.offsetWidth) / 2;
    }
  }

  return targetLeft;
};

exports.getTrackLeft = getTrackLeft;

var getPreClones = function getPreClones(spec) {
  if (spec.unslick || !spec.infinite) {
    return 0;
  }

  if (spec.variableWidth) {
    return spec.slideCount;
  }

  return spec.slidesToShow + (spec.centerMode ? 1 : 0);
};

exports.getPreClones = getPreClones;

var getPostClones = function getPostClones(spec) {
  if (spec.unslick || !spec.infinite) {
    return 0;
  }

  return spec.slideCount;
};

exports.getPostClones = getPostClones;

var getTotalSlides = function getTotalSlides(spec) {
  return spec.slideCount === 1 ? 1 : getPreClones(spec) + spec.slideCount + getPostClones(spec);
};

exports.getTotalSlides = getTotalSlides;

var siblingDirection = function siblingDirection(spec) {
  if (spec.targetSlide > spec.currentSlide) {
    if (spec.targetSlide > spec.currentSlide + slidesOnRight(spec)) {
      return "left";
    }

    return "right";
  } else {
    if (spec.targetSlide < spec.currentSlide - slidesOnLeft(spec)) {
      return "right";
    }

    return "left";
  }
};

exports.siblingDirection = siblingDirection;

var slidesOnRight = function slidesOnRight(_ref) {
  var slidesToShow = _ref.slidesToShow,
      centerMode = _ref.centerMode,
      rtl = _ref.rtl,
      centerPadding = _ref.centerPadding;

  // returns no of slides on the right of active slide
  if (centerMode) {
    var right = (slidesToShow - 1) / 2 + 1;
    if (parseInt(centerPadding) > 0) right += 1;
    if (rtl && slidesToShow % 2 === 0) right += 1;
    return right;
  }

  if (rtl) {
    return 0;
  }

  return slidesToShow - 1;
};

exports.slidesOnRight = slidesOnRight;

var slidesOnLeft = function slidesOnLeft(_ref2) {
  var slidesToShow = _ref2.slidesToShow,
      centerMode = _ref2.centerMode,
      rtl = _ref2.rtl,
      centerPadding = _ref2.centerPadding;

  // returns no of slides on the left of active slide
  if (centerMode) {
    var left = (slidesToShow - 1) / 2 + 1;
    if (parseInt(centerPadding) > 0) left += 1;
    if (!rtl && slidesToShow % 2 === 0) left += 1;
    return left;
  }

  if (rtl) {
    return slidesToShow - 1;
  }

  return 0;
};

exports.slidesOnLeft = slidesOnLeft;

var canUseDOM = function canUseDOM() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
};

exports.canUseDOM = canUseDOM;

/***/ }),

/***/ 899:
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(897),
    now = __webpack_require__(910),
    toNumber = __webpack_require__(911);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;


/***/ }),

/***/ 900:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(86);

var ReactCurrentOwner = __webpack_require__(935);

var warning = __webpack_require__(904);
var canDefineProperty = __webpack_require__(934);
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = __webpack_require__(975);

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (true) {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (true) {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
       true ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
       true ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (true) {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (true) {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (true) {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;

/***/ }),

/***/ 902:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Async", function() { return Async; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncCreatable", function() { return AsyncCreatableSelect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Creatable", function() { return CreatableSelect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Value", function() { return Value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Option", function() { return Option; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultMenuRenderer", function() { return menuRenderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultArrowRenderer", function() { return arrowRenderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultClearRenderer", function() { return clearRenderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultFilterOptions", function() { return filterOptions; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_input_autosize__ = __webpack_require__(908);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_input_autosize___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react_input_autosize__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames__ = __webpack_require__(869);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_dom__ = __webpack_require__(321);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_react_dom__);






var arrowRenderer = function arrowRenderer(_ref) {
	var onMouseDown = _ref.onMouseDown;

	return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement('span', {
		className: 'Select-arrow',
		onMouseDown: onMouseDown
	});
};

arrowRenderer.propTypes = {
	onMouseDown: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func
};

var clearRenderer = function clearRenderer() {
	return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement('span', {
		className: 'Select-clear',
		dangerouslySetInnerHTML: { __html: '&times;' }
	});
};

var map = [{ 'base': 'A', 'letters': /[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g }, { 'base': 'AA', 'letters': /[\uA732]/g }, { 'base': 'AE', 'letters': /[\u00C6\u01FC\u01E2]/g }, { 'base': 'AO', 'letters': /[\uA734]/g }, { 'base': 'AU', 'letters': /[\uA736]/g }, { 'base': 'AV', 'letters': /[\uA738\uA73A]/g }, { 'base': 'AY', 'letters': /[\uA73C]/g }, { 'base': 'B', 'letters': /[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g }, { 'base': 'C', 'letters': /[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g }, { 'base': 'D', 'letters': /[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g }, { 'base': 'DZ', 'letters': /[\u01F1\u01C4]/g }, { 'base': 'Dz', 'letters': /[\u01F2\u01C5]/g }, { 'base': 'E', 'letters': /[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g }, { 'base': 'F', 'letters': /[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g }, { 'base': 'G', 'letters': /[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g }, { 'base': 'H', 'letters': /[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g }, { 'base': 'I', 'letters': /[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g }, { 'base': 'J', 'letters': /[\u004A\u24BF\uFF2A\u0134\u0248]/g }, { 'base': 'K', 'letters': /[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g }, { 'base': 'L', 'letters': /[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g }, { 'base': 'LJ', 'letters': /[\u01C7]/g }, { 'base': 'Lj', 'letters': /[\u01C8]/g }, { 'base': 'M', 'letters': /[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g }, { 'base': 'N', 'letters': /[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g }, { 'base': 'NJ', 'letters': /[\u01CA]/g }, { 'base': 'Nj', 'letters': /[\u01CB]/g }, { 'base': 'O', 'letters': /[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g }, { 'base': 'OI', 'letters': /[\u01A2]/g }, { 'base': 'OO', 'letters': /[\uA74E]/g }, { 'base': 'OU', 'letters': /[\u0222]/g }, { 'base': 'P', 'letters': /[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g }, { 'base': 'Q', 'letters': /[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g }, { 'base': 'R', 'letters': /[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g }, { 'base': 'S', 'letters': /[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g }, { 'base': 'T', 'letters': /[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g }, { 'base': 'TZ', 'letters': /[\uA728]/g }, { 'base': 'U', 'letters': /[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g }, { 'base': 'V', 'letters': /[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g }, { 'base': 'VY', 'letters': /[\uA760]/g }, { 'base': 'W', 'letters': /[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g }, { 'base': 'X', 'letters': /[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g }, { 'base': 'Y', 'letters': /[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g }, { 'base': 'Z', 'letters': /[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g }, { 'base': 'a', 'letters': /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g }, { 'base': 'aa', 'letters': /[\uA733]/g }, { 'base': 'ae', 'letters': /[\u00E6\u01FD\u01E3]/g }, { 'base': 'ao', 'letters': /[\uA735]/g }, { 'base': 'au', 'letters': /[\uA737]/g }, { 'base': 'av', 'letters': /[\uA739\uA73B]/g }, { 'base': 'ay', 'letters': /[\uA73D]/g }, { 'base': 'b', 'letters': /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g }, { 'base': 'c', 'letters': /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g }, { 'base': 'd', 'letters': /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g }, { 'base': 'dz', 'letters': /[\u01F3\u01C6]/g }, { 'base': 'e', 'letters': /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g }, { 'base': 'f', 'letters': /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g }, { 'base': 'g', 'letters': /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g }, { 'base': 'h', 'letters': /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g }, { 'base': 'hv', 'letters': /[\u0195]/g }, { 'base': 'i', 'letters': /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g }, { 'base': 'j', 'letters': /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g }, { 'base': 'k', 'letters': /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g }, { 'base': 'l', 'letters': /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g }, { 'base': 'lj', 'letters': /[\u01C9]/g }, { 'base': 'm', 'letters': /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g }, { 'base': 'n', 'letters': /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g }, { 'base': 'nj', 'letters': /[\u01CC]/g }, { 'base': 'o', 'letters': /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g }, { 'base': 'oi', 'letters': /[\u01A3]/g }, { 'base': 'ou', 'letters': /[\u0223]/g }, { 'base': 'oo', 'letters': /[\uA74F]/g }, { 'base': 'p', 'letters': /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g }, { 'base': 'q', 'letters': /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g }, { 'base': 'r', 'letters': /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g }, { 'base': 's', 'letters': /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g }, { 'base': 't', 'letters': /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g }, { 'base': 'tz', 'letters': /[\uA729]/g }, { 'base': 'u', 'letters': /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g }, { 'base': 'v', 'letters': /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g }, { 'base': 'vy', 'letters': /[\uA761]/g }, { 'base': 'w', 'letters': /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g }, { 'base': 'x', 'letters': /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g }, { 'base': 'y', 'letters': /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g }, { 'base': 'z', 'letters': /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g }];

var stripDiacritics = function stripDiacritics(str) {
	for (var i = 0; i < map.length; i++) {
		str = str.replace(map[i].letters, map[i].base);
	}
	return str;
};

var trim = function trim(str) {
  return str.replace(/^\s+|\s+$/g, '');
};

var isValid = function isValid(value) {
	return typeof value !== 'undefined' && value !== null && value !== '';
};

var filterOptions = function filterOptions(options, filterValue, excludeOptions, props) {
	if (props.ignoreAccents) {
		filterValue = stripDiacritics(filterValue);
	}

	if (props.ignoreCase) {
		filterValue = filterValue.toLowerCase();
	}

	if (props.trimFilter) {
		filterValue = trim(filterValue);
	}

	if (excludeOptions) excludeOptions = excludeOptions.map(function (i) {
		return i[props.valueKey];
	});

	return options.filter(function (option) {
		if (excludeOptions && excludeOptions.indexOf(option[props.valueKey]) > -1) return false;
		if (props.filterOption) return props.filterOption.call(undefined, option, filterValue);
		if (!filterValue) return true;

		var value = option[props.valueKey];
		var label = option[props.labelKey];
		var hasValue = isValid(value);
		var hasLabel = isValid(label);

		if (!hasValue && !hasLabel) {
			return false;
		}

		var valueTest = hasValue ? String(value) : null;
		var labelTest = hasLabel ? String(label) : null;

		if (props.ignoreAccents) {
			if (valueTest && props.matchProp !== 'label') valueTest = stripDiacritics(valueTest);
			if (labelTest && props.matchProp !== 'value') labelTest = stripDiacritics(labelTest);
		}

		if (props.ignoreCase) {
			if (valueTest && props.matchProp !== 'label') valueTest = valueTest.toLowerCase();
			if (labelTest && props.matchProp !== 'value') labelTest = labelTest.toLowerCase();
		}

		return props.matchPos === 'start' ? valueTest && props.matchProp !== 'label' && valueTest.substr(0, filterValue.length) === filterValue || labelTest && props.matchProp !== 'value' && labelTest.substr(0, filterValue.length) === filterValue : valueTest && props.matchProp !== 'label' && valueTest.indexOf(filterValue) >= 0 || labelTest && props.matchProp !== 'value' && labelTest.indexOf(filterValue) >= 0;
	});
};

var menuRenderer = function menuRenderer(_ref) {
	var focusedOption = _ref.focusedOption,
	    focusOption = _ref.focusOption,
	    inputValue = _ref.inputValue,
	    instancePrefix = _ref.instancePrefix,
	    onFocus = _ref.onFocus,
	    onOptionRef = _ref.onOptionRef,
	    onSelect = _ref.onSelect,
	    optionClassName = _ref.optionClassName,
	    optionComponent = _ref.optionComponent,
	    optionRenderer = _ref.optionRenderer,
	    options = _ref.options,
	    removeValue = _ref.removeValue,
	    selectValue = _ref.selectValue,
	    valueArray = _ref.valueArray,
	    valueKey = _ref.valueKey;

	var Option = optionComponent;

	return options.map(function (option, i) {
		var isSelected = valueArray && valueArray.some(function (x) {
			return x[valueKey] === option[valueKey];
		});
		var isFocused = option === focusedOption;
		var optionClass = __WEBPACK_IMPORTED_MODULE_1_classnames___default()(optionClassName, {
			'Select-option': true,
			'is-selected': isSelected,
			'is-focused': isFocused,
			'is-disabled': option.disabled
		});

		return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
			Option,
			{
				className: optionClass,
				focusOption: focusOption,
				inputValue: inputValue,
				instancePrefix: instancePrefix,
				isDisabled: option.disabled,
				isFocused: isFocused,
				isSelected: isSelected,
				key: 'option-' + i + '-' + option[valueKey],
				onFocus: onFocus,
				onSelect: onSelect,
				option: option,
				optionIndex: i,
				ref: function ref(_ref2) {
					onOptionRef(_ref2, isFocused);
				},
				removeValue: removeValue,
				selectValue: selectValue
			},
			optionRenderer(option, i, inputValue)
		);
	});
};

menuRenderer.propTypes = {
	focusOption: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
	focusedOption: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object,
	inputValue: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
	instancePrefix: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
	onFocus: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
	onOptionRef: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
	onSelect: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
	optionClassName: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
	optionComponent: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
	optionRenderer: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
	options: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array,
	removeValue: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
	selectValue: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
	valueArray: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array,
	valueKey: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string
};

var blockEvent = (function (event) {
	event.preventDefault();
	event.stopPropagation();
	if (event.target.tagName !== 'A' || !('href' in event.target)) {
		return;
	}
	if (event.target.target) {
		window.open(event.target.href, event.target.target);
	} else {
		window.location.href = event.target.href;
	}
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};





var asyncGenerator = function () {
  function AwaitValue(value) {
    this.value = value;
  }

  function AsyncGenerator(gen) {
    var front, back;

    function send(key, arg) {
      return new Promise(function (resolve, reject) {
        var request = {
          key: key,
          arg: arg,
          resolve: resolve,
          reject: reject,
          next: null
        };

        if (back) {
          back = back.next = request;
        } else {
          front = back = request;
          resume(key, arg);
        }
      });
    }

    function resume(key, arg) {
      try {
        var result = gen[key](arg);
        var value = result.value;

        if (value instanceof AwaitValue) {
          Promise.resolve(value.value).then(function (arg) {
            resume("next", arg);
          }, function (arg) {
            resume("throw", arg);
          });
        } else {
          settle(result.done ? "return" : "normal", result.value);
        }
      } catch (err) {
        settle("throw", err);
      }
    }

    function settle(type, value) {
      switch (type) {
        case "return":
          front.resolve({
            value: value,
            done: true
          });
          break;

        case "throw":
          front.reject(value);
          break;

        default:
          front.resolve({
            value: value,
            done: false
          });
          break;
      }

      front = front.next;

      if (front) {
        resume(front.key, front.arg);
      } else {
        back = null;
      }
    }

    this._invoke = send;

    if (typeof gen.return !== "function") {
      this.return = undefined;
    }
  }

  if (typeof Symbol === "function" && Symbol.asyncIterator) {
    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {
      return this;
    };
  }

  AsyncGenerator.prototype.next = function (arg) {
    return this._invoke("next", arg);
  };

  AsyncGenerator.prototype.throw = function (arg) {
    return this._invoke("throw", arg);
  };

  AsyncGenerator.prototype.return = function (arg) {
    return this._invoke("return", arg);
  };

  return {
    wrap: function (fn) {
      return function () {
        return new AsyncGenerator(fn.apply(this, arguments));
      };
    },
    await: function (value) {
      return new AwaitValue(value);
    }
  };
}();





var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};









var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var Option = function (_React$Component) {
	inherits(Option, _React$Component);

	function Option(props) {
		classCallCheck(this, Option);

		var _this = possibleConstructorReturn(this, (Option.__proto__ || Object.getPrototypeOf(Option)).call(this, props));

		_this.handleMouseDown = _this.handleMouseDown.bind(_this);
		_this.handleMouseEnter = _this.handleMouseEnter.bind(_this);
		_this.handleMouseMove = _this.handleMouseMove.bind(_this);
		_this.handleTouchStart = _this.handleTouchStart.bind(_this);
		_this.handleTouchEnd = _this.handleTouchEnd.bind(_this);
		_this.handleTouchMove = _this.handleTouchMove.bind(_this);
		_this.onFocus = _this.onFocus.bind(_this);
		return _this;
	}

	createClass(Option, [{
		key: 'handleMouseDown',
		value: function handleMouseDown(event) {
			event.preventDefault();
			event.stopPropagation();
			this.props.onSelect(this.props.option, event);
		}
	}, {
		key: 'handleMouseEnter',
		value: function handleMouseEnter(event) {
			this.onFocus(event);
		}
	}, {
		key: 'handleMouseMove',
		value: function handleMouseMove(event) {
			this.onFocus(event);
		}
	}, {
		key: 'handleTouchEnd',
		value: function handleTouchEnd(event) {
			// Check if the view is being dragged, In this case
			// we don't want to fire the click event (because the user only wants to scroll)
			if (this.dragging) return;

			this.handleMouseDown(event);
		}
	}, {
		key: 'handleTouchMove',
		value: function handleTouchMove() {
			// Set a flag that the view is being dragged
			this.dragging = true;
		}
	}, {
		key: 'handleTouchStart',
		value: function handleTouchStart() {
			// Set a flag that the view is not being dragged
			this.dragging = false;
		}
	}, {
		key: 'onFocus',
		value: function onFocus(event) {
			if (!this.props.isFocused) {
				this.props.onFocus(this.props.option, event);
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    option = _props.option,
			    instancePrefix = _props.instancePrefix,
			    optionIndex = _props.optionIndex;

			var className = __WEBPACK_IMPORTED_MODULE_1_classnames___default()(this.props.className, option.className);

			return option.disabled ? __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'div',
				{ className: className,
					onMouseDown: blockEvent,
					onClick: blockEvent },
				this.props.children
			) : __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'div',
				{ className: className,
					style: option.style,
					role: 'option',
					'aria-label': option.label,
					onMouseDown: this.handleMouseDown,
					onMouseEnter: this.handleMouseEnter,
					onMouseMove: this.handleMouseMove,
					onTouchStart: this.handleTouchStart,
					onTouchMove: this.handleTouchMove,
					onTouchEnd: this.handleTouchEnd,
					id: instancePrefix + '-option-' + optionIndex,
					title: option.title },
				this.props.children
			);
		}
	}]);
	return Option;
}(__WEBPACK_IMPORTED_MODULE_3_react___default.a.Component);

Option.propTypes = {
	children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node,
	className: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // className (based on mouse position)
	instancePrefix: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string.isRequired, // unique prefix for the ids (used for aria)
	isDisabled: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // the option is disabled
	isFocused: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // the option is focused
	isSelected: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // the option is selected
	onFocus: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // method to handle mouseEnter on option element
	onSelect: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // method to handle click on option element
	onUnfocus: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // method to handle mouseLeave on option element
	option: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object.isRequired, // object that is base for that option
	optionIndex: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number // index of the option, used to generate unique ids for aria
};

var Value = function (_React$Component) {
	inherits(Value, _React$Component);

	function Value(props) {
		classCallCheck(this, Value);

		var _this = possibleConstructorReturn(this, (Value.__proto__ || Object.getPrototypeOf(Value)).call(this, props));

		_this.handleMouseDown = _this.handleMouseDown.bind(_this);
		_this.onRemove = _this.onRemove.bind(_this);
		_this.handleTouchEndRemove = _this.handleTouchEndRemove.bind(_this);
		_this.handleTouchMove = _this.handleTouchMove.bind(_this);
		_this.handleTouchStart = _this.handleTouchStart.bind(_this);
		return _this;
	}

	createClass(Value, [{
		key: 'handleMouseDown',
		value: function handleMouseDown(event) {
			if (event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			if (this.props.onClick) {
				event.stopPropagation();
				this.props.onClick(this.props.value, event);
				return;
			}
			if (this.props.value.href) {
				event.stopPropagation();
			}
		}
	}, {
		key: 'onRemove',
		value: function onRemove(event) {
			event.preventDefault();
			event.stopPropagation();
			this.props.onRemove(this.props.value);
		}
	}, {
		key: 'handleTouchEndRemove',
		value: function handleTouchEndRemove(event) {
			// Check if the view is being dragged, In this case
			// we don't want to fire the click event (because the user only wants to scroll)
			if (this.dragging) return;

			// Fire the mouse events
			this.onRemove(event);
		}
	}, {
		key: 'handleTouchMove',
		value: function handleTouchMove() {
			// Set a flag that the view is being dragged
			this.dragging = true;
		}
	}, {
		key: 'handleTouchStart',
		value: function handleTouchStart() {
			// Set a flag that the view is not being dragged
			this.dragging = false;
		}
	}, {
		key: 'renderRemoveIcon',
		value: function renderRemoveIcon() {
			if (this.props.disabled || !this.props.onRemove) return;
			return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'span',
				{ className: 'Select-value-icon',
					'aria-hidden': 'true',
					onMouseDown: this.onRemove,
					onTouchEnd: this.handleTouchEndRemove,
					onTouchStart: this.handleTouchStart,
					onTouchMove: this.handleTouchMove },
				'\xD7'
			);
		}
	}, {
		key: 'renderLabel',
		value: function renderLabel() {
			var className = 'Select-value-label';
			return this.props.onClick || this.props.value.href ? __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'a',
				{ className: className, href: this.props.value.href, target: this.props.value.target, onMouseDown: this.handleMouseDown, onTouchEnd: this.handleMouseDown },
				this.props.children
			) : __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'span',
				{ className: className, role: 'option', 'aria-selected': 'true', id: this.props.id },
				this.props.children
			);
		}
	}, {
		key: 'render',
		value: function render() {
			return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'div',
				{ className: __WEBPACK_IMPORTED_MODULE_1_classnames___default()('Select-value', this.props.value.disabled ? 'Select-value-disabled' : '', this.props.value.className),
					style: this.props.value.style,
					title: this.props.value.title
				},
				this.renderRemoveIcon(),
				this.renderLabel()
			);
		}
	}]);
	return Value;
}(__WEBPACK_IMPORTED_MODULE_3_react___default.a.Component);

Value.propTypes = {
	children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node,
	disabled: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // disabled prop passed to ReactSelect
	id: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // Unique id for the value - used for aria
	onClick: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // method to handle click on value label
	onRemove: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // method to handle removal of the value
	value: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object.isRequired // the option object for this value
};

/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/react-select
*/
var stringifyValue = function stringifyValue(value) {
	return typeof value === 'string' ? value : value !== null && JSON.stringify(value) || '';
};

var stringOrNode = __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node]);
var stringOrNumber = __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number]);

var instanceId = 1;

var shouldShowValue = function shouldShowValue(state, props) {
	var inputValue = state.inputValue,
	    isPseudoFocused = state.isPseudoFocused,
	    isFocused = state.isFocused;
	var onSelectResetsInput = props.onSelectResetsInput;


	if (!inputValue) return true;

	if (!onSelectResetsInput) {
		return !(!isFocused && isPseudoFocused || isFocused && !isPseudoFocused);
	}

	return false;
};

var shouldShowPlaceholder = function shouldShowPlaceholder(state, props, isOpen) {
	var inputValue = state.inputValue,
	    isPseudoFocused = state.isPseudoFocused,
	    isFocused = state.isFocused;
	var onSelectResetsInput = props.onSelectResetsInput;


	return !inputValue || !onSelectResetsInput && !isOpen && !isPseudoFocused && !isFocused;
};

/**
 * Retrieve a value from the given options and valueKey
 * @param {String|Number|Array} value	- the selected value(s)
 * @param {Object}		 props	- the Select component's props (or nextProps)
 */
var expandValue = function expandValue(value, props) {
	var valueType = typeof value === 'undefined' ? 'undefined' : _typeof(value);
	if (valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') return value;
	var options = props.options,
	    valueKey = props.valueKey;

	if (!options) return;
	for (var i = 0; i < options.length; i++) {
		if (String(options[i][valueKey]) === String(value)) return options[i];
	}
};

var handleRequired = function handleRequired(value, multi) {
	if (!value) return true;
	return multi ? value.length === 0 : Object.keys(value).length === 0;
};

var Select$1 = function (_React$Component) {
	inherits(Select, _React$Component);

	function Select(props) {
		classCallCheck(this, Select);

		var _this = possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));

		['clearValue', 'focusOption', 'getOptionLabel', 'handleInputBlur', 'handleInputChange', 'handleInputFocus', 'handleInputValueChange', 'handleKeyDown', 'handleMenuScroll', 'handleMouseDown', 'handleMouseDownOnArrow', 'handleMouseDownOnMenu', 'handleTouchEnd', 'handleTouchEndClearValue', 'handleTouchMove', 'handleTouchOutside', 'handleTouchStart', 'handleValueClick', 'onOptionRef', 'removeValue', 'selectValue'].forEach(function (fn) {
			return _this[fn] = _this[fn].bind(_this);
		});

		_this.state = {
			inputValue: '',
			isFocused: false,
			isOpen: false,
			isPseudoFocused: false,
			required: false
		};
		return _this;
	}

	createClass(Select, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			this._instancePrefix = 'react-select-' + (this.props.instanceId || ++instanceId) + '-';
			var valueArray = this.getValueArray(this.props.value);

			if (this.props.required) {
				this.setState({
					required: handleRequired(valueArray[0], this.props.multi)
				});
			}
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			if (typeof this.props.autofocus !== 'undefined' && typeof console !== 'undefined') {
				console.warn('Warning: The autofocus prop has changed to autoFocus, support will be removed after react-select@1.0');
			}
			if (this.props.autoFocus || this.props.autofocus) {
				this.focus();
			}
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			var valueArray = this.getValueArray(nextProps.value, nextProps);

			if (nextProps.required) {
				this.setState({
					required: handleRequired(valueArray[0], nextProps.multi)
				});
			} else if (this.props.required) {
				// Used to be required but it's not any more
				this.setState({ required: false });
			}

			if (this.state.inputValue && this.props.value !== nextProps.value && nextProps.onSelectResetsInput) {
				this.setState({ inputValue: this.handleInputValueChange('') });
			}
		}
	}, {
		key: 'componentDidUpdate',
		value: function componentDidUpdate(prevProps, prevState) {
			// focus to the selected option
			if (this.menu && this.focused && this.state.isOpen && !this.hasScrolledToOption) {
				var focusedOptionNode = Object(__WEBPACK_IMPORTED_MODULE_4_react_dom__["findDOMNode"])(this.focused);
				var menuNode = Object(__WEBPACK_IMPORTED_MODULE_4_react_dom__["findDOMNode"])(this.menu);

				var scrollTop = menuNode.scrollTop;
				var scrollBottom = scrollTop + menuNode.offsetHeight;
				var optionTop = focusedOptionNode.offsetTop;
				var optionBottom = optionTop + focusedOptionNode.offsetHeight;

				if (scrollTop > optionTop || scrollBottom < optionBottom) {
					menuNode.scrollTop = focusedOptionNode.offsetTop;
				}

				// We still set hasScrolledToOption to true even if we didn't
				// actually need to scroll, as we've still confirmed that the
				// option is in view.
				this.hasScrolledToOption = true;
			} else if (!this.state.isOpen) {
				this.hasScrolledToOption = false;
			}

			if (this._scrollToFocusedOptionOnUpdate && this.focused && this.menu) {
				this._scrollToFocusedOptionOnUpdate = false;
				var focusedDOM = Object(__WEBPACK_IMPORTED_MODULE_4_react_dom__["findDOMNode"])(this.focused);
				var menuDOM = Object(__WEBPACK_IMPORTED_MODULE_4_react_dom__["findDOMNode"])(this.menu);
				var focusedRect = focusedDOM.getBoundingClientRect();
				var menuRect = menuDOM.getBoundingClientRect();
				if (focusedRect.bottom > menuRect.bottom) {
					menuDOM.scrollTop = focusedDOM.offsetTop + focusedDOM.clientHeight - menuDOM.offsetHeight;
				} else if (focusedRect.top < menuRect.top) {
					menuDOM.scrollTop = focusedDOM.offsetTop;
				}
			}
			if (this.props.scrollMenuIntoView && this.menuContainer) {
				var menuContainerRect = this.menuContainer.getBoundingClientRect();
				if (window.innerHeight < menuContainerRect.bottom + this.props.menuBuffer) {
					window.scrollBy(0, menuContainerRect.bottom + this.props.menuBuffer - window.innerHeight);
				}
			}
			if (prevProps.disabled !== this.props.disabled) {
				this.setState({ isFocused: false }); // eslint-disable-line react/no-did-update-set-state
				this.closeMenu();
			}
			if (prevState.isOpen !== this.state.isOpen) {
				this.toggleTouchOutsideEvent(this.state.isOpen);
				var handler = this.state.isOpen ? this.props.onOpen : this.props.onClose;
				handler && handler();
			}
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.toggleTouchOutsideEvent(false);
		}
	}, {
		key: 'toggleTouchOutsideEvent',
		value: function toggleTouchOutsideEvent(enabled) {
			var eventTogglerName = enabled ? document.addEventListener ? 'addEventListener' : 'attachEvent' : document.removeEventListener ? 'removeEventListener' : 'detachEvent';
			var pref = document.addEventListener ? '' : 'on';

			document[eventTogglerName](pref + 'touchstart', this.handleTouchOutside);
			document[eventTogglerName](pref + 'mousedown', this.handleTouchOutside);
		}
	}, {
		key: 'handleTouchOutside',
		value: function handleTouchOutside(event) {
			// handle touch outside on ios to dismiss menu
			if (this.wrapper && !this.wrapper.contains(event.target)) {
				this.closeMenu();
			}
		}
	}, {
		key: 'focus',
		value: function focus() {
			if (!this.input) return;
			this.input.focus();
		}
	}, {
		key: 'blurInput',
		value: function blurInput() {
			if (!this.input) return;
			this.input.blur();
		}
	}, {
		key: 'handleTouchMove',
		value: function handleTouchMove() {
			// Set a flag that the view is being dragged
			this.dragging = true;
		}
	}, {
		key: 'handleTouchStart',
		value: function handleTouchStart() {
			// Set a flag that the view is not being dragged
			this.dragging = false;
		}
	}, {
		key: 'handleTouchEnd',
		value: function handleTouchEnd(event) {
			// Check if the view is being dragged, In this case
			// we don't want to fire the click event (because the user only wants to scroll)
			if (this.dragging) return;

			// Fire the mouse events
			this.handleMouseDown(event);
		}
	}, {
		key: 'handleTouchEndClearValue',
		value: function handleTouchEndClearValue(event) {
			// Check if the view is being dragged, In this case
			// we don't want to fire the click event (because the user only wants to scroll)
			if (this.dragging) return;

			// Clear the value
			this.clearValue(event);
		}
	}, {
		key: 'handleMouseDown',
		value: function handleMouseDown(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}

			if (event.target.tagName === 'INPUT') {
				if (!this.state.isFocused) {
					this._openAfterFocus = this.props.openOnClick;
					this.focus();
				} else if (!this.state.isOpen) {
					this.setState({
						isOpen: true,
						isPseudoFocused: false,
						focusedOption: null
					});
				}

				return;
			}

			// prevent default event handlers
			event.preventDefault();

			// for the non-searchable select, toggle the menu
			if (!this.props.searchable) {
				// This code means that if a select is searchable, onClick the options menu will not appear, only on subsequent click will it open.
				this.focus();
				return this.setState({
					isOpen: !this.state.isOpen,
					focusedOption: null
				});
			}

			if (this.state.isFocused) {
				// On iOS, we can get into a state where we think the input is focused but it isn't really,
				// since iOS ignores programmatic calls to input.focus() that weren't triggered by a click event.
				// Call focus() again here to be safe.
				this.focus();

				var input = this.input;
				var toOpen = true;

				if (typeof input.getInput === 'function') {
					// Get the actual DOM input if the ref is an <AutosizeInput /> component
					input = input.getInput();
				}

				// clears the value so that the cursor will be at the end of input when the component re-renders
				input.value = '';

				if (this._focusAfterClear) {
					toOpen = false;
					this._focusAfterClear = false;
				}

				// if the input is focused, ensure the menu is open
				this.setState({
					isOpen: toOpen,
					isPseudoFocused: false,
					focusedOption: null
				});
			} else {
				// otherwise, focus the input and open the menu
				this._openAfterFocus = this.props.openOnClick;
				this.focus();
				this.setState({ focusedOption: null });
			}
		}
	}, {
		key: 'handleMouseDownOnArrow',
		value: function handleMouseDownOnArrow(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}

			if (this.state.isOpen) {
				// prevent default event handlers
				event.stopPropagation();
				event.preventDefault();
				// close the menu
				this.closeMenu();
			} else {
				// If the menu isn't open, let the event bubble to the main handleMouseDown
				this.setState({
					isOpen: true
				});
			}
		}
	}, {
		key: 'handleMouseDownOnMenu',
		value: function handleMouseDownOnMenu(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}

			event.stopPropagation();
			event.preventDefault();

			this._openAfterFocus = true;
			this.focus();
		}
	}, {
		key: 'closeMenu',
		value: function closeMenu() {
			if (this.props.onCloseResetsInput) {
				this.setState({
					inputValue: this.handleInputValueChange(''),
					isOpen: false,
					isPseudoFocused: this.state.isFocused && !this.props.multi
				});
			} else {
				this.setState({
					isOpen: false,
					isPseudoFocused: this.state.isFocused && !this.props.multi
				});
			}
			this.hasScrolledToOption = false;
		}
	}, {
		key: 'handleInputFocus',
		value: function handleInputFocus(event) {
			if (this.props.disabled) return;

			var toOpen = this.state.isOpen || this._openAfterFocus || this.props.openOnFocus;
			toOpen = this._focusAfterClear ? false : toOpen; //if focus happens after clear values, don't open dropdown yet.

			if (this.props.onFocus) {
				this.props.onFocus(event);
			}

			this.setState({
				isFocused: true,
				isOpen: !!toOpen
			});

			this._focusAfterClear = false;
			this._openAfterFocus = false;
		}
	}, {
		key: 'handleInputBlur',
		value: function handleInputBlur(event) {
			// The check for menu.contains(activeElement) is necessary to prevent IE11's scrollbar from closing the menu in certain contexts.
			if (this.menu && (this.menu === document.activeElement || this.menu.contains(document.activeElement))) {
				this.focus();
				return;
			}

			if (this.props.onBlur) {
				this.props.onBlur(event);
			}
			var onBlurredState = {
				isFocused: false,
				isOpen: false,
				isPseudoFocused: false
			};
			if (this.props.onBlurResetsInput) {
				onBlurredState.inputValue = this.handleInputValueChange('');
			}
			this.setState(onBlurredState);
		}
	}, {
		key: 'handleInputChange',
		value: function handleInputChange(event) {
			var newInputValue = event.target.value;

			if (this.state.inputValue !== event.target.value) {
				newInputValue = this.handleInputValueChange(newInputValue);
			}

			this.setState({
				inputValue: newInputValue,
				isOpen: true,
				isPseudoFocused: false
			});
		}
	}, {
		key: 'setInputValue',
		value: function setInputValue(newValue) {
			if (this.props.onInputChange) {
				var nextState = this.props.onInputChange(newValue);
				if (nextState != null && (typeof nextState === 'undefined' ? 'undefined' : _typeof(nextState)) !== 'object') {
					newValue = '' + nextState;
				}
			}
			this.setState({
				inputValue: newValue
			});
		}
	}, {
		key: 'handleInputValueChange',
		value: function handleInputValueChange(newValue) {
			if (this.props.onInputChange) {
				var nextState = this.props.onInputChange(newValue);
				// Note: != used deliberately here to catch undefined and null
				if (nextState != null && (typeof nextState === 'undefined' ? 'undefined' : _typeof(nextState)) !== 'object') {
					newValue = '' + nextState;
				}
			}
			return newValue;
		}
	}, {
		key: 'handleKeyDown',
		value: function handleKeyDown(event) {
			if (this.props.disabled) return;

			if (typeof this.props.onInputKeyDown === 'function') {
				this.props.onInputKeyDown(event);
				if (event.defaultPrevented) {
					return;
				}
			}

			switch (event.keyCode) {
				case 8:
					// backspace
					if (!this.state.inputValue && this.props.backspaceRemoves) {
						event.preventDefault();
						this.popValue();
					}
					break;
				case 9:
					// tab
					if (event.shiftKey || !this.state.isOpen || !this.props.tabSelectsValue) {
						break;
					}
					event.preventDefault();
					this.selectFocusedOption();
					break;
				case 13:
					// enter
					event.preventDefault();
					event.stopPropagation();
					if (this.state.isOpen) {
						this.selectFocusedOption();
					} else {
						this.focusNextOption();
					}
					break;
				case 27:
					// escape
					event.preventDefault();
					if (this.state.isOpen) {
						this.closeMenu();
						event.stopPropagation();
					} else if (this.props.clearable && this.props.escapeClearsValue) {
						this.clearValue(event);
						event.stopPropagation();
					}
					break;
				case 32:
					// space
					if (this.props.searchable) {
						break;
					}
					event.preventDefault();
					if (!this.state.isOpen) {
						this.focusNextOption();
						break;
					}
					event.stopPropagation();
					this.selectFocusedOption();
					break;
				case 38:
					// up
					event.preventDefault();
					this.focusPreviousOption();
					break;
				case 40:
					// down
					event.preventDefault();
					this.focusNextOption();
					break;
				case 33:
					// page up
					event.preventDefault();
					this.focusPageUpOption();
					break;
				case 34:
					// page down
					event.preventDefault();
					this.focusPageDownOption();
					break;
				case 35:
					// end key
					if (event.shiftKey) {
						break;
					}
					event.preventDefault();
					this.focusEndOption();
					break;
				case 36:
					// home key
					if (event.shiftKey) {
						break;
					}
					event.preventDefault();
					this.focusStartOption();
					break;
				case 46:
					// delete
					if (!this.state.inputValue && this.props.deleteRemoves) {
						event.preventDefault();
						this.popValue();
					}
					break;
			}
		}
	}, {
		key: 'handleValueClick',
		value: function handleValueClick(option, event) {
			if (!this.props.onValueClick) return;
			this.props.onValueClick(option, event);
		}
	}, {
		key: 'handleMenuScroll',
		value: function handleMenuScroll(event) {
			if (!this.props.onMenuScrollToBottom) return;
			var target = event.target;

			if (target.scrollHeight > target.offsetHeight && target.scrollHeight - target.offsetHeight - target.scrollTop <= 0) {
				this.props.onMenuScrollToBottom();
			}
		}
	}, {
		key: 'getOptionLabel',
		value: function getOptionLabel(op) {
			return op[this.props.labelKey];
		}

		/**
   * Turns a value into an array from the given options
   * @param {String|Number|Array} value		- the value of the select input
   * @param {Object}		nextProps	- optionally specify the nextProps so the returned array uses the latest configuration
   * @returns	{Array}	the value of the select represented in an array
   */

	}, {
		key: 'getValueArray',
		value: function getValueArray(value) {
			var nextProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

			/** support optionally passing in the `nextProps` so `componentWillReceiveProps` updates will function as expected */
			var props = (typeof nextProps === 'undefined' ? 'undefined' : _typeof(nextProps)) === 'object' ? nextProps : this.props;
			if (props.multi) {
				if (typeof value === 'string') {
					value = value.split(props.delimiter);
				}
				if (!Array.isArray(value)) {
					if (value === null || value === undefined) return [];
					value = [value];
				}
				return value.map(function (value) {
					return expandValue(value, props);
				}).filter(function (i) {
					return i;
				});
			}
			var expandedValue = expandValue(value, props);
			return expandedValue ? [expandedValue] : [];
		}
	}, {
		key: 'setValue',
		value: function setValue(value) {
			var _this2 = this;

			if (this.props.autoBlur) {
				this.blurInput();
			}
			if (this.props.required) {
				var required = handleRequired(value, this.props.multi);
				this.setState({ required: required });
			}
			if (this.props.simpleValue && value) {
				value = this.props.multi ? value.map(function (i) {
					return i[_this2.props.valueKey];
				}).join(this.props.delimiter) : value[this.props.valueKey];
			}
			if (this.props.onChange) {
				this.props.onChange(value);
			}
		}
	}, {
		key: 'selectValue',
		value: function selectValue(value) {
			var _this3 = this;

			// NOTE: we actually add/set the value in a callback to make sure the
			// input value is empty to avoid styling issues in Chrome
			if (this.props.closeOnSelect) {
				this.hasScrolledToOption = false;
			}
			var updatedValue = this.props.onSelectResetsInput ? '' : this.state.inputValue;
			if (this.props.multi) {
				this.setState({
					focusedIndex: null,
					inputValue: this.handleInputValueChange(updatedValue),
					isOpen: !this.props.closeOnSelect
				}, function () {
					var valueArray = _this3.getValueArray(_this3.props.value);
					if (valueArray.some(function (i) {
						return i[_this3.props.valueKey] === value[_this3.props.valueKey];
					})) {
						_this3.removeValue(value);
					} else {
						_this3.addValue(value);
					}
				});
			} else {
				this.setState({
					inputValue: this.handleInputValueChange(updatedValue),
					isOpen: !this.props.closeOnSelect,
					isPseudoFocused: this.state.isFocused
				}, function () {
					_this3.setValue(value);
				});
			}
		}
	}, {
		key: 'addValue',
		value: function addValue(value) {
			var valueArray = this.getValueArray(this.props.value);
			var visibleOptions = this._visibleOptions.filter(function (val) {
				return !val.disabled;
			});
			var lastValueIndex = visibleOptions.indexOf(value);
			this.setValue(valueArray.concat(value));
			if (!this.props.closeOnSelect) {
				return;
			}
			if (visibleOptions.length - 1 === lastValueIndex) {
				// the last option was selected; focus the second-last one
				this.focusOption(visibleOptions[lastValueIndex - 1]);
			} else if (visibleOptions.length > lastValueIndex) {
				// focus the option below the selected one
				this.focusOption(visibleOptions[lastValueIndex + 1]);
			}
		}
	}, {
		key: 'popValue',
		value: function popValue() {
			var valueArray = this.getValueArray(this.props.value);
			if (!valueArray.length) return;
			if (valueArray[valueArray.length - 1].clearableValue === false) return;
			this.setValue(this.props.multi ? valueArray.slice(0, valueArray.length - 1) : null);
		}
	}, {
		key: 'removeValue',
		value: function removeValue(value) {
			var _this4 = this;

			var valueArray = this.getValueArray(this.props.value);
			this.setValue(valueArray.filter(function (i) {
				return i[_this4.props.valueKey] !== value[_this4.props.valueKey];
			}));
			this.focus();
		}
	}, {
		key: 'clearValue',
		value: function clearValue(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, ignore it.
			if (event && event.type === 'mousedown' && event.button !== 0) {
				return;
			}

			event.preventDefault();

			this.setValue(this.getResetValue());
			this.setState({
				inputValue: this.handleInputValueChange(''),
				isOpen: false
			}, this.focus);

			this._focusAfterClear = true;
		}
	}, {
		key: 'getResetValue',
		value: function getResetValue() {
			if (this.props.resetValue !== undefined) {
				return this.props.resetValue;
			} else if (this.props.multi) {
				return [];
			} else {
				return null;
			}
		}
	}, {
		key: 'focusOption',
		value: function focusOption(option) {
			this.setState({
				focusedOption: option
			});
		}
	}, {
		key: 'focusNextOption',
		value: function focusNextOption() {
			this.focusAdjacentOption('next');
		}
	}, {
		key: 'focusPreviousOption',
		value: function focusPreviousOption() {
			this.focusAdjacentOption('previous');
		}
	}, {
		key: 'focusPageUpOption',
		value: function focusPageUpOption() {
			this.focusAdjacentOption('page_up');
		}
	}, {
		key: 'focusPageDownOption',
		value: function focusPageDownOption() {
			this.focusAdjacentOption('page_down');
		}
	}, {
		key: 'focusStartOption',
		value: function focusStartOption() {
			this.focusAdjacentOption('start');
		}
	}, {
		key: 'focusEndOption',
		value: function focusEndOption() {
			this.focusAdjacentOption('end');
		}
	}, {
		key: 'focusAdjacentOption',
		value: function focusAdjacentOption(dir) {
			var options = this._visibleOptions.map(function (option, index) {
				return { option: option, index: index };
			}).filter(function (option) {
				return !option.option.disabled;
			});
			this._scrollToFocusedOptionOnUpdate = true;
			if (!this.state.isOpen) {
				var newState = {
					focusedOption: this._focusedOption || (options.length ? options[dir === 'next' ? 0 : options.length - 1].option : null),
					isOpen: true
				};
				if (this.props.onSelectResetsInput) {
					newState.inputValue = '';
				}
				this.setState(newState);
				return;
			}
			if (!options.length) return;
			var focusedIndex = -1;
			for (var i = 0; i < options.length; i++) {
				if (this._focusedOption === options[i].option) {
					focusedIndex = i;
					break;
				}
			}
			if (dir === 'next' && focusedIndex !== -1) {
				focusedIndex = (focusedIndex + 1) % options.length;
			} else if (dir === 'previous') {
				if (focusedIndex > 0) {
					focusedIndex = focusedIndex - 1;
				} else {
					focusedIndex = options.length - 1;
				}
			} else if (dir === 'start') {
				focusedIndex = 0;
			} else if (dir === 'end') {
				focusedIndex = options.length - 1;
			} else if (dir === 'page_up') {
				var potentialIndex = focusedIndex - this.props.pageSize;
				if (potentialIndex < 0) {
					focusedIndex = 0;
				} else {
					focusedIndex = potentialIndex;
				}
			} else if (dir === 'page_down') {
				var _potentialIndex = focusedIndex + this.props.pageSize;
				if (_potentialIndex > options.length - 1) {
					focusedIndex = options.length - 1;
				} else {
					focusedIndex = _potentialIndex;
				}
			}

			if (focusedIndex === -1) {
				focusedIndex = 0;
			}

			this.setState({
				focusedIndex: options[focusedIndex].index,
				focusedOption: options[focusedIndex].option
			});
		}
	}, {
		key: 'getFocusedOption',
		value: function getFocusedOption() {
			return this._focusedOption;
		}
	}, {
		key: 'selectFocusedOption',
		value: function selectFocusedOption() {
			if (this._focusedOption) {
				return this.selectValue(this._focusedOption);
			}
		}
	}, {
		key: 'renderLoading',
		value: function renderLoading() {
			if (!this.props.isLoading) return;
			return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'span',
				{ className: 'Select-loading-zone', 'aria-hidden': 'true' },
				__WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement('span', { className: 'Select-loading' })
			);
		}
	}, {
		key: 'renderValue',
		value: function renderValue(valueArray, isOpen) {
			var _this5 = this;

			var renderLabel = this.props.valueRenderer || this.getOptionLabel;
			var ValueComponent = this.props.valueComponent;
			if (!valueArray.length) {
				var showPlaceholder = shouldShowPlaceholder(this.state, this.props, isOpen);
				return showPlaceholder ? __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
					'div',
					{ className: 'Select-placeholder' },
					this.props.placeholder
				) : null;
			}
			var onClick = this.props.onValueClick ? this.handleValueClick : null;
			if (this.props.multi) {
				return valueArray.map(function (value, i) {
					return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
						ValueComponent,
						{
							disabled: _this5.props.disabled || value.clearableValue === false,
							id: _this5._instancePrefix + '-value-' + i,
							instancePrefix: _this5._instancePrefix,
							key: 'value-' + i + '-' + value[_this5.props.valueKey],
							onClick: onClick,
							onRemove: _this5.removeValue,
							placeholder: _this5.props.placeholder,
							value: value,
							values: valueArray
						},
						renderLabel(value, i),
						__WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
							'span',
							{ className: 'Select-aria-only' },
							'\xA0'
						)
					);
				});
			} else if (shouldShowValue(this.state, this.props)) {
				if (isOpen) onClick = null;
				return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
					ValueComponent,
					{
						disabled: this.props.disabled,
						id: this._instancePrefix + '-value-item',
						instancePrefix: this._instancePrefix,
						onClick: onClick,
						placeholder: this.props.placeholder,
						value: valueArray[0]
					},
					renderLabel(valueArray[0])
				);
			}
		}
	}, {
		key: 'renderInput',
		value: function renderInput(valueArray, focusedOptionIndex) {
			var _classNames,
			    _this6 = this;

			var className = __WEBPACK_IMPORTED_MODULE_1_classnames___default()('Select-input', this.props.inputProps.className);
			var isOpen = this.state.isOpen;

			var ariaOwns = __WEBPACK_IMPORTED_MODULE_1_classnames___default()((_classNames = {}, defineProperty(_classNames, this._instancePrefix + '-list', isOpen), defineProperty(_classNames, this._instancePrefix + '-backspace-remove-message', this.props.multi && !this.props.disabled && this.state.isFocused && !this.state.inputValue), _classNames));

			var value = this.state.inputValue;
			if (value && !this.props.onSelectResetsInput && !this.state.isFocused) {
				// it hides input value when it is not focused and was not reset on select
				value = '';
			}

			var inputProps = _extends({}, this.props.inputProps, {
				'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',
				'aria-describedby': this.props['aria-describedby'],
				'aria-expanded': '' + isOpen,
				'aria-haspopup': '' + isOpen,
				'aria-label': this.props['aria-label'],
				'aria-labelledby': this.props['aria-labelledby'],
				'aria-owns': ariaOwns,
				onBlur: this.handleInputBlur,
				onChange: this.handleInputChange,
				onFocus: this.handleInputFocus,
				ref: function ref(_ref) {
					return _this6.input = _ref;
				},
				role: 'combobox',
				required: this.state.required,
				tabIndex: this.props.tabIndex,
				value: value
			});

			if (this.props.inputRenderer) {
				return this.props.inputRenderer(inputProps);
			}

			if (this.props.disabled || !this.props.searchable) {
				var divProps = objectWithoutProperties(this.props.inputProps, []);


				var _ariaOwns = __WEBPACK_IMPORTED_MODULE_1_classnames___default()(defineProperty({}, this._instancePrefix + '-list', isOpen));
				return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement('div', _extends({}, divProps, {
					'aria-expanded': isOpen,
					'aria-owns': _ariaOwns,
					'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',
					'aria-disabled': '' + this.props.disabled,
					'aria-label': this.props['aria-label'],
					'aria-labelledby': this.props['aria-labelledby'],
					className: className,
					onBlur: this.handleInputBlur,
					onFocus: this.handleInputFocus,
					ref: function ref(_ref2) {
						return _this6.input = _ref2;
					},
					role: 'combobox',
					style: { border: 0, width: 1, display: 'inline-block' },
					tabIndex: this.props.tabIndex || 0
				}));
			}

			if (this.props.autosize) {
				return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react_input_autosize___default.a, _extends({ id: this.props.id }, inputProps, { className: className, minWidth: '5' }));
			}
			return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'div',
				{ className: className, key: 'input-wrap', style: { display: 'inline-block' } },
				__WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement('input', _extends({ id: this.props.id }, inputProps))
			);
		}
	}, {
		key: 'renderClear',
		value: function renderClear() {
			var valueArray = this.getValueArray(this.props.value);
			if (!this.props.clearable || !valueArray.length || this.props.disabled || this.props.isLoading) return;
			var ariaLabel = this.props.multi ? this.props.clearAllText : this.props.clearValueText;
			var clear = this.props.clearRenderer();

			return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'span',
				{
					'aria-label': ariaLabel,
					className: 'Select-clear-zone',
					onMouseDown: this.clearValue,
					onTouchEnd: this.handleTouchEndClearValue,
					onTouchMove: this.handleTouchMove,
					onTouchStart: this.handleTouchStart,
					title: ariaLabel
				},
				clear
			);
		}
	}, {
		key: 'renderArrow',
		value: function renderArrow() {
			if (!this.props.arrowRenderer) return;

			var onMouseDown = this.handleMouseDownOnArrow;
			var isOpen = this.state.isOpen;
			var arrow = this.props.arrowRenderer({ onMouseDown: onMouseDown, isOpen: isOpen });

			if (!arrow) {
				return null;
			}

			return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'span',
				{
					className: 'Select-arrow-zone',
					onMouseDown: onMouseDown
				},
				arrow
			);
		}
	}, {
		key: 'filterOptions',
		value: function filterOptions$$1(excludeOptions) {
			var filterValue = this.state.inputValue;
			var options = this.props.options || [];
			if (this.props.filterOptions) {
				// Maintain backwards compatibility with boolean attribute
				var filterOptions$$1 = typeof this.props.filterOptions === 'function' ? this.props.filterOptions : filterOptions;

				return filterOptions$$1(options, filterValue, excludeOptions, {
					filterOption: this.props.filterOption,
					ignoreAccents: this.props.ignoreAccents,
					ignoreCase: this.props.ignoreCase,
					labelKey: this.props.labelKey,
					matchPos: this.props.matchPos,
					matchProp: this.props.matchProp,
					trimFilter: this.props.trimFilter,
					valueKey: this.props.valueKey
				});
			} else {
				return options;
			}
		}
	}, {
		key: 'onOptionRef',
		value: function onOptionRef(ref, isFocused) {
			if (isFocused) {
				this.focused = ref;
			}
		}
	}, {
		key: 'renderMenu',
		value: function renderMenu(options, valueArray, focusedOption) {
			if (options && options.length) {
				return this.props.menuRenderer({
					focusedOption: focusedOption,
					focusOption: this.focusOption,
					inputValue: this.state.inputValue,
					instancePrefix: this._instancePrefix,
					labelKey: this.props.labelKey,
					onFocus: this.focusOption,
					onOptionRef: this.onOptionRef,
					onSelect: this.selectValue,
					optionClassName: this.props.optionClassName,
					optionComponent: this.props.optionComponent,
					optionRenderer: this.props.optionRenderer || this.getOptionLabel,
					options: options,
					removeValue: this.removeValue,
					selectValue: this.selectValue,
					valueArray: valueArray,
					valueKey: this.props.valueKey
				});
			} else if (this.props.noResultsText) {
				return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
					'div',
					{ className: 'Select-noresults' },
					this.props.noResultsText
				);
			} else {
				return null;
			}
		}
	}, {
		key: 'renderHiddenField',
		value: function renderHiddenField(valueArray) {
			var _this7 = this;

			if (!this.props.name) return;
			if (this.props.joinValues) {
				var value = valueArray.map(function (i) {
					return stringifyValue(i[_this7.props.valueKey]);
				}).join(this.props.delimiter);
				return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement('input', {
					disabled: this.props.disabled,
					name: this.props.name,
					ref: function ref(_ref3) {
						return _this7.value = _ref3;
					},
					type: 'hidden',
					value: value
				});
			}
			return valueArray.map(function (item, index) {
				return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement('input', {
					disabled: _this7.props.disabled,
					key: 'hidden.' + index,
					name: _this7.props.name,
					ref: 'value' + index,
					type: 'hidden',
					value: stringifyValue(item[_this7.props.valueKey])
				});
			});
		}
	}, {
		key: 'getFocusableOptionIndex',
		value: function getFocusableOptionIndex(selectedOption) {
			var options = this._visibleOptions;
			if (!options.length) return null;

			var valueKey = this.props.valueKey;
			var focusedOption = this.state.focusedOption || selectedOption;
			if (focusedOption && !focusedOption.disabled) {
				var focusedOptionIndex = -1;
				options.some(function (option, index) {
					var isOptionEqual = option[valueKey] === focusedOption[valueKey];
					if (isOptionEqual) {
						focusedOptionIndex = index;
					}
					return isOptionEqual;
				});
				if (focusedOptionIndex !== -1) {
					return focusedOptionIndex;
				}
			}

			for (var i = 0; i < options.length; i++) {
				if (!options[i].disabled) return i;
			}
			return null;
		}
	}, {
		key: 'renderOuter',
		value: function renderOuter(options, valueArray, focusedOption) {
			var _this8 = this;

			var menu = this.renderMenu(options, valueArray, focusedOption);
			if (!menu) {
				return null;
			}

			return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'div',
				{ ref: function ref(_ref5) {
						return _this8.menuContainer = _ref5;
					}, className: 'Select-menu-outer', style: this.props.menuContainerStyle },
				__WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
					'div',
					{
						className: 'Select-menu',
						id: this._instancePrefix + '-list',
						onMouseDown: this.handleMouseDownOnMenu,
						onScroll: this.handleMenuScroll,
						ref: function ref(_ref4) {
							return _this8.menu = _ref4;
						},
						role: 'listbox',
						style: this.props.menuStyle,
						tabIndex: -1
					},
					menu
				)
			);
		}
	}, {
		key: 'render',
		value: function render() {
			var _this9 = this;

			var valueArray = this.getValueArray(this.props.value);
			var options = this._visibleOptions = this.filterOptions(this.props.multi && this.props.removeSelected ? valueArray : null);
			var isOpen = this.state.isOpen;
			if (this.props.multi && !options.length && valueArray.length && !this.state.inputValue) isOpen = false;
			var focusedOptionIndex = this.getFocusableOptionIndex(valueArray[0]);

			var focusedOption = null;
			if (focusedOptionIndex !== null) {
				focusedOption = this._focusedOption = options[focusedOptionIndex];
			} else {
				focusedOption = this._focusedOption = null;
			}
			var className = __WEBPACK_IMPORTED_MODULE_1_classnames___default()('Select', this.props.className, {
				'has-value': valueArray.length,
				'is-clearable': this.props.clearable,
				'is-disabled': this.props.disabled,
				'is-focused': this.state.isFocused,
				'is-loading': this.props.isLoading,
				'is-open': isOpen,
				'is-pseudo-focused': this.state.isPseudoFocused,
				'is-searchable': this.props.searchable,
				'Select--multi': this.props.multi,
				'Select--rtl': this.props.rtl,
				'Select--single': !this.props.multi
			});

			var removeMessage = null;
			if (this.props.multi && !this.props.disabled && valueArray.length && !this.state.inputValue && this.state.isFocused && this.props.backspaceRemoves) {
				removeMessage = __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
					'span',
					{ id: this._instancePrefix + '-backspace-remove-message', className: 'Select-aria-only', 'aria-live': 'assertive' },
					this.props.backspaceToRemoveMessage.replace('{label}', valueArray[valueArray.length - 1][this.props.labelKey])
				);
			}

			return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				'div',
				{ ref: function ref(_ref7) {
						return _this9.wrapper = _ref7;
					},
					className: className,
					style: this.props.wrapperStyle },
				this.renderHiddenField(valueArray),
				__WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
					'div',
					{ ref: function ref(_ref6) {
							return _this9.control = _ref6;
						},
						className: 'Select-control',
						onKeyDown: this.handleKeyDown,
						onMouseDown: this.handleMouseDown,
						onTouchEnd: this.handleTouchEnd,
						onTouchMove: this.handleTouchMove,
						onTouchStart: this.handleTouchStart,
						style: this.props.style
					},
					__WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
						'div',
						{ className: 'Select-multi-value-wrapper', id: this._instancePrefix + '-value' },
						this.renderValue(valueArray, isOpen),
						this.renderInput(valueArray, focusedOptionIndex)
					),
					removeMessage,
					this.renderLoading(),
					this.renderClear(),
					this.renderArrow()
				),
				isOpen ? this.renderOuter(options, valueArray, focusedOption) : null
			);
		}
	}]);
	return Select;
}(__WEBPACK_IMPORTED_MODULE_3_react___default.a.Component);

Select$1.propTypes = {
	'aria-describedby': __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // html id(s) of element(s) that should be used to describe this input (for assistive tech)
	'aria-label': __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // aria label (for assistive tech)
	'aria-labelledby': __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // html id of an element that should be used as the label (for assistive tech)
	arrowRenderer: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // create the drop-down caret element
	autoBlur: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // automatically blur the component when an option is selected
	autoFocus: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // autofocus the component on mount
	autofocus: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // deprecated; use autoFocus instead
	autosize: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether to enable autosizing or not
	backspaceRemoves: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether backspace removes an item if there is no text input
	backspaceToRemoveMessage: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // message to use for screenreaders to press backspace to remove the current item - {label} is replaced with the item label
	className: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // className for the outer element
	clearAllText: stringOrNode, // title for the "clear" control when multi: true
	clearRenderer: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // create clearable x element
	clearValueText: stringOrNode, // title for the "clear" control
	clearable: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // should it be possible to reset value
	closeOnSelect: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether to close the menu when a value is selected
	deleteRemoves: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether delete removes an item if there is no text input
	delimiter: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // delimiter to use to join multiple values for the hidden field value
	disabled: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether the Select is disabled or not
	escapeClearsValue: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether escape clears the value when the menu is closed
	filterOption: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // method to filter a single option (option, filterString)
	filterOptions: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.any, // boolean to enable default filtering or function to filter the options array ([options], filterString, [values])
	id: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // html id to set on the input element for accessibility or tests
	ignoreAccents: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether to strip diacritics when filtering
	ignoreCase: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether to perform case-insensitive filtering
	inputProps: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object, // custom attributes for the Input
	inputRenderer: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // returns a custom input component
	instanceId: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // set the components instanceId
	isLoading: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether the Select is loading externally or not (such as options being loaded)
	joinValues: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // joins multiple values into a single form field with the delimiter (legacy mode)
	labelKey: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // path of the label value in option objects
	matchPos: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // (any|start) match the start or entire string when filtering
	matchProp: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // (any|label|value) which option property to filter on
	menuBuffer: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number, // optional buffer (in px) between the bottom of the viewport and the bottom of the menu
	menuContainerStyle: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object, // optional style to apply to the menu container
	menuRenderer: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // renders a custom menu with options
	menuStyle: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object, // optional style to apply to the menu
	multi: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // multi-value input
	name: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // generates a hidden <input /> tag with this field name for html forms
	noResultsText: stringOrNode, // placeholder displayed when there are no matching search results
	onBlur: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // onBlur handler: function (event) {}
	onBlurResetsInput: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether input is cleared on blur
	onChange: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // onChange handler: function (newValue) {}
	onClose: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // fires when the menu is closed
	onCloseResetsInput: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether input is cleared when menu is closed through the arrow
	onFocus: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // onFocus handler: function (event) {}
	onInputChange: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // onInputChange handler: function (inputValue) {}
	onInputKeyDown: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // input keyDown handler: function (event) {}
	onMenuScrollToBottom: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // fires when the menu is scrolled to the bottom; can be used to paginate options
	onOpen: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // fires when the menu is opened
	onSelectResetsInput: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether input is cleared on select (works only for multiselect)
	onValueClick: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // onClick handler for value labels: function (value, event) {}
	openOnClick: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // boolean to control opening the menu when the control is clicked
	openOnFocus: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // always open options menu on focus
	optionClassName: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // additional class(es) to apply to the <Option /> elements
	optionComponent: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // option component to render in dropdown
	optionRenderer: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // optionRenderer: function (option) {}
	options: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array, // array of options
	pageSize: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number, // number of entries to page when using page up/down keys
	placeholder: stringOrNode, // field placeholder, displayed when there's no value
	removeSelected: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether the selected option is removed from the dropdown on multi selects
	required: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // applies HTML5 required attribute when needed
	resetValue: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.any, // value to use when you clear the control
	rtl: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // set to true in order to use react-select in right-to-left direction
	scrollMenuIntoView: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // boolean to enable the viewport to shift so that the full menu fully visible when engaged
	searchable: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether to enable searching feature or not
	simpleValue: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // pass the value to onChange as a simple value (legacy pre 1.0 mode), defaults to false
	style: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object, // optional style to apply to the control
	tabIndex: stringOrNumber, // optional tab index of the control
	tabSelectsValue: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether to treat tabbing out while focused to be value selection
	trimFilter: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // whether to trim whitespace around filter value
	value: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.any, // initial field value
	valueComponent: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // value component to render
	valueKey: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, // path of the label value in option objects
	valueRenderer: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // valueRenderer: function (option) {}
	wrapperStyle: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object // optional style to apply to the component wrapper
};

Select$1.defaultProps = {
	arrowRenderer: arrowRenderer,
	autosize: true,
	backspaceRemoves: true,
	backspaceToRemoveMessage: 'Press backspace to remove {label}',
	clearable: true,
	clearAllText: 'Clear all',
	clearRenderer: clearRenderer,
	clearValueText: 'Clear value',
	closeOnSelect: true,
	deleteRemoves: true,
	delimiter: ',',
	disabled: false,
	escapeClearsValue: true,
	filterOptions: filterOptions,
	ignoreAccents: true,
	ignoreCase: true,
	inputProps: {},
	isLoading: false,
	joinValues: false,
	labelKey: 'label',
	matchPos: 'any',
	matchProp: 'any',
	menuBuffer: 0,
	menuRenderer: menuRenderer,
	multi: false,
	noResultsText: 'No results found',
	onBlurResetsInput: true,
	onCloseResetsInput: true,
	onSelectResetsInput: true,
	openOnClick: true,
	optionComponent: Option,
	pageSize: 5,
	placeholder: 'Select...',
	removeSelected: true,
	required: false,
	rtl: false,
	scrollMenuIntoView: true,
	searchable: true,
	simpleValue: false,
	tabSelectsValue: true,
	trimFilter: true,
	valueComponent: Value,
	valueKey: 'value'
};

var propTypes = {
	autoload: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool.isRequired, // automatically call the `loadOptions` prop on-mount; defaults to true
	cache: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.any, // object to use to cache results; set to null/false to disable caching
	children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func.isRequired, // Child function responsible for creating the inner Select component; (props: Object): PropTypes.element
	ignoreAccents: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // strip diacritics when filtering; defaults to true
	ignoreCase: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // perform case-insensitive filtering; defaults to true
	loadOptions: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func.isRequired, // callback to load options asynchronously; (inputValue: string, callback: Function): ?Promise
	loadingPlaceholder: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([// replaces the placeholder while options are loading
	__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node]),
	multi: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool, // multi-value input
	noResultsText: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([// field noResultsText, displayed when no options come back from the server
	__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node]),
	onChange: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // onChange handler: function (newValue) {}
	onInputChange: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, // optional for keeping track of what is being typed
	options: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array.isRequired, // array of options
	placeholder: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([// field placeholder, displayed when there's no value (shared with Select)
	__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node]),
	searchPromptText: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([// label to prompt for search input
	__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node]),
	value: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.any // initial field value
};

var defaultCache = {};

var defaultChildren = function defaultChildren(props) {
	return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(Select$1, props);
};

var defaultProps = {
	autoload: true,
	cache: defaultCache,
	children: defaultChildren,
	ignoreAccents: true,
	ignoreCase: true,
	loadingPlaceholder: 'Loading...',
	options: [],
	searchPromptText: 'Type to search'
};

var Async = function (_Component) {
	inherits(Async, _Component);

	function Async(props, context) {
		classCallCheck(this, Async);

		var _this = possibleConstructorReturn(this, (Async.__proto__ || Object.getPrototypeOf(Async)).call(this, props, context));

		_this._cache = props.cache === defaultCache ? {} : props.cache;

		_this.state = {
			inputValue: '',
			isLoading: false,
			options: props.options
		};

		_this.onInputChange = _this.onInputChange.bind(_this);
		return _this;
	}

	createClass(Async, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var autoload = this.props.autoload;


			if (autoload) {
				this.loadOptions('');
			}
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			if (nextProps.options !== this.props.options) {
				this.setState({
					options: nextProps.options
				});
			}
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this._callback = null;
		}
	}, {
		key: 'loadOptions',
		value: function loadOptions(inputValue) {
			var _this2 = this;

			var loadOptions = this.props.loadOptions;

			var cache = this._cache;

			if (cache && Object.prototype.hasOwnProperty.call(cache, inputValue)) {
				this._callback = null;

				this.setState({
					isLoading: false,
					options: cache[inputValue]
				});

				return;
			}

			var callback = function callback(error, data) {
				var options = data && data.options || [];

				if (cache) {
					cache[inputValue] = options;
				}

				if (callback === _this2._callback) {
					_this2._callback = null;

					_this2.setState({
						isLoading: false,
						options: options
					});
				}
			};

			// Ignore all but the most recent request
			this._callback = callback;

			var promise = loadOptions(inputValue, callback);
			if (promise) {
				promise.then(function (data) {
					return callback(null, data);
				}, function (error) {
					return callback(error);
				});
			}

			if (this._callback && !this.state.isLoading) {
				this.setState({
					isLoading: true
				});
			}
		}
	}, {
		key: 'onInputChange',
		value: function onInputChange(inputValue) {
			var _props = this.props,
			    ignoreAccents = _props.ignoreAccents,
			    ignoreCase = _props.ignoreCase,
			    onInputChange = _props.onInputChange;

			var newInputValue = inputValue;

			if (onInputChange) {
				var value = onInputChange(newInputValue);
				// Note: != used deliberately here to catch undefined and null
				if (value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
					newInputValue = '' + value;
				}
			}

			var transformedInputValue = newInputValue;

			if (ignoreAccents) {
				transformedInputValue = stripDiacritics(transformedInputValue);
			}

			if (ignoreCase) {
				transformedInputValue = transformedInputValue.toLowerCase();
			}

			this.setState({ inputValue: newInputValue });
			this.loadOptions(transformedInputValue);

			// Return new input value, but without applying toLowerCase() to avoid modifying the user's view case of the input while typing.
			return newInputValue;
		}
	}, {
		key: 'noResultsText',
		value: function noResultsText() {
			var _props2 = this.props,
			    loadingPlaceholder = _props2.loadingPlaceholder,
			    noResultsText = _props2.noResultsText,
			    searchPromptText = _props2.searchPromptText;
			var _state = this.state,
			    inputValue = _state.inputValue,
			    isLoading = _state.isLoading;


			if (isLoading) {
				return loadingPlaceholder;
			}
			if (inputValue && noResultsText) {
				return noResultsText;
			}
			return searchPromptText;
		}
	}, {
		key: 'focus',
		value: function focus() {
			this.select.focus();
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var _props3 = this.props,
			    children = _props3.children,
			    loadingPlaceholder = _props3.loadingPlaceholder,
			    placeholder = _props3.placeholder;
			var _state2 = this.state,
			    isLoading = _state2.isLoading,
			    options = _state2.options;


			var props = {
				noResultsText: this.noResultsText(),
				placeholder: isLoading ? loadingPlaceholder : placeholder,
				options: isLoading && loadingPlaceholder ? [] : options,
				ref: function ref(_ref) {
					return _this3.select = _ref;
				}
			};

			return children(_extends({}, this.props, props, {
				isLoading: isLoading,
				onInputChange: this.onInputChange
			}));
		}
	}]);
	return Async;
}(__WEBPACK_IMPORTED_MODULE_3_react__["Component"]);

Async.propTypes = propTypes;
Async.defaultProps = defaultProps;

var CreatableSelect = function (_React$Component) {
	inherits(CreatableSelect, _React$Component);

	function CreatableSelect(props, context) {
		classCallCheck(this, CreatableSelect);

		var _this = possibleConstructorReturn(this, (CreatableSelect.__proto__ || Object.getPrototypeOf(CreatableSelect)).call(this, props, context));

		_this.filterOptions = _this.filterOptions.bind(_this);
		_this.menuRenderer = _this.menuRenderer.bind(_this);
		_this.onInputKeyDown = _this.onInputKeyDown.bind(_this);
		_this.onInputChange = _this.onInputChange.bind(_this);
		_this.onOptionSelect = _this.onOptionSelect.bind(_this);
		return _this;
	}

	createClass(CreatableSelect, [{
		key: 'createNewOption',
		value: function createNewOption() {
			var _props = this.props,
			    isValidNewOption = _props.isValidNewOption,
			    newOptionCreator = _props.newOptionCreator,
			    onNewOptionClick = _props.onNewOptionClick,
			    _props$options = _props.options,
			    options = _props$options === undefined ? [] : _props$options;


			if (isValidNewOption({ label: this.inputValue })) {
				var option = newOptionCreator({ label: this.inputValue, labelKey: this.labelKey, valueKey: this.valueKey });
				var _isOptionUnique = this.isOptionUnique({ option: option, options: options });

				// Don't add the same option twice.
				if (_isOptionUnique) {
					if (onNewOptionClick) {
						onNewOptionClick(option);
					} else {
						options.unshift(option);

						this.select.selectValue(option);
					}
				}
			}
		}
	}, {
		key: 'filterOptions',
		value: function filterOptions$$1() {
			var _props2 = this.props,
			    filterOptions$$1 = _props2.filterOptions,
			    isValidNewOption = _props2.isValidNewOption,
			    promptTextCreator = _props2.promptTextCreator,
			    showNewOptionAtTop = _props2.showNewOptionAtTop;

			// TRICKY Check currently selected options as well.
			// Don't display a create-prompt for a value that's selected.
			// This covers async edge-cases where a newly-created Option isn't yet in the async-loaded array.

			var excludeOptions = (arguments.length <= 2 ? undefined : arguments[2]) || [];

			var filteredOptions = filterOptions$$1.apply(undefined, arguments) || [];

			if (isValidNewOption({ label: this.inputValue })) {
				var _newOptionCreator = this.props.newOptionCreator;


				var option = _newOptionCreator({
					label: this.inputValue,
					labelKey: this.labelKey,
					valueKey: this.valueKey
				});

				// TRICKY Compare to all options (not just filtered options) in case option has already been selected).
				// For multi-selects, this would remove it from the filtered list.
				var _isOptionUnique2 = this.isOptionUnique({
					option: option,
					options: excludeOptions.concat(filteredOptions)
				});

				if (_isOptionUnique2) {
					var prompt = promptTextCreator(this.inputValue);

					this._createPlaceholderOption = _newOptionCreator({
						label: prompt,
						labelKey: this.labelKey,
						valueKey: this.valueKey
					});

					if (showNewOptionAtTop) {
						filteredOptions.unshift(this._createPlaceholderOption);
					} else {
						filteredOptions.push(this._createPlaceholderOption);
					}
				}
			}

			return filteredOptions;
		}
	}, {
		key: 'isOptionUnique',
		value: function isOptionUnique(_ref) {
			var option = _ref.option,
			    options = _ref.options;
			var isOptionUnique = this.props.isOptionUnique;


			options = options || this.props.options;

			return isOptionUnique({
				labelKey: this.labelKey,
				option: option,
				options: options,
				valueKey: this.valueKey
			});
		}
	}, {
		key: 'menuRenderer',
		value: function menuRenderer$$1(params) {
			var menuRenderer$$1 = this.props.menuRenderer;


			return menuRenderer$$1(_extends({}, params, {
				onSelect: this.onOptionSelect,
				selectValue: this.onOptionSelect
			}));
		}
	}, {
		key: 'onInputChange',
		value: function onInputChange(input) {
			var onInputChange = this.props.onInputChange;

			// This value may be needed in between Select mounts (when this.select is null)

			this.inputValue = input;

			if (onInputChange) {
				this.inputValue = onInputChange(input);
			}

			return this.inputValue;
		}
	}, {
		key: 'onInputKeyDown',
		value: function onInputKeyDown(event) {
			var _props3 = this.props,
			    shouldKeyDownEventCreateNewOption = _props3.shouldKeyDownEventCreateNewOption,
			    onInputKeyDown = _props3.onInputKeyDown;

			var focusedOption = this.select.getFocusedOption();

			if (focusedOption && focusedOption === this._createPlaceholderOption && shouldKeyDownEventCreateNewOption(event)) {
				this.createNewOption();

				// Prevent decorated Select from doing anything additional with this keyDown event
				event.preventDefault();
			} else if (onInputKeyDown) {
				onInputKeyDown(event);
			}
		}
	}, {
		key: 'onOptionSelect',
		value: function onOptionSelect(option) {
			if (option === this._createPlaceholderOption) {
				this.createNewOption();
			} else {
				this.select.selectValue(option);
			}
		}
	}, {
		key: 'focus',
		value: function focus() {
			this.select.focus();
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props4 = this.props,
			    refProp = _props4.ref,
			    restProps = objectWithoutProperties(_props4, ['ref']);
			var children = this.props.children;

			// We can't use destructuring default values to set the children,
			// because it won't apply work if `children` is null. A falsy check is
			// more reliable in real world use-cases.

			if (!children) {
				children = defaultChildren$2;
			}

			var props = _extends({}, restProps, {
				allowCreate: true,
				filterOptions: this.filterOptions,
				menuRenderer: this.menuRenderer,
				onInputChange: this.onInputChange,
				onInputKeyDown: this.onInputKeyDown,
				ref: function ref(_ref2) {
					_this2.select = _ref2;

					// These values may be needed in between Select mounts (when this.select is null)
					if (_ref2) {
						_this2.labelKey = _ref2.props.labelKey;
						_this2.valueKey = _ref2.props.valueKey;
					}
					if (refProp) {
						refProp(_ref2);
					}
				}
			});

			return children(props);
		}
	}]);
	return CreatableSelect;
}(__WEBPACK_IMPORTED_MODULE_3_react___default.a.Component);

var defaultChildren$2 = function defaultChildren(props) {
	return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(Select$1, props);
};

var isOptionUnique = function isOptionUnique(_ref3) {
	var option = _ref3.option,
	    options = _ref3.options,
	    labelKey = _ref3.labelKey,
	    valueKey = _ref3.valueKey;

	if (!options || !options.length) {
		return true;
	}

	return options.filter(function (existingOption) {
		return existingOption[labelKey] === option[labelKey] || existingOption[valueKey] === option[valueKey];
	}).length === 0;
};

var isValidNewOption = function isValidNewOption(_ref4) {
	var label = _ref4.label;
	return !!label;
};

var newOptionCreator = function newOptionCreator(_ref5) {
	var label = _ref5.label,
	    labelKey = _ref5.labelKey,
	    valueKey = _ref5.valueKey;

	var option = {};
	option[valueKey] = label;
	option[labelKey] = label;
	option.className = 'Select-create-option-placeholder';

	return option;
};

var promptTextCreator = function promptTextCreator(label) {
	return 'Create option "' + label + '"';
};

var shouldKeyDownEventCreateNewOption = function shouldKeyDownEventCreateNewOption(_ref6) {
	var keyCode = _ref6.keyCode;

	switch (keyCode) {
		case 9: // TAB
		case 13: // ENTER
		case 188:
			// COMMA
			return true;
		default:
			return false;
	}
};

// Default prop methods
CreatableSelect.isOptionUnique = isOptionUnique;
CreatableSelect.isValidNewOption = isValidNewOption;
CreatableSelect.newOptionCreator = newOptionCreator;
CreatableSelect.promptTextCreator = promptTextCreator;
CreatableSelect.shouldKeyDownEventCreateNewOption = shouldKeyDownEventCreateNewOption;

CreatableSelect.defaultProps = {
	filterOptions: filterOptions,
	isOptionUnique: isOptionUnique,
	isValidNewOption: isValidNewOption,
	menuRenderer: menuRenderer,
	newOptionCreator: newOptionCreator,
	promptTextCreator: promptTextCreator,
	shouldKeyDownEventCreateNewOption: shouldKeyDownEventCreateNewOption,
	showNewOptionAtTop: true
};

CreatableSelect.propTypes = {
	// Child function responsible for creating the inner Select component
	// This component can be used to compose HOCs (eg Creatable and Async)
	// (props: Object): PropTypes.element
	children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	// See Select.propTypes.filterOptions
	filterOptions: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.any,

	// Searches for any matching option within the set of options.
	// This function prevents duplicate options from being created.
	// ({ option: Object, options: Array, labelKey: string, valueKey: string }): boolean
	isOptionUnique: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	// Determines if the current input text represents a valid option.
	// ({ label: string }): boolean
	isValidNewOption: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	// See Select.propTypes.menuRenderer
	menuRenderer: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.any,

	// Factory to create new option.
	// ({ label: string, labelKey: string, valueKey: string }): Object
	newOptionCreator: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	// input change handler: function (inputValue) {}
	onInputChange: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	// input keyDown handler: function (event) {}
	onInputKeyDown: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	// new option click handler: function (option) {}
	onNewOptionClick: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	// See Select.propTypes.options
	options: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array,

	// Creates prompt/placeholder option text.
	// (filterText: string): string
	promptTextCreator: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	ref: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	// Decides if a keyDown event (eg its `keyCode`) should result in the creation of a new option.
	shouldKeyDownEventCreateNewOption: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,

	// Where to show prompt/placeholder option text.
	// true: new option prompt at top of list (default)
	// false: new option prompt at bottom of list
	showNewOptionAtTop: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool
};

var AsyncCreatableSelect = function (_React$Component) {
	inherits(AsyncCreatableSelect, _React$Component);

	function AsyncCreatableSelect() {
		classCallCheck(this, AsyncCreatableSelect);
		return possibleConstructorReturn(this, (AsyncCreatableSelect.__proto__ || Object.getPrototypeOf(AsyncCreatableSelect)).apply(this, arguments));
	}

	createClass(AsyncCreatableSelect, [{
		key: 'focus',
		value: function focus() {
			this.select.focus();
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
				Async,
				this.props,
				function (_ref) {
					var ref = _ref.ref,
					    asyncProps = objectWithoutProperties(_ref, ['ref']);

					var asyncRef = ref;
					return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
						CreatableSelect,
						asyncProps,
						function (_ref2) {
							var ref = _ref2.ref,
							    creatableProps = objectWithoutProperties(_ref2, ['ref']);

							var creatableRef = ref;
							return _this2.props.children(_extends({}, creatableProps, {
								ref: function ref(select) {
									creatableRef(select);
									asyncRef(select);
									_this2.select = select;
								}
							}));
						}
					);
				}
			);
		}
	}]);
	return AsyncCreatableSelect;
}(__WEBPACK_IMPORTED_MODULE_3_react___default.a.Component);

var defaultChildren$1 = function defaultChildren(props) {
	return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(Select$1, props);
};

AsyncCreatableSelect.propTypes = {
	children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func.isRequired // Child function responsible for creating the inner Select component; (props: Object): PropTypes.element
};

AsyncCreatableSelect.defaultProps = {
	children: defaultChildren$1
};

Select$1.Async = Async;
Select$1.AsyncCreatable = AsyncCreatableSelect;
Select$1.Creatable = CreatableSelect;
Select$1.Value = Value;
Select$1.Option = Option;


/* harmony default export */ __webpack_exports__["default"] = (Select$1);


/***/ }),

/***/ 903:
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(328),
    isObjectLike = __webpack_require__(329);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),

/***/ 904:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyFunction = __webpack_require__(959);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (true) {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;

/***/ }),

/***/ 905:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (true) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ }),

/***/ 906:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ }),

/***/ 907:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(915).default;

/***/ }),

/***/ 908:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var sizerStyle = {
	position: 'absolute',
	top: 0,
	left: 0,
	visibility: 'hidden',
	height: 0,
	overflow: 'scroll',
	whiteSpace: 'pre'
};

var INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];

var cleanInputProps = function cleanInputProps(inputProps) {
	INPUT_PROPS_BLACKLIST.forEach(function (field) {
		return delete inputProps[field];
	});
	return inputProps;
};

var copyStyles = function copyStyles(styles, node) {
	node.style.fontSize = styles.fontSize;
	node.style.fontFamily = styles.fontFamily;
	node.style.fontWeight = styles.fontWeight;
	node.style.fontStyle = styles.fontStyle;
	node.style.letterSpacing = styles.letterSpacing;
	node.style.textTransform = styles.textTransform;
};

var isIE = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\/|Edge\//.test(window.navigator.userAgent) : false;

var generateId = function generateId() {
	// we only need an auto-generated ID for stylesheet injection, which is only
	// used for IE. so if the browser is not IE, this should return undefined.
	return isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;
};

var AutosizeInput = function (_Component) {
	_inherits(AutosizeInput, _Component);

	function AutosizeInput(props) {
		_classCallCheck(this, AutosizeInput);

		var _this = _possibleConstructorReturn(this, (AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)).call(this, props));

		_this.inputRef = function (el) {
			_this.input = el;
			if (typeof _this.props.inputRef === 'function') {
				_this.props.inputRef(el);
			}
		};

		_this.placeHolderSizerRef = function (el) {
			_this.placeHolderSizer = el;
		};

		_this.sizerRef = function (el) {
			_this.sizer = el;
		};

		_this.state = {
			inputWidth: props.minWidth,
			inputId: props.id || generateId()
		};
		return _this;
	}

	_createClass(AutosizeInput, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.mounted = true;
			this.copyInputStyles();
			this.updateInputWidth();
		}
	}, {
		key: 'UNSAFE_componentWillReceiveProps',
		value: function UNSAFE_componentWillReceiveProps(nextProps) {
			var id = nextProps.id;

			if (id !== this.props.id) {
				this.setState({ inputId: id || generateId() });
			}
		}
	}, {
		key: 'componentDidUpdate',
		value: function componentDidUpdate(prevProps, prevState) {
			if (prevState.inputWidth !== this.state.inputWidth) {
				if (typeof this.props.onAutosize === 'function') {
					this.props.onAutosize(this.state.inputWidth);
				}
			}
			this.updateInputWidth();
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.mounted = false;
		}
	}, {
		key: 'copyInputStyles',
		value: function copyInputStyles() {
			if (!this.mounted || !window.getComputedStyle) {
				return;
			}
			var inputStyles = this.input && window.getComputedStyle(this.input);
			if (!inputStyles) {
				return;
			}
			copyStyles(inputStyles, this.sizer);
			if (this.placeHolderSizer) {
				copyStyles(inputStyles, this.placeHolderSizer);
			}
		}
	}, {
		key: 'updateInputWidth',
		value: function updateInputWidth() {
			if (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {
				return;
			}
			var newInputWidth = void 0;
			if (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {
				newInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;
			} else {
				newInputWidth = this.sizer.scrollWidth + 2;
			}
			// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI
			var extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;
			newInputWidth += extraWidth;
			if (newInputWidth < this.props.minWidth) {
				newInputWidth = this.props.minWidth;
			}
			if (newInputWidth !== this.state.inputWidth) {
				this.setState({
					inputWidth: newInputWidth
				});
			}
		}
	}, {
		key: 'getInput',
		value: function getInput() {
			return this.input;
		}
	}, {
		key: 'focus',
		value: function focus() {
			this.input.focus();
		}
	}, {
		key: 'blur',
		value: function blur() {
			this.input.blur();
		}
	}, {
		key: 'select',
		value: function select() {
			this.input.select();
		}
	}, {
		key: 'renderStyles',
		value: function renderStyles() {
			// this method injects styles to hide IE's clear indicator, which messes
			// with input size detection. the stylesheet is only injected when the
			// browser is IE, and can also be disabled by the `injectStyles` prop.
			var injectStyles = this.props.injectStyles;

			return isIE && injectStyles ? _react2.default.createElement('style', { dangerouslySetInnerHTML: {
					__html: 'input#' + this.state.inputId + '::-ms-clear {display: none;}'
				} }) : null;
		}
	}, {
		key: 'render',
		value: function render() {
			var sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(function (previousValue, currentValue) {
				if (previousValue !== null && previousValue !== undefined) {
					return previousValue;
				}
				return currentValue;
			});

			var wrapperStyle = _extends({}, this.props.style);
			if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';

			var inputStyle = _extends({
				boxSizing: 'content-box',
				width: this.state.inputWidth + 'px'
			}, this.props.inputStyle);

			var inputProps = _objectWithoutProperties(this.props, []);

			cleanInputProps(inputProps);
			inputProps.className = this.props.inputClassName;
			inputProps.id = this.state.inputId;
			inputProps.style = inputStyle;

			return _react2.default.createElement(
				'div',
				{ className: this.props.className, style: wrapperStyle },
				this.renderStyles(),
				_react2.default.createElement('input', _extends({}, inputProps, { ref: this.inputRef })),
				_react2.default.createElement(
					'div',
					{ ref: this.sizerRef, style: sizerStyle },
					sizerValue
				),
				this.props.placeholder ? _react2.default.createElement(
					'div',
					{ ref: this.placeHolderSizerRef, style: sizerStyle },
					this.props.placeholder
				) : null
			);
		}
	}]);

	return AutosizeInput;
}(_react.Component);

AutosizeInput.propTypes = {
	className: _propTypes2.default.string, // className for the outer element
	defaultValue: _propTypes2.default.any, // default field value
	extraWidth: _propTypes2.default.oneOfType([// additional width for input element
	_propTypes2.default.number, _propTypes2.default.string]),
	id: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots
	injectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true
	inputClassName: _propTypes2.default.string, // className for the input element
	inputRef: _propTypes2.default.func, // ref callback for the input element
	inputStyle: _propTypes2.default.object, // css styles for the input element
	minWidth: _propTypes2.default.oneOfType([// minimum width for input element
	_propTypes2.default.number, _propTypes2.default.string]),
	onAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}
	onChange: _propTypes2.default.func, // onChange handler: function(event) {}
	placeholder: _propTypes2.default.string, // placeholder text
	placeholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder
	style: _propTypes2.default.object, // css styles for the outer element
	value: _propTypes2.default.any // field value
};
AutosizeInput.defaultProps = {
	minWidth: 1,
	injectStyles: true
};

exports.default = AutosizeInput;

/***/ }),

/***/ 910:
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(331);

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;


/***/ }),

/***/ 911:
/***/ (function(module, exports, __webpack_require__) {

var baseTrim = __webpack_require__(912),
    isObject = __webpack_require__(897),
    isSymbol = __webpack_require__(903);

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),

/***/ 912:
/***/ (function(module, exports, __webpack_require__) {

var trimmedEndIndex = __webpack_require__(913);

/** Used to match leading whitespace. */
var reTrimStart = /^\s+/;

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */
function baseTrim(string) {
  return string
    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
    : string;
}

module.exports = baseTrim;


/***/ }),

/***/ 913:
/***/ (function(module, exports) {

/** Used to match a single whitespace character. */
var reWhitespace = /\s/;

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */
function trimmedEndIndex(string) {
  var index = string.length;

  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

module.exports = trimmedEndIndex;


/***/ }),

/***/ 915:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _arrays = __webpack_require__(916);

var _arrays2 = _interopRequireDefault(_arrays);

var _reactAutowhatever = __webpack_require__(917);

var _reactAutowhatever2 = _interopRequireDefault(_reactAutowhatever);

var _theme = __webpack_require__(925);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var alwaysTrue = function alwaysTrue() {
  return true;
};
var defaultShouldRenderSuggestions = function defaultShouldRenderSuggestions(value) {
  return value.trim().length > 0;
};
var defaultRenderSuggestionsContainer = function defaultRenderSuggestionsContainer(_ref) {
  var containerProps = _ref.containerProps,
      children = _ref.children;
  return _react2.default.createElement(
    'div',
    containerProps,
    children
  );
};

var Autosuggest = function (_Component) {
  _inherits(Autosuggest, _Component);

  function Autosuggest(_ref2) {
    var alwaysRenderSuggestions = _ref2.alwaysRenderSuggestions;

    _classCallCheck(this, Autosuggest);

    var _this = _possibleConstructorReturn(this, (Autosuggest.__proto__ || Object.getPrototypeOf(Autosuggest)).call(this));

    _initialiseProps.call(_this);

    _this.state = {
      isFocused: false,
      isCollapsed: !alwaysRenderSuggestions,
      highlightedSectionIndex: null,
      highlightedSuggestionIndex: null,
      highlightedSuggestion: null,
      valueBeforeUpDown: null
    };

    _this.justPressedUpDown = false;
    _this.justMouseEntered = false;

    _this.pressedSuggestion = null;
    return _this;
  }

  _createClass(Autosuggest, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      document.addEventListener('mousedown', this.onDocumentMouseDown);
      document.addEventListener('mouseup', this.onDocumentMouseUp);

      this.input = this.autowhatever.input;
      this.suggestionsContainer = this.autowhatever.itemsContainer;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if ((0, _arrays2.default)(nextProps.suggestions, this.props.suggestions)) {
        if (nextProps.highlightFirstSuggestion && nextProps.suggestions.length > 0 && this.justPressedUpDown === false && this.justMouseEntered === false) {
          this.highlightFirstSuggestion();
        }
      } else {
        if (this.willRenderSuggestions(nextProps)) {
          if (this.state.isCollapsed && !this.justSelectedSuggestion) {
            this.revealSuggestions();
          }
        } else {
          this.resetHighlightedSuggestion();
        }
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      var _props = this.props,
          suggestions = _props.suggestions,
          onSuggestionHighlighted = _props.onSuggestionHighlighted,
          highlightFirstSuggestion = _props.highlightFirstSuggestion;


      if (!(0, _arrays2.default)(suggestions, prevProps.suggestions) && suggestions.length > 0 && highlightFirstSuggestion) {
        this.highlightFirstSuggestion();
        return;
      }

      if (onSuggestionHighlighted) {
        var highlightedSuggestion = this.getHighlightedSuggestion();
        var prevHighlightedSuggestion = prevState.highlightedSuggestion;

        if (highlightedSuggestion != prevHighlightedSuggestion) {
          onSuggestionHighlighted({
            suggestion: highlightedSuggestion
          });
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      document.removeEventListener('mousedown', this.onDocumentMouseDown);
      document.removeEventListener('mouseup', this.onDocumentMouseUp);
    }
  }, {
    key: 'updateHighlightedSuggestion',
    value: function updateHighlightedSuggestion(sectionIndex, suggestionIndex, prevValue) {
      var _this2 = this;

      this.setState(function (state) {
        var valueBeforeUpDown = state.valueBeforeUpDown;


        if (suggestionIndex === null) {
          valueBeforeUpDown = null;
        } else if (valueBeforeUpDown === null && typeof prevValue !== 'undefined') {
          valueBeforeUpDown = prevValue;
        }

        return {
          highlightedSectionIndex: sectionIndex,
          highlightedSuggestionIndex: suggestionIndex,
          highlightedSuggestion: suggestionIndex === null ? null : _this2.getSuggestion(sectionIndex, suggestionIndex),
          valueBeforeUpDown: valueBeforeUpDown
        };
      });
    }
  }, {
    key: 'resetHighlightedSuggestion',
    value: function resetHighlightedSuggestion() {
      var shouldResetValueBeforeUpDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      this.setState(function (state) {
        var valueBeforeUpDown = state.valueBeforeUpDown;


        return {
          highlightedSectionIndex: null,
          highlightedSuggestionIndex: null,
          highlightedSuggestion: null,
          valueBeforeUpDown: shouldResetValueBeforeUpDown ? null : valueBeforeUpDown
        };
      });
    }
  }, {
    key: 'revealSuggestions',
    value: function revealSuggestions() {
      this.setState({
        isCollapsed: false
      });
    }
  }, {
    key: 'closeSuggestions',
    value: function closeSuggestions() {
      this.setState({
        highlightedSectionIndex: null,
        highlightedSuggestionIndex: null,
        highlightedSuggestion: null,
        valueBeforeUpDown: null,
        isCollapsed: true
      });
    }
  }, {
    key: 'getSuggestion',
    value: function getSuggestion(sectionIndex, suggestionIndex) {
      var _props2 = this.props,
          suggestions = _props2.suggestions,
          multiSection = _props2.multiSection,
          getSectionSuggestions = _props2.getSectionSuggestions;


      if (multiSection) {
        return getSectionSuggestions(suggestions[sectionIndex])[suggestionIndex];
      }

      return suggestions[suggestionIndex];
    }
  }, {
    key: 'getHighlightedSuggestion',
    value: function getHighlightedSuggestion() {
      var _state = this.state,
          highlightedSectionIndex = _state.highlightedSectionIndex,
          highlightedSuggestionIndex = _state.highlightedSuggestionIndex;


      if (highlightedSuggestionIndex === null) {
        return null;
      }

      return this.getSuggestion(highlightedSectionIndex, highlightedSuggestionIndex);
    }
  }, {
    key: 'getSuggestionValueByIndex',
    value: function getSuggestionValueByIndex(sectionIndex, suggestionIndex) {
      var getSuggestionValue = this.props.getSuggestionValue;


      return getSuggestionValue(this.getSuggestion(sectionIndex, suggestionIndex));
    }
  }, {
    key: 'getSuggestionIndices',
    value: function getSuggestionIndices(suggestionElement) {
      var sectionIndex = suggestionElement.getAttribute('data-section-index');
      var suggestionIndex = suggestionElement.getAttribute('data-suggestion-index');

      return {
        sectionIndex: typeof sectionIndex === 'string' ? parseInt(sectionIndex, 10) : null,
        suggestionIndex: parseInt(suggestionIndex, 10)
      };
    }
  }, {
    key: 'findSuggestionElement',
    value: function findSuggestionElement(startNode) {
      var node = startNode;

      do {
        if (node.getAttribute('data-suggestion-index') !== null) {
          return node;
        }

        node = node.parentNode;
      } while (node !== null);

      console.error('Clicked element:', startNode); // eslint-disable-line no-console
      throw new Error("Couldn't find suggestion element");
    }
  }, {
    key: 'maybeCallOnChange',
    value: function maybeCallOnChange(event, newValue, method) {
      var _props$inputProps = this.props.inputProps,
          value = _props$inputProps.value,
          onChange = _props$inputProps.onChange;


      if (newValue !== value) {
        onChange(event, { newValue: newValue, method: method });
      }
    }
  }, {
    key: 'willRenderSuggestions',
    value: function willRenderSuggestions(props) {
      var suggestions = props.suggestions,
          inputProps = props.inputProps,
          shouldRenderSuggestions = props.shouldRenderSuggestions;
      var value = inputProps.value;


      return suggestions.length > 0 && shouldRenderSuggestions(value);
    }
  }, {
    key: 'getQuery',
    value: function getQuery() {
      var inputProps = this.props.inputProps;
      var value = inputProps.value;
      var valueBeforeUpDown = this.state.valueBeforeUpDown;


      return (valueBeforeUpDown === null ? value : valueBeforeUpDown).trim();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props3 = this.props,
          suggestions = _props3.suggestions,
          renderInputComponent = _props3.renderInputComponent,
          onSuggestionsFetchRequested = _props3.onSuggestionsFetchRequested,
          renderSuggestion = _props3.renderSuggestion,
          inputProps = _props3.inputProps,
          multiSection = _props3.multiSection,
          renderSectionTitle = _props3.renderSectionTitle,
          id = _props3.id,
          getSectionSuggestions = _props3.getSectionSuggestions,
          theme = _props3.theme,
          getSuggestionValue = _props3.getSuggestionValue,
          alwaysRenderSuggestions = _props3.alwaysRenderSuggestions,
          highlightFirstSuggestion = _props3.highlightFirstSuggestion;
      var _state2 = this.state,
          isFocused = _state2.isFocused,
          isCollapsed = _state2.isCollapsed,
          highlightedSectionIndex = _state2.highlightedSectionIndex,
          highlightedSuggestionIndex = _state2.highlightedSuggestionIndex,
          valueBeforeUpDown = _state2.valueBeforeUpDown;

      var shouldRenderSuggestions = alwaysRenderSuggestions ? alwaysTrue : this.props.shouldRenderSuggestions;
      var value = inputProps.value,
          _onFocus = inputProps.onFocus,
          _onKeyDown = inputProps.onKeyDown;

      var willRenderSuggestions = this.willRenderSuggestions(this.props);
      var isOpen = alwaysRenderSuggestions || isFocused && !isCollapsed && willRenderSuggestions;
      var items = isOpen ? suggestions : [];
      var autowhateverInputProps = _extends({}, inputProps, {
        onFocus: function onFocus(event) {
          if (!_this3.justSelectedSuggestion && !_this3.justClickedOnSuggestionsContainer) {
            var shouldRender = shouldRenderSuggestions(value);

            _this3.setState({
              isFocused: true,
              isCollapsed: !shouldRender
            });

            _onFocus && _onFocus(event);

            if (shouldRender) {
              onSuggestionsFetchRequested({ value: value, reason: 'input-focused' });
            }
          }
        },
        onBlur: function onBlur(event) {
          if (_this3.justClickedOnSuggestionsContainer) {
            _this3.input.focus();
            return;
          }

          _this3.blurEvent = event;

          if (!_this3.justSelectedSuggestion) {
            _this3.onBlur();
            _this3.onSuggestionsClearRequested();
          }
        },
        onChange: function onChange(event) {
          var value = event.target.value;

          var shouldRender = shouldRenderSuggestions(value);

          _this3.maybeCallOnChange(event, value, 'type');

          if (_this3.suggestionsContainer) {
            _this3.suggestionsContainer.scrollTop = 0;
          }

          _this3.setState(_extends({}, highlightFirstSuggestion ? {} : {
            highlightedSectionIndex: null,
            highlightedSuggestionIndex: null,
            highlightedSuggestion: null
          }, {
            valueBeforeUpDown: null,
            isCollapsed: !shouldRender
          }));

          if (shouldRender) {
            onSuggestionsFetchRequested({ value: value, reason: 'input-changed' });
          } else {
            _this3.onSuggestionsClearRequested();
          }
        },
        onKeyDown: function onKeyDown(event, data) {
          var keyCode = event.keyCode;


          switch (keyCode) {
            case 40: // ArrowDown
            case 38:
              // ArrowUp
              if (isCollapsed) {
                if (shouldRenderSuggestions(value)) {
                  onSuggestionsFetchRequested({
                    value: value,
                    reason: 'suggestions-revealed'
                  });
                  _this3.revealSuggestions();
                }
              } else if (suggestions.length > 0) {
                var newHighlightedSectionIndex = data.newHighlightedSectionIndex,
                    newHighlightedItemIndex = data.newHighlightedItemIndex;


                var newValue = void 0;

                if (newHighlightedItemIndex === null) {
                  // valueBeforeUpDown can be null if, for example, user
                  // hovers on the first suggestion and then pressed Up.
                  // If that happens, use the original input value.
                  newValue = valueBeforeUpDown === null ? value : valueBeforeUpDown;
                } else {
                  newValue = _this3.getSuggestionValueByIndex(newHighlightedSectionIndex, newHighlightedItemIndex);
                }

                _this3.updateHighlightedSuggestion(newHighlightedSectionIndex, newHighlightedItemIndex, value);
                _this3.maybeCallOnChange(event, newValue, keyCode === 40 ? 'down' : 'up');
              }

              event.preventDefault(); // Prevents the cursor from moving

              _this3.justPressedUpDown = true;

              setTimeout(function () {
                _this3.justPressedUpDown = false;
              });

              break;

            // Enter
            case 13:
              {
                // See #388
                if (event.keyCode === 229) {
                  break;
                }

                var highlightedSuggestion = _this3.getHighlightedSuggestion();

                if (isOpen && !alwaysRenderSuggestions) {
                  _this3.closeSuggestions();
                }

                if (highlightedSuggestion != null) {
                  var _newValue = getSuggestionValue(highlightedSuggestion);

                  _this3.maybeCallOnChange(event, _newValue, 'enter');

                  _this3.onSuggestionSelected(event, {
                    suggestion: highlightedSuggestion,
                    suggestionValue: _newValue,
                    suggestionIndex: highlightedSuggestionIndex,
                    sectionIndex: highlightedSectionIndex,
                    method: 'enter'
                  });

                  _this3.justSelectedSuggestion = true;

                  setTimeout(function () {
                    _this3.justSelectedSuggestion = false;
                  });
                }

                break;
              }

            // Escape
            case 27:
              {
                if (isOpen) {
                  // If input.type === 'search', the browser clears the input
                  // when Escape is pressed. We want to disable this default
                  // behaviour so that, when suggestions are shown, we just hide
                  // them, without clearing the input.
                  event.preventDefault();
                }

                var willCloseSuggestions = isOpen && !alwaysRenderSuggestions;

                if (valueBeforeUpDown === null) {
                  // Didn't interact with Up/Down
                  if (!willCloseSuggestions) {
                    var _newValue2 = '';

                    _this3.maybeCallOnChange(event, _newValue2, 'escape');

                    if (shouldRenderSuggestions(_newValue2)) {
                      onSuggestionsFetchRequested({
                        value: _newValue2,
                        reason: 'escape-pressed'
                      });
                    } else {
                      _this3.onSuggestionsClearRequested();
                    }
                  }
                } else {
                  // Interacted with Up/Down
                  _this3.maybeCallOnChange(event, valueBeforeUpDown, 'escape');
                }

                if (willCloseSuggestions) {
                  _this3.onSuggestionsClearRequested();
                  _this3.closeSuggestions();
                } else {
                  _this3.resetHighlightedSuggestion();
                }

                break;
              }
          }

          _onKeyDown && _onKeyDown(event);
        }
      });
      var renderSuggestionData = {
        query: this.getQuery()
      };

      return _react2.default.createElement(_reactAutowhatever2.default, {
        multiSection: multiSection,
        items: items,
        renderInputComponent: renderInputComponent,
        renderItemsContainer: this.renderSuggestionsContainer,
        renderItem: renderSuggestion,
        renderItemData: renderSuggestionData,
        renderSectionTitle: renderSectionTitle,
        getSectionItems: getSectionSuggestions,
        highlightedSectionIndex: highlightedSectionIndex,
        highlightedItemIndex: highlightedSuggestionIndex,
        inputProps: autowhateverInputProps,
        itemProps: this.itemProps,
        theme: (0, _theme.mapToAutowhateverTheme)(theme),
        id: id,
        ref: this.storeAutowhateverRef
      });
    }
  }]);

  return Autosuggest;
}(_react.Component);

Autosuggest.propTypes = {
  suggestions: _propTypes2.default.array.isRequired,
  onSuggestionsFetchRequested: function onSuggestionsFetchRequested(props, propName) {
    var onSuggestionsFetchRequested = props[propName];

    if (typeof onSuggestionsFetchRequested !== 'function') {
      throw new Error("'onSuggestionsFetchRequested' must be implemented. See: https://github.com/moroshko/react-autosuggest#onSuggestionsFetchRequestedProp");
    }
  },
  onSuggestionsClearRequested: function onSuggestionsClearRequested(props, propName) {
    var onSuggestionsClearRequested = props[propName];

    if (props.alwaysRenderSuggestions === false && typeof onSuggestionsClearRequested !== 'function') {
      throw new Error("'onSuggestionsClearRequested' must be implemented. See: https://github.com/moroshko/react-autosuggest#onSuggestionsClearRequestedProp");
    }
  },
  onSuggestionSelected: _propTypes2.default.func,
  onSuggestionHighlighted: _propTypes2.default.func,
  renderInputComponent: _propTypes2.default.func,
  renderSuggestionsContainer: _propTypes2.default.func,
  getSuggestionValue: _propTypes2.default.func.isRequired,
  renderSuggestion: _propTypes2.default.func.isRequired,
  inputProps: function inputProps(props, propName) {
    var inputProps = props[propName];

    if (!inputProps.hasOwnProperty('value')) {
      throw new Error("'inputProps' must have 'value'.");
    }

    if (!inputProps.hasOwnProperty('onChange')) {
      throw new Error("'inputProps' must have 'onChange'.");
    }
  },
  shouldRenderSuggestions: _propTypes2.default.func,
  alwaysRenderSuggestions: _propTypes2.default.bool,
  multiSection: _propTypes2.default.bool,
  renderSectionTitle: function renderSectionTitle(props, propName) {
    var renderSectionTitle = props[propName];

    if (props.multiSection === true && typeof renderSectionTitle !== 'function') {
      throw new Error("'renderSectionTitle' must be implemented. See: https://github.com/moroshko/react-autosuggest#renderSectionTitleProp");
    }
  },
  getSectionSuggestions: function getSectionSuggestions(props, propName) {
    var getSectionSuggestions = props[propName];

    if (props.multiSection === true && typeof getSectionSuggestions !== 'function') {
      throw new Error("'getSectionSuggestions' must be implemented. See: https://github.com/moroshko/react-autosuggest#getSectionSuggestionsProp");
    }
  },
  focusInputOnSuggestionClick: _propTypes2.default.bool,
  highlightFirstSuggestion: _propTypes2.default.bool,
  theme: _propTypes2.default.object,
  id: _propTypes2.default.string
};
Autosuggest.defaultProps = {
  renderSuggestionsContainer: defaultRenderSuggestionsContainer,
  shouldRenderSuggestions: defaultShouldRenderSuggestions,
  alwaysRenderSuggestions: false,
  multiSection: false,
  focusInputOnSuggestionClick: true,
  highlightFirstSuggestion: false,
  theme: _theme.defaultTheme,
  id: '1'
};

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this.onDocumentMouseDown = function (event) {
    _this4.justClickedOnSuggestionsContainer = false;

    var node = event.detail && event.detail.target || // This is for testing only. Please show me a better way to emulate this.
    event.target;

    while (node !== null && node !== document) {
      if (node.getAttribute('data-suggestion-index') !== null) {
        // Suggestion was clicked
        return;
      }

      if (node === _this4.suggestionsContainer) {
        // Something else inside suggestions container was clicked
        _this4.justClickedOnSuggestionsContainer = true;
        return;
      }

      node = node.parentNode;
    }
  };

  this.storeAutowhateverRef = function (autowhatever) {
    if (autowhatever !== null) {
      _this4.autowhatever = autowhatever;
    }
  };

  this.onSuggestionMouseEnter = function (event, _ref3) {
    var sectionIndex = _ref3.sectionIndex,
        itemIndex = _ref3.itemIndex;

    _this4.updateHighlightedSuggestion(sectionIndex, itemIndex);

    if (event.target === _this4.pressedSuggestion) {
      _this4.justSelectedSuggestion = true;
    }

    _this4.justMouseEntered = true;

    setTimeout(function () {
      _this4.justMouseEntered = false;
    });
  };

  this.highlightFirstSuggestion = function () {
    _this4.updateHighlightedSuggestion(_this4.props.multiSection ? 0 : null, 0);
  };

  this.onDocumentMouseUp = function () {
    if (_this4.pressedSuggestion && !_this4.justSelectedSuggestion) {
      _this4.input.focus();
    }
    _this4.pressedSuggestion = null;
  };

  this.onSuggestionMouseDown = function (event) {
    // Checking if this.justSelectedSuggestion is already true to not duplicate touch events in chrome
    // See: https://github.com/facebook/react/issues/9809#issuecomment-413978405
    if (!_this4.justSelectedSuggestion) {
      _this4.justSelectedSuggestion = true;
      _this4.pressedSuggestion = event.target;
    }
  };

  this.onSuggestionsClearRequested = function () {
    var onSuggestionsClearRequested = _this4.props.onSuggestionsClearRequested;


    onSuggestionsClearRequested && onSuggestionsClearRequested();
  };

  this.onSuggestionSelected = function (event, data) {
    var _props4 = _this4.props,
        alwaysRenderSuggestions = _props4.alwaysRenderSuggestions,
        onSuggestionSelected = _props4.onSuggestionSelected,
        onSuggestionsFetchRequested = _props4.onSuggestionsFetchRequested;


    onSuggestionSelected && onSuggestionSelected(event, data);

    if (alwaysRenderSuggestions) {
      onSuggestionsFetchRequested({
        value: data.suggestionValue,
        reason: 'suggestion-selected'
      });
    } else {
      _this4.onSuggestionsClearRequested();
    }

    _this4.resetHighlightedSuggestion();
  };

  this.onSuggestionClick = function (event) {
    var _props5 = _this4.props,
        alwaysRenderSuggestions = _props5.alwaysRenderSuggestions,
        focusInputOnSuggestionClick = _props5.focusInputOnSuggestionClick;

    var _getSuggestionIndices = _this4.getSuggestionIndices(_this4.findSuggestionElement(event.target)),
        sectionIndex = _getSuggestionIndices.sectionIndex,
        suggestionIndex = _getSuggestionIndices.suggestionIndex;

    var clickedSuggestion = _this4.getSuggestion(sectionIndex, suggestionIndex);
    var clickedSuggestionValue = _this4.props.getSuggestionValue(clickedSuggestion);

    _this4.maybeCallOnChange(event, clickedSuggestionValue, 'click');
    _this4.onSuggestionSelected(event, {
      suggestion: clickedSuggestion,
      suggestionValue: clickedSuggestionValue,
      suggestionIndex: suggestionIndex,
      sectionIndex: sectionIndex,
      method: 'click'
    });

    if (!alwaysRenderSuggestions) {
      _this4.closeSuggestions();
    }

    if (focusInputOnSuggestionClick === true) {
      _this4.input.focus();
    } else {
      _this4.onBlur();
    }

    setTimeout(function () {
      _this4.justSelectedSuggestion = false;
    });
  };

  this.onBlur = function () {
    var _props6 = _this4.props,
        inputProps = _props6.inputProps,
        shouldRenderSuggestions = _props6.shouldRenderSuggestions;
    var value = inputProps.value,
        onBlur = inputProps.onBlur;

    var highlightedSuggestion = _this4.getHighlightedSuggestion();
    var shouldRender = shouldRenderSuggestions(value);

    _this4.setState({
      isFocused: false,
      highlightedSectionIndex: null,
      highlightedSuggestionIndex: null,
      highlightedSuggestion: null,
      valueBeforeUpDown: null,
      isCollapsed: !shouldRender
    });

    onBlur && onBlur(_this4.blurEvent, { highlightedSuggestion: highlightedSuggestion });
  };

  this.onSuggestionMouseLeave = function (event) {
    _this4.resetHighlightedSuggestion(false); // shouldResetValueBeforeUpDown

    if (_this4.justSelectedSuggestion && event.target === _this4.pressedSuggestion) {
      _this4.justSelectedSuggestion = false;
    }
  };

  this.onSuggestionTouchStart = function () {
    _this4.justSelectedSuggestion = true;
    // todo: event.preventDefault when https://github.com/facebook/react/issues/2043
    // todo: gets released so onSuggestionMouseDown won't fire in chrome
  };

  this.onSuggestionTouchMove = function () {
    _this4.justSelectedSuggestion = false;
    _this4.pressedSuggestion = null;
    _this4.input.focus();
  };

  this.itemProps = function (_ref4) {
    var sectionIndex = _ref4.sectionIndex,
        itemIndex = _ref4.itemIndex;

    return {
      'data-section-index': sectionIndex,
      'data-suggestion-index': itemIndex,
      onMouseEnter: _this4.onSuggestionMouseEnter,
      onMouseLeave: _this4.onSuggestionMouseLeave,
      onMouseDown: _this4.onSuggestionMouseDown,
      onTouchStart: _this4.onSuggestionTouchStart,
      onTouchMove: _this4.onSuggestionTouchMove,
      onClick: _this4.onSuggestionClick
    };
  };

  this.renderSuggestionsContainer = function (_ref5) {
    var containerProps = _ref5.containerProps,
        children = _ref5.children;
    var renderSuggestionsContainer = _this4.props.renderSuggestionsContainer;


    return renderSuggestionsContainer({
      containerProps: containerProps,
      children: children,
      query: _this4.getQuery()
    });
  };
};

exports.default = Autosuggest;

/***/ }),

/***/ 916:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function shallowEqualArrays(arrA, arrB) {
  if (arrA === arrB) {
    return true;
  }

  if (!arrA || !arrB) {
    return false;
  }

  var len = arrA.length;

  if (arrB.length !== len) {
    return false;
  }

  for (var i = 0; i < len; i++) {
    if (arrA[i] !== arrB[i]) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqualArrays;


/***/ }),

/***/ 917:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(918).default;

/***/ }),

/***/ 918:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _sectionIterator = __webpack_require__(919);

var _sectionIterator2 = _interopRequireDefault(_sectionIterator);

var _reactThemeable = __webpack_require__(920);

var _reactThemeable2 = _interopRequireDefault(_reactThemeable);

var _SectionTitle = __webpack_require__(922);

var _SectionTitle2 = _interopRequireDefault(_SectionTitle);

var _ItemsList = __webpack_require__(923);

var _ItemsList2 = _interopRequireDefault(_ItemsList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var emptyObject = {};
var defaultRenderInputComponent = function defaultRenderInputComponent(props) {
  return _react2.default.createElement('input', props);
};
var defaultRenderItemsContainer = function defaultRenderItemsContainer(_ref) {
  var containerProps = _ref.containerProps,
      children = _ref.children;
  return _react2.default.createElement(
    'div',
    containerProps,
    children
  );
};
var defaultTheme = {
  container: 'react-autowhatever__container',
  containerOpen: 'react-autowhatever__container--open',
  input: 'react-autowhatever__input',
  inputOpen: 'react-autowhatever__input--open',
  inputFocused: 'react-autowhatever__input--focused',
  itemsContainer: 'react-autowhatever__items-container',
  itemsContainerOpen: 'react-autowhatever__items-container--open',
  itemsList: 'react-autowhatever__items-list',
  item: 'react-autowhatever__item',
  itemFirst: 'react-autowhatever__item--first',
  itemHighlighted: 'react-autowhatever__item--highlighted',
  sectionContainer: 'react-autowhatever__section-container',
  sectionContainerFirst: 'react-autowhatever__section-container--first',
  sectionTitle: 'react-autowhatever__section-title'
};

var Autowhatever = function (_Component) {
  _inherits(Autowhatever, _Component);

  function Autowhatever(props) {
    _classCallCheck(this, Autowhatever);

    var _this = _possibleConstructorReturn(this, (Autowhatever.__proto__ || Object.getPrototypeOf(Autowhatever)).call(this, props));

    _this.storeInputReference = function (input) {
      if (input !== null) {
        _this.input = input;
      }
    };

    _this.storeItemsContainerReference = function (itemsContainer) {
      if (itemsContainer !== null) {
        _this.itemsContainer = itemsContainer;
      }
    };

    _this.onHighlightedItemChange = function (highlightedItem) {
      _this.highlightedItem = highlightedItem;
    };

    _this.getItemId = function (sectionIndex, itemIndex) {
      if (itemIndex === null) {
        return null;
      }

      var id = _this.props.id;

      var section = sectionIndex === null ? '' : 'section-' + sectionIndex;

      return 'react-autowhatever-' + id + '-' + section + '-item-' + itemIndex;
    };

    _this.onFocus = function (event) {
      var inputProps = _this.props.inputProps;


      _this.setState({
        isInputFocused: true
      });

      inputProps.onFocus && inputProps.onFocus(event);
    };

    _this.onBlur = function (event) {
      var inputProps = _this.props.inputProps;


      _this.setState({
        isInputFocused: false
      });

      inputProps.onBlur && inputProps.onBlur(event);
    };

    _this.onKeyDown = function (event) {
      var _this$props = _this.props,
          inputProps = _this$props.inputProps,
          highlightedSectionIndex = _this$props.highlightedSectionIndex,
          highlightedItemIndex = _this$props.highlightedItemIndex;


      switch (event.key) {
        case 'ArrowDown':
        case 'ArrowUp':
          {
            var nextPrev = event.key === 'ArrowDown' ? 'next' : 'prev';

            var _this$sectionIterator = _this.sectionIterator[nextPrev]([highlightedSectionIndex, highlightedItemIndex]),
                _this$sectionIterator2 = _slicedToArray(_this$sectionIterator, 2),
                newHighlightedSectionIndex = _this$sectionIterator2[0],
                newHighlightedItemIndex = _this$sectionIterator2[1];

            inputProps.onKeyDown(event, { newHighlightedSectionIndex: newHighlightedSectionIndex, newHighlightedItemIndex: newHighlightedItemIndex });
            break;
          }

        default:
          inputProps.onKeyDown(event, { highlightedSectionIndex: highlightedSectionIndex, highlightedItemIndex: highlightedItemIndex });
      }
    };

    _this.highlightedItem = null;

    _this.state = {
      isInputFocused: false
    };

    _this.setSectionsItems(props);
    _this.setSectionIterator(props);
    _this.setTheme(props);
    return _this;
  }

  _createClass(Autowhatever, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.ensureHighlightedItemIsVisible();
    }

    // eslint-disable-next-line camelcase, react/sort-comp

  }, {
    key: 'UNSAFE_componentWillReceiveProps',
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if (nextProps.items !== this.props.items) {
        this.setSectionsItems(nextProps);
      }

      if (nextProps.items !== this.props.items || nextProps.multiSection !== this.props.multiSection) {
        this.setSectionIterator(nextProps);
      }

      if (nextProps.theme !== this.props.theme) {
        this.setTheme(nextProps);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.ensureHighlightedItemIsVisible();
    }
  }, {
    key: 'setSectionsItems',
    value: function setSectionsItems(props) {
      if (props.multiSection) {
        this.sectionsItems = props.items.map(function (section) {
          return props.getSectionItems(section);
        });
        this.sectionsLengths = this.sectionsItems.map(function (items) {
          return items.length;
        });
        this.allSectionsAreEmpty = this.sectionsLengths.every(function (itemsCount) {
          return itemsCount === 0;
        });
      }
    }
  }, {
    key: 'setSectionIterator',
    value: function setSectionIterator(props) {
      this.sectionIterator = (0, _sectionIterator2.default)({
        multiSection: props.multiSection,
        data: props.multiSection ? this.sectionsLengths : props.items.length
      });
    }
  }, {
    key: 'setTheme',
    value: function setTheme(props) {
      this.theme = (0, _reactThemeable2.default)(props.theme);
    }
  }, {
    key: 'renderSections',
    value: function renderSections() {
      var _this2 = this;

      if (this.allSectionsAreEmpty) {
        return null;
      }

      var theme = this.theme;
      var _props = this.props,
          id = _props.id,
          items = _props.items,
          renderItem = _props.renderItem,
          renderItemData = _props.renderItemData,
          renderSectionTitle = _props.renderSectionTitle,
          highlightedSectionIndex = _props.highlightedSectionIndex,
          highlightedItemIndex = _props.highlightedItemIndex,
          itemProps = _props.itemProps;


      return items.map(function (section, sectionIndex) {
        var keyPrefix = 'react-autowhatever-' + id + '-';
        var sectionKeyPrefix = keyPrefix + 'section-' + sectionIndex + '-';
        var isFirstSection = sectionIndex === 0;

        // `key` is provided by theme()
        /* eslint-disable react/jsx-key */
        return _react2.default.createElement(
          'div',
          theme(sectionKeyPrefix + 'container', 'sectionContainer', isFirstSection && 'sectionContainerFirst'),
          _react2.default.createElement(_SectionTitle2.default, {
            section: section,
            renderSectionTitle: renderSectionTitle,
            theme: theme,
            sectionKeyPrefix: sectionKeyPrefix
          }),
          _react2.default.createElement(_ItemsList2.default, {
            items: _this2.sectionsItems[sectionIndex],
            itemProps: itemProps,
            renderItem: renderItem,
            renderItemData: renderItemData,
            sectionIndex: sectionIndex,
            highlightedItemIndex: highlightedSectionIndex === sectionIndex ? highlightedItemIndex : null,
            onHighlightedItemChange: _this2.onHighlightedItemChange,
            getItemId: _this2.getItemId,
            theme: theme,
            keyPrefix: keyPrefix,
            ref: _this2.storeItemsListReference
          })
        );
        /* eslint-enable react/jsx-key */
      });
    }
  }, {
    key: 'renderItems',
    value: function renderItems() {
      var items = this.props.items;


      if (items.length === 0) {
        return null;
      }

      var theme = this.theme;
      var _props2 = this.props,
          id = _props2.id,
          renderItem = _props2.renderItem,
          renderItemData = _props2.renderItemData,
          highlightedSectionIndex = _props2.highlightedSectionIndex,
          highlightedItemIndex = _props2.highlightedItemIndex,
          itemProps = _props2.itemProps;


      return _react2.default.createElement(_ItemsList2.default, {
        items: items,
        itemProps: itemProps,
        renderItem: renderItem,
        renderItemData: renderItemData,
        highlightedItemIndex: highlightedSectionIndex === null ? highlightedItemIndex : null,
        onHighlightedItemChange: this.onHighlightedItemChange,
        getItemId: this.getItemId,
        theme: theme,
        keyPrefix: 'react-autowhatever-' + id + '-'
      });
    }
  }, {
    key: 'ensureHighlightedItemIsVisible',
    value: function ensureHighlightedItemIsVisible() {
      var highlightedItem = this.highlightedItem;


      if (!highlightedItem) {
        return;
      }

      var itemsContainer = this.itemsContainer;

      var itemOffsetRelativeToContainer = highlightedItem.offsetParent === itemsContainer ? highlightedItem.offsetTop : highlightedItem.offsetTop - itemsContainer.offsetTop;

      var scrollTop = itemsContainer.scrollTop; // Top of the visible area

      if (itemOffsetRelativeToContainer < scrollTop) {
        // Item is off the top of the visible area
        scrollTop = itemOffsetRelativeToContainer;
      } else if (itemOffsetRelativeToContainer + highlightedItem.offsetHeight > scrollTop + itemsContainer.offsetHeight) {
        // Item is off the bottom of the visible area
        scrollTop = itemOffsetRelativeToContainer + highlightedItem.offsetHeight - itemsContainer.offsetHeight;
      }

      if (scrollTop !== itemsContainer.scrollTop) {
        itemsContainer.scrollTop = scrollTop;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var theme = this.theme;
      var _props3 = this.props,
          id = _props3.id,
          multiSection = _props3.multiSection,
          renderInputComponent = _props3.renderInputComponent,
          renderItemsContainer = _props3.renderItemsContainer,
          highlightedSectionIndex = _props3.highlightedSectionIndex,
          highlightedItemIndex = _props3.highlightedItemIndex;
      var isInputFocused = this.state.isInputFocused;

      var renderedItems = multiSection ? this.renderSections() : this.renderItems();
      var isOpen = renderedItems !== null;
      var ariaActivedescendant = this.getItemId(highlightedSectionIndex, highlightedItemIndex);
      var itemsContainerId = 'react-autowhatever-' + id;
      var containerProps = _extends({
        role: 'combobox',
        'aria-haspopup': 'listbox',
        'aria-owns': itemsContainerId,
        'aria-expanded': isOpen
      }, theme('react-autowhatever-' + id + '-container', 'container', isOpen && 'containerOpen'), this.props.containerProps);
      var inputComponent = renderInputComponent(_extends({
        type: 'text',
        value: '',
        autoComplete: 'off',
        'aria-autocomplete': 'list',
        'aria-controls': itemsContainerId,
        'aria-activedescendant': ariaActivedescendant
      }, theme('react-autowhatever-' + id + '-input', 'input', isOpen && 'inputOpen', isInputFocused && 'inputFocused'), this.props.inputProps, {
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        onKeyDown: this.props.inputProps.onKeyDown && this.onKeyDown,
        ref: this.storeInputReference
      }));
      var itemsContainer = renderItemsContainer({
        containerProps: _extends({
          id: itemsContainerId,
          role: 'listbox'
        }, theme('react-autowhatever-' + id + '-items-container', 'itemsContainer', isOpen && 'itemsContainerOpen'), {
          ref: this.storeItemsContainerReference
        }),
        children: renderedItems
      });

      return _react2.default.createElement(
        'div',
        containerProps,
        inputComponent,
        itemsContainer
      );
    }
  }]);

  return Autowhatever;
}(_react.Component);

Autowhatever.propTypes = {
  id: _propTypes2.default.string, // Used in aria-* attributes. If multiple Autowhatever's are rendered on a page, they must have unique ids.
  multiSection: _propTypes2.default.bool, // Indicates whether a multi section layout should be rendered.
  renderInputComponent: _propTypes2.default.func, // When specified, it is used to render the input element.
  renderItemsContainer: _propTypes2.default.func, // Renders the items container.
  items: _propTypes2.default.array.isRequired, // Array of items or sections to render.
  renderItem: _propTypes2.default.func, // This function renders a single item.
  renderItemData: _propTypes2.default.object, // Arbitrary data that will be passed to renderItem()
  renderSectionTitle: _propTypes2.default.func, // This function gets a section and renders its title.
  getSectionItems: _propTypes2.default.func, // This function gets a section and returns its items, which will be passed into `renderItem` for rendering.
  containerProps: _propTypes2.default.object, // Arbitrary container props
  inputProps: _propTypes2.default.object, // Arbitrary input props
  itemProps: _propTypes2.default.oneOfType([// Arbitrary item props
  _propTypes2.default.object, _propTypes2.default.func]),
  highlightedSectionIndex: _propTypes2.default.number, // Section index of the highlighted item
  highlightedItemIndex: _propTypes2.default.number, // Highlighted item index (within a section)
  theme: _propTypes2.default.oneOfType([// Styles. See: https://github.com/markdalgleish/react-themeable
  _propTypes2.default.object, _propTypes2.default.array])
};
Autowhatever.defaultProps = {
  id: '1',
  multiSection: false,
  renderInputComponent: defaultRenderInputComponent,
  renderItemsContainer: defaultRenderItemsContainer,
  renderItem: function renderItem() {
    throw new Error('`renderItem` must be provided');
  },
  renderItemData: emptyObject,
  renderSectionTitle: function renderSectionTitle() {
    throw new Error('`renderSectionTitle` must be provided');
  },
  getSectionItems: function getSectionItems() {
    throw new Error('`getSectionItems` must be provided');
  },
  containerProps: emptyObject,
  inputProps: emptyObject,
  itemProps: emptyObject,
  highlightedSectionIndex: null,
  highlightedItemIndex: null,
  theme: defaultTheme
};
exports.default = Autowhatever;

/***/ }),

/***/ 919:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

module.exports = function (_ref) {
  var data = _ref.data;
  var multiSection = _ref.multiSection;

  function nextNonEmptySectionIndex(sectionIndex) {
    if (sectionIndex === null) {
      sectionIndex = 0;
    } else {
      sectionIndex++;
    }

    while (sectionIndex < data.length && data[sectionIndex] === 0) {
      sectionIndex++;
    }

    return sectionIndex === data.length ? null : sectionIndex;
  }

  function prevNonEmptySectionIndex(sectionIndex) {
    if (sectionIndex === null) {
      sectionIndex = data.length - 1;
    } else {
      sectionIndex--;
    }

    while (sectionIndex >= 0 && data[sectionIndex] === 0) {
      sectionIndex--;
    }

    return sectionIndex === -1 ? null : sectionIndex;
  }

  function next(position) {
    var _position = _slicedToArray(position, 2);

    var sectionIndex = _position[0];
    var itemIndex = _position[1];


    if (multiSection) {
      if (itemIndex === null || itemIndex === data[sectionIndex] - 1) {
        sectionIndex = nextNonEmptySectionIndex(sectionIndex);

        if (sectionIndex === null) {
          return [null, null];
        }

        return [sectionIndex, 0];
      }

      return [sectionIndex, itemIndex + 1];
    }

    if (data === 0 || itemIndex === data - 1) {
      return [null, null];
    }

    if (itemIndex === null) {
      return [null, 0];
    }

    return [null, itemIndex + 1];
  }

  function prev(position) {
    var _position2 = _slicedToArray(position, 2);

    var sectionIndex = _position2[0];
    var itemIndex = _position2[1];


    if (multiSection) {
      if (itemIndex === null || itemIndex === 0) {
        sectionIndex = prevNonEmptySectionIndex(sectionIndex);

        if (sectionIndex === null) {
          return [null, null];
        }

        return [sectionIndex, data[sectionIndex] - 1];
      }

      return [sectionIndex, itemIndex - 1];
    }

    if (data === 0 || itemIndex === 0) {
      return [null, null];
    }

    if (itemIndex === null) {
      return [null, data - 1];
    }

    return [null, itemIndex - 1];
  }

  function isLast(position) {
    return next(position)[1] === null;
  }

  return {
    next: next,
    prev: prev,
    isLast: isLast
  };
};


/***/ }),

/***/ 920:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
  value: true
});

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

var _objectAssign = __webpack_require__(921);

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var truthy = function truthy(x) {
  return x;
};

exports['default'] = function (input) {
  var _ref = Array.isArray(input) && input.length === 2 ? input : [input, null];

  var _ref2 = _slicedToArray(_ref, 2);

  var theme = _ref2[0];
  var classNameDecorator = _ref2[1];

  return function (key) {
    for (var _len = arguments.length, names = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      names[_key - 1] = arguments[_key];
    }

    var styles = names.map(function (name) {
      return theme[name];
    }).filter(truthy);

    return typeof styles[0] === 'string' || typeof classNameDecorator === 'function' ? { key: key, className: classNameDecorator ? classNameDecorator.apply(undefined, _toConsumableArray(styles)) : styles.join(' ') } : { key: key, style: _objectAssign2['default'].apply(undefined, [{}].concat(_toConsumableArray(styles))) };
  };
};

module.exports = exports['default'];

/***/ }),

/***/ 921:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function ToObject(val) {
	if (val == null) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function ownEnumerableKeys(obj) {
	var keys = Object.getOwnPropertyNames(obj);

	if (Object.getOwnPropertySymbols) {
		keys = keys.concat(Object.getOwnPropertySymbols(obj));
	}

	return keys.filter(function (key) {
		return propIsEnumerable.call(obj, key);
	});
}

module.exports = Object.assign || function (target, source) {
	var from;
	var keys;
	var to = ToObject(target);

	for (var s = 1; s < arguments.length; s++) {
		from = arguments[s];
		keys = ownEnumerableKeys(Object(from));

		for (var i = 0; i < keys.length; i++) {
			to[keys[i]] = from[keys[i]];
		}
	}

	return to;
};


/***/ }),

/***/ 922:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _compareObjects = __webpack_require__(870);

var _compareObjects2 = _interopRequireDefault(_compareObjects);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SectionTitle = function (_Component) {
  _inherits(SectionTitle, _Component);

  function SectionTitle() {
    _classCallCheck(this, SectionTitle);

    return _possibleConstructorReturn(this, (SectionTitle.__proto__ || Object.getPrototypeOf(SectionTitle)).apply(this, arguments));
  }

  _createClass(SectionTitle, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return (0, _compareObjects2.default)(nextProps, this.props);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          section = _props.section,
          renderSectionTitle = _props.renderSectionTitle,
          theme = _props.theme,
          sectionKeyPrefix = _props.sectionKeyPrefix;

      var sectionTitle = renderSectionTitle(section);

      if (!sectionTitle) {
        return null;
      }

      return _react2.default.createElement(
        'div',
        theme(sectionKeyPrefix + 'title', 'sectionTitle'),
        sectionTitle
      );
    }
  }]);

  return SectionTitle;
}(_react.Component);

SectionTitle.propTypes = {
  section: _propTypes2.default.any.isRequired,
  renderSectionTitle: _propTypes2.default.func.isRequired,
  theme: _propTypes2.default.func.isRequired,
  sectionKeyPrefix: _propTypes2.default.string.isRequired
};
exports.default = SectionTitle;

/***/ }),

/***/ 923:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Item = __webpack_require__(924);

var _Item2 = _interopRequireDefault(_Item);

var _compareObjects = __webpack_require__(870);

var _compareObjects2 = _interopRequireDefault(_compareObjects);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ItemsList = function (_Component) {
  _inherits(ItemsList, _Component);

  function ItemsList() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ItemsList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ItemsList.__proto__ || Object.getPrototypeOf(ItemsList)).call.apply(_ref, [this].concat(args))), _this), _this.storeHighlightedItemReference = function (highlightedItem) {
      _this.props.onHighlightedItemChange(highlightedItem === null ? null : highlightedItem.item);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ItemsList, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return (0, _compareObjects2.default)(nextProps, this.props, ['itemProps']);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          items = _props.items,
          itemProps = _props.itemProps,
          renderItem = _props.renderItem,
          renderItemData = _props.renderItemData,
          sectionIndex = _props.sectionIndex,
          highlightedItemIndex = _props.highlightedItemIndex,
          getItemId = _props.getItemId,
          theme = _props.theme,
          keyPrefix = _props.keyPrefix;

      var sectionPrefix = sectionIndex === null ? keyPrefix : keyPrefix + 'section-' + sectionIndex + '-';
      var isItemPropsFunction = typeof itemProps === 'function';

      return _react2.default.createElement(
        'ul',
        _extends({ role: 'listbox' }, theme(sectionPrefix + 'items-list', 'itemsList')),
        items.map(function (item, itemIndex) {
          var isFirst = itemIndex === 0;
          var isHighlighted = itemIndex === highlightedItemIndex;
          var itemKey = sectionPrefix + 'item-' + itemIndex;
          var itemPropsObj = isItemPropsFunction ? itemProps({ sectionIndex: sectionIndex, itemIndex: itemIndex }) : itemProps;
          var allItemProps = _extends({
            id: getItemId(sectionIndex, itemIndex),
            'aria-selected': isHighlighted
          }, theme(itemKey, 'item', isFirst && 'itemFirst', isHighlighted && 'itemHighlighted'), itemPropsObj);

          if (isHighlighted) {
            allItemProps.ref = _this2.storeHighlightedItemReference;
          }

          // `key` is provided by theme()
          /* eslint-disable react/jsx-key */
          return _react2.default.createElement(_Item2.default, _extends({}, allItemProps, {
            sectionIndex: sectionIndex,
            isHighlighted: isHighlighted,
            itemIndex: itemIndex,
            item: item,
            renderItem: renderItem,
            renderItemData: renderItemData
          }));
          /* eslint-enable react/jsx-key */
        })
      );
    }
  }]);

  return ItemsList;
}(_react.Component);

ItemsList.propTypes = {
  items: _propTypes2.default.array.isRequired,
  itemProps: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
  renderItem: _propTypes2.default.func.isRequired,
  renderItemData: _propTypes2.default.object.isRequired,
  sectionIndex: _propTypes2.default.number,
  highlightedItemIndex: _propTypes2.default.number,
  onHighlightedItemChange: _propTypes2.default.func.isRequired,
  getItemId: _propTypes2.default.func.isRequired,
  theme: _propTypes2.default.func.isRequired,
  keyPrefix: _propTypes2.default.string.isRequired
};
ItemsList.defaultProps = {
  sectionIndex: null
};
exports.default = ItemsList;

/***/ }),

/***/ 924:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _compareObjects = __webpack_require__(870);

var _compareObjects2 = _interopRequireDefault(_compareObjects);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Item = function (_Component) {
  _inherits(Item, _Component);

  function Item() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Item);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Item.__proto__ || Object.getPrototypeOf(Item)).call.apply(_ref, [this].concat(args))), _this), _this.storeItemReference = function (item) {
      if (item !== null) {
        _this.item = item;
      }
    }, _this.onMouseEnter = function (event) {
      var _this$props = _this.props,
          sectionIndex = _this$props.sectionIndex,
          itemIndex = _this$props.itemIndex;


      _this.props.onMouseEnter(event, { sectionIndex: sectionIndex, itemIndex: itemIndex });
    }, _this.onMouseLeave = function (event) {
      var _this$props2 = _this.props,
          sectionIndex = _this$props2.sectionIndex,
          itemIndex = _this$props2.itemIndex;


      _this.props.onMouseLeave(event, { sectionIndex: sectionIndex, itemIndex: itemIndex });
    }, _this.onMouseDown = function (event) {
      var _this$props3 = _this.props,
          sectionIndex = _this$props3.sectionIndex,
          itemIndex = _this$props3.itemIndex;


      _this.props.onMouseDown(event, { sectionIndex: sectionIndex, itemIndex: itemIndex });
    }, _this.onClick = function (event) {
      var _this$props4 = _this.props,
          sectionIndex = _this$props4.sectionIndex,
          itemIndex = _this$props4.itemIndex;


      _this.props.onClick(event, { sectionIndex: sectionIndex, itemIndex: itemIndex });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Item, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return (0, _compareObjects2.default)(nextProps, this.props, ['renderItemData']);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          isHighlighted = _props.isHighlighted,
          item = _props.item,
          renderItem = _props.renderItem,
          renderItemData = _props.renderItemData,
          restProps = _objectWithoutProperties(_props, ['isHighlighted', 'item', 'renderItem', 'renderItemData']);

      delete restProps.sectionIndex;
      delete restProps.itemIndex;

      if (typeof restProps.onMouseEnter === 'function') {
        restProps.onMouseEnter = this.onMouseEnter;
      }

      if (typeof restProps.onMouseLeave === 'function') {
        restProps.onMouseLeave = this.onMouseLeave;
      }

      if (typeof restProps.onMouseDown === 'function') {
        restProps.onMouseDown = this.onMouseDown;
      }

      if (typeof restProps.onClick === 'function') {
        restProps.onClick = this.onClick;
      }

      return _react2.default.createElement(
        'li',
        _extends({ role: 'option' }, restProps, { ref: this.storeItemReference }),
        renderItem(item, _extends({ isHighlighted: isHighlighted }, renderItemData))
      );
    }
  }]);

  return Item;
}(_react.Component);

Item.propTypes = {
  sectionIndex: _propTypes2.default.number,
  isHighlighted: _propTypes2.default.bool.isRequired,
  itemIndex: _propTypes2.default.number.isRequired,
  item: _propTypes2.default.any.isRequired,
  renderItem: _propTypes2.default.func.isRequired,
  renderItemData: _propTypes2.default.object.isRequired,
  onMouseEnter: _propTypes2.default.func,
  onMouseLeave: _propTypes2.default.func,
  onMouseDown: _propTypes2.default.func,
  onClick: _propTypes2.default.func
};
exports.default = Item;

/***/ }),

/***/ 925:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var defaultTheme = exports.defaultTheme = {
  container: 'react-autosuggest__container',
  containerOpen: 'react-autosuggest__container--open',
  input: 'react-autosuggest__input',
  inputOpen: 'react-autosuggest__input--open',
  inputFocused: 'react-autosuggest__input--focused',
  suggestionsContainer: 'react-autosuggest__suggestions-container',
  suggestionsContainerOpen: 'react-autosuggest__suggestions-container--open',
  suggestionsList: 'react-autosuggest__suggestions-list',
  suggestion: 'react-autosuggest__suggestion',
  suggestionFirst: 'react-autosuggest__suggestion--first',
  suggestionHighlighted: 'react-autosuggest__suggestion--highlighted',
  sectionContainer: 'react-autosuggest__section-container',
  sectionContainerFirst: 'react-autosuggest__section-container--first',
  sectionTitle: 'react-autosuggest__section-title'
};

var mapToAutowhateverTheme = exports.mapToAutowhateverTheme = function mapToAutowhateverTheme(theme) {
  var result = {};

  for (var key in theme) {
    switch (key) {
      case 'suggestionsContainer':
        result['itemsContainer'] = theme[key];
        break;

      case 'suggestionsContainerOpen':
        result['itemsContainerOpen'] = theme[key];
        break;

      case 'suggestion':
        result['item'] = theme[key];
        break;

      case 'suggestionFirst':
        result['itemFirst'] = theme[key];
        break;

      case 'suggestionHighlighted':
        result['itemHighlighted'] = theme[key];
        break;

      case 'suggestionsList':
        result['itemsList'] = theme[key];
        break;

      default:
        result[key] = theme[key];
    }
  }

  return result;
};

/***/ }),

/***/ 929:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slider = _interopRequireDefault(__webpack_require__(960));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _default = _slider["default"];
exports["default"] = _default;

/***/ }),

/***/ 934:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var canDefineProperty = false;
if (true) {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;

/***/ }),

/***/ 935:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

module.exports = ReactCurrentOwner;

/***/ }),

/***/ 936:
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(1016);

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),

/***/ 938:
/***/ (function(module, exports) {

/**
 * Helper function for iterating over a collection
 *
 * @param collection
 * @param fn
 */
function each(collection, fn) {
    var i      = 0,
        length = collection.length,
        cont;

    for(i; i < length; i++) {
        cont = fn(collection[i], i);
        if(cont === false) {
            break; //allow early exit
        }
    }
}

/**
 * Helper function for determining whether target object is an array
 *
 * @param target the object under test
 * @return {Boolean} true if array, false otherwise
 */
function isArray(target) {
    return Object.prototype.toString.apply(target) === '[object Array]';
}

/**
 * Helper function for determining whether target object is a function
 *
 * @param target the object under test
 * @return {Boolean} true if function, false otherwise
 */
function isFunction(target) {
    return typeof target === 'function';
}

module.exports = {
    isFunction : isFunction,
    isArray : isArray,
    each : each
};


/***/ }),

/***/ 941:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var cookieApi = exports.cookieApi = {
    getCookie: function getCookie(name) {
        var matches = document.cookie.match(new RegExp("(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"));
        return matches ? decodeURIComponent(matches[1]) : undefined;
    },
    setCookie: function setCookie(name, value, options) {
        options = options || {};

        var expires = options.expires;
        if (typeof expires == "number" && expires) {
            var d = new Date();
            d.setTime(d.getTime() + expires * 1000);
            expires = options.expires = d;
        }
        if (expires && expires.toUTCString) {
            options.expires = expires.toUTCString();
        }
        value = encodeURIComponent(value);
        var updatedCookie = name + "=" + value;
        for (var propName in options) {
            updatedCookie += "; " + propName;
            var propValue = options[propName];
            if (propValue !== true) {
                updatedCookie += "=" + propValue;
            }
        }
        document.cookie = updatedCookie;
    },
    deleteCookie: function deleteCookie(name) {
        this.setCookie(name, "", {
            expires: -1
        });
    }
};

/***/ }),

/***/ 947:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

if (true) {
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = lowPriorityWarning;

/***/ }),

/***/ 948:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(906);

var ReactCurrentOwner = __webpack_require__(935);

var invariant = __webpack_require__(905);
var warning = __webpack_require__(904);

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty
  // Strip regex characters so we can use it for regex
  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
  // Remove hasOwnProperty from the template to make it generic
  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
   true ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ?  true ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ?  true ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  true ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ?  true ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ?  true ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ?  true ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs,

  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
    if (typeof console.reactStack !== 'function') {
      return;
    }

    var stack = [];
    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    try {
      if (isCreatingElement) {
        stack.push({
          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
          fileName: currentSource ? currentSource.fileName : null,
          lineNumber: currentSource ? currentSource.lineNumber : null
        });
      }

      while (id) {
        var element = ReactComponentTreeHook.getElement(id);
        var parentID = ReactComponentTreeHook.getParentID(id);
        var ownerID = ReactComponentTreeHook.getOwnerID(id);
        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
        var source = element && element._source;
        stack.push({
          name: ownerName,
          fileName: source ? source.fileName : null,
          lineNumber: source ? source.lineNumber : null
        });
        id = parentID;
      }
    } catch (err) {
      // Internal state is messed up.
      // Stop building the stack (it's just a nice to have).
    }

    console.reactStack(stack);
  },
  popNonStandardWarningStack: function () {
    if (typeof console.reactStackEnd !== 'function') {
      return;
    }
    console.reactStackEnd();
  }
};

module.exports = ReactComponentTreeHook;

/***/ }),

/***/ 949:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/* global window self */

var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';

/* eslint-disable no-restricted-globals */
var isWebWorker = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';
/* eslint-enable no-restricted-globals */

var isNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;

/**
 * @see https://github.com/jsdom/jsdom/releases/tag/12.0.0
 * @see https://github.com/jsdom/jsdom/issues/1537
 */
/* eslint-disable no-undef */
var isJsDom = function isJsDom() {
  return typeof window !== 'undefined' && window.name === 'nodejs' || navigator.userAgent.includes('Node.js') || navigator.userAgent.includes('jsdom');
};

exports.isBrowser = isBrowser;
exports.isWebWorker = isWebWorker;
exports.isNode = isNode;
exports.isJsDom = isJsDom;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(335)))

/***/ }),

/***/ 950:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(856);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(857);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(858);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(859);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(16);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(28);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AddToBasketEffect = function (_Component) {
    (0, _inherits3.default)(AddToBasketEffect, _Component);

    function AddToBasketEffect(props) {
        (0, _classCallCheck3.default)(this, AddToBasketEffect);

        var _this = (0, _possibleConstructorReturn3.default)(this, (AddToBasketEffect.__proto__ || Object.getPrototypeOf(AddToBasketEffect)).call(this, props));

        _this.state = {};

        return _this;
    }

    (0, _createClass3.default)(AddToBasketEffect, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var elem = document.querySelector('.addToBasketEffect');
            var startPosition = this.props.startPosition;

            var endPosition = this.getEndPosition();

            elem.style.top = startPosition.top + 'px';
            elem.style.left = startPosition.left + 'px';
            setTimeout(function () {
                elem.style.transition = 'all 2s';
                elem.style.top = endPosition.top - 20 + 'px';
                elem.style.left = endPosition.left - 19 + 'px';
                elem.style.transform = 'scale(.3)';
            }, 0);
        }
    }, {
        key: 'getEndPosition',
        value: function getEndPosition() {
            if (this.props.basketType !== 'kaufen') {
                return $('.cart-total-verkaufen').offset();
            }
            var end = $('.cart-total-kaufen');
            var endPosition = end.offset();
            if (endPosition.top == 0 && endPosition.left == 0) {
                var otherEnd = $($('.cart-total-kaufen')[1]);
                endPosition = otherEnd.offset();
            }
            return endPosition;
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'addToBasketEffect' },
                _react2.default.createElement('img', { loading: 'lazy', src: this.props.image, alt: '' })
            );
        }
    }]);
    return AddToBasketEffect;
}(_react.Component);

AddToBasketEffect.propTypes = {};
AddToBasketEffect.defaultProps = {};

exports.default = AddToBasketEffect;

/***/ }),

/***/ 953:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Animated = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(995);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(869);

var _classnames2 = _interopRequireDefault(_classnames);

var _browserOrNode = __webpack_require__(949);

var _prefixer = __webpack_require__(1011);

var _prefixer2 = _interopRequireDefault(_prefixer);

var _propTypes = __webpack_require__(28);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isLteIE9 = function () {
  var ua = _browserOrNode.isBrowser ? window.navigator.userAgent : "";
  var ie = ua.indexOf("MSIE ");
  return ie > -1 && parseInt(ua.substring(ie + 5, ua.indexOf(".", ie)), 10) <= 9;
}();

var Animated = exports.Animated = function (_React$Component) {
  _inherits(Animated, _React$Component);

  function Animated(props) {
    _classCallCheck(this, Animated);

    var _this = _possibleConstructorReturn(this, (Animated.__proto__ || Object.getPrototypeOf(Animated)).call(this, props));

    _this.getNewState = function (_ref) {
      var isVisible = _ref.isVisible,
          animationIn = _ref.animationIn,
          animationOut = _ref.animationOut,
          animationInDuration = _ref.animationInDuration,
          animationOutDuration = _ref.animationOutDuration,
          animationInDelay = _ref.animationInDelay,
          animationOutDelay = _ref.animationOutDelay;
      return isVisible ? {
        animation: animationIn,
        duration: animationInDuration,
        delay: animationInDelay
      } : {
        animation: animationOut,
        duration: animationOutDuration,
        delay: animationOutDelay
      };
    };

    _this.state = props.animateOnMount ? _this.getNewState(props) : {};
    return _this;
  }

  _createClass(Animated, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var isVisible = this.props.isVisible;

      if (isVisible !== nextProps.isVisible) {
        this.setState(this.getNewState(_extends({}, this.props, nextProps)));
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          children = _props.children,
          style = _props.style,
          isVisible = _props.isVisible,
          innerRef = _props.innerRef,
          className = _props.className;
      var _state = this.state,
          animation = _state.animation,
          delay = _state.delay,
          duration = _state.duration;


      var classes = (0, _classnames2.default)("animated", animation, className);

      var backwardStyle = isLteIE9 || !animation ? {
        opacity: isVisible ? 1 : 0,
        transition: "opacity " + delay + "ms"
      } : {};

      return _react2.default.createElement(
        "div",
        { className: classes,
          ref: innerRef,
          style: (0, _prefixer2.default)(_extends({
            animationDelay: delay + "ms",
            animationDuration: duration + "ms",
            pointerEvents: isVisible ? "all" : "none"
          }, style, backwardStyle)) },
        children
      );
    }
  }]);

  return Animated;
}(_react2.default.Component);

Animated.displayName = "Animated";

Animated.propTypes = {
  animateOnMount: _propTypes.bool,
  isVisible: _propTypes.bool,
  animationIn: _propTypes.string,
  animationOut: _propTypes.string,
  animationInDelay: _propTypes.number,
  animationOutDelay: _propTypes.number,
  animationInDuration: _propTypes.number,
  animationOutDuration: _propTypes.number,
  className: _propTypes.string,
  style: _propTypes.object,
  innerRef: _propTypes.func
};

Animated.defaultProps = {
  animateOnMount: true,
  isVisible: true,
  animationIn: "fadeIn",
  animationOut: "fadeOut",
  animationInDelay: 0,
  animationOutDelay: 0,
  animationInDuration: 1000,
  animationOutDuration: 1000,
  className: "",
  style: {}
};

/***/ }),

/***/ 955:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = debounce;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(153)))

/***/ }),

/***/ 959:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),

/***/ 960:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(16));

var _innerSlider = __webpack_require__(961);

var _json2mq = _interopRequireDefault(__webpack_require__(339));

var _defaultProps = _interopRequireDefault(__webpack_require__(967));

var _innerSliderUtils = __webpack_require__(898);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var enquire = (0, _innerSliderUtils.canUseDOM)() && __webpack_require__(968);

var Slider = /*#__PURE__*/function (_React$Component) {
  _inherits(Slider, _React$Component);

  var _super = _createSuper(Slider);

  function Slider(props) {
    var _this;

    _classCallCheck(this, Slider);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "innerSliderRefHandler", function (ref) {
      return _this.innerSlider = ref;
    });

    _defineProperty(_assertThisInitialized(_this), "slickPrev", function () {
      return _this.innerSlider.slickPrev();
    });

    _defineProperty(_assertThisInitialized(_this), "slickNext", function () {
      return _this.innerSlider.slickNext();
    });

    _defineProperty(_assertThisInitialized(_this), "slickGoTo", function (slide) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      return _this.innerSlider.slickGoTo(slide, dontAnimate);
    });

    _defineProperty(_assertThisInitialized(_this), "slickPause", function () {
      return _this.innerSlider.pause("paused");
    });

    _defineProperty(_assertThisInitialized(_this), "slickPlay", function () {
      return _this.innerSlider.autoPlay("play");
    });

    _this.state = {
      breakpoint: null
    };
    _this._responsiveMediaHandlers = [];
    return _this;
  }

  _createClass(Slider, [{
    key: "media",
    value: function media(query, handler) {
      // javascript handler for  css media query
      enquire.register(query, handler);

      this._responsiveMediaHandlers.push({
        query: query,
        handler: handler
      });
    } // handles responsive breakpoints

  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      // performance monitoring
      //if (process.env.NODE_ENV !== 'production') {
      //const { whyDidYouUpdate } = require('why-did-you-update')
      //whyDidYouUpdate(React)
      //}
      if (this.props.responsive) {
        var breakpoints = this.props.responsive.map(function (breakpt) {
          return breakpt.breakpoint;
        }); // sort them in increasing order of their numerical value

        breakpoints.sort(function (x, y) {
          return x - y;
        });
        breakpoints.forEach(function (breakpoint, index) {
          // media query for each breakpoint
          var bQuery;

          if (index === 0) {
            bQuery = (0, _json2mq["default"])({
              minWidth: 0,
              maxWidth: breakpoint
            });
          } else {
            bQuery = (0, _json2mq["default"])({
              minWidth: breakpoints[index - 1] + 1,
              maxWidth: breakpoint
            });
          } // when not using server side rendering


          (0, _innerSliderUtils.canUseDOM)() && _this2.media(bQuery, function () {
            _this2.setState({
              breakpoint: breakpoint
            });
          });
        }); // Register media query for full screen. Need to support resize from small to large
        // convert javascript object to media query string

        var query = (0, _json2mq["default"])({
          minWidth: breakpoints.slice(-1)[0]
        });
        (0, _innerSliderUtils.canUseDOM)() && this.media(query, function () {
          _this2.setState({
            breakpoint: null
          });
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._responsiveMediaHandlers.forEach(function (obj) {
        enquire.unregister(obj.query, obj.handler);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var settings;
      var newProps;

      if (this.state.breakpoint) {
        newProps = this.props.responsive.filter(function (resp) {
          return resp.breakpoint === _this3.state.breakpoint;
        });
        settings = newProps[0].settings === "unslick" ? "unslick" : _objectSpread(_objectSpread(_objectSpread({}, _defaultProps["default"]), this.props), newProps[0].settings);
      } else {
        settings = _objectSpread(_objectSpread({}, _defaultProps["default"]), this.props);
      } // force scrolling by one if centerMode is on


      if (settings.centerMode) {
        if (settings.slidesToScroll > 1 && "development" !== "production") {
          console.warn("slidesToScroll should be equal to 1 in centerMode, you are using ".concat(settings.slidesToScroll));
        }

        settings.slidesToScroll = 1;
      } // force showing one slide and scrolling by one if the fade mode is on


      if (settings.fade) {
        if (settings.slidesToShow > 1 && "development" !== "production") {
          console.warn("slidesToShow should be equal to 1 when fade is true, you're using ".concat(settings.slidesToShow));
        }

        if (settings.slidesToScroll > 1 && "development" !== "production") {
          console.warn("slidesToScroll should be equal to 1 when fade is true, you're using ".concat(settings.slidesToScroll));
        }

        settings.slidesToShow = 1;
        settings.slidesToScroll = 1;
      } // makes sure that children is an array, even when there is only 1 child


      var children = _react["default"].Children.toArray(this.props.children); // Children may contain false or null, so we should filter them
      // children may also contain string filled with spaces (in certain cases where we use jsx strings)


      children = children.filter(function (child) {
        if (typeof child === "string") {
          return !!child.trim();
        }

        return !!child;
      }); // rows and slidesPerRow logic is handled here

      if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {
        console.warn("variableWidth is not supported in case of rows > 1 or slidesPerRow > 1");
        settings.variableWidth = false;
      }

      var newChildren = [];
      var currentWidth = null;

      for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {
        var newSlide = [];

        for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {
          var row = [];

          for (var k = j; k < j + settings.slidesPerRow; k += 1) {
            if (settings.variableWidth && children[k].props.style) {
              currentWidth = children[k].props.style.width;
            }

            if (k >= children.length) break;
            row.push( /*#__PURE__*/_react["default"].cloneElement(children[k], {
              key: 100 * i + 10 * j + k,
              tabIndex: -1,
              style: {
                width: "".concat(100 / settings.slidesPerRow, "%"),
                display: "inline-block"
              }
            }));
          }

          newSlide.push( /*#__PURE__*/_react["default"].createElement("div", {
            key: 10 * i + j
          }, row));
        }

        if (settings.variableWidth) {
          newChildren.push( /*#__PURE__*/_react["default"].createElement("div", {
            key: i,
            style: {
              width: currentWidth
            }
          }, newSlide));
        } else {
          newChildren.push( /*#__PURE__*/_react["default"].createElement("div", {
            key: i
          }, newSlide));
        }
      }

      if (settings === "unslick") {
        var className = "regular slider " + (this.props.className || "");
        return /*#__PURE__*/_react["default"].createElement("div", {
          className: className
        }, children);
      } else if (newChildren.length <= settings.slidesToShow) {
        settings.unslick = true;
      }

      return /*#__PURE__*/_react["default"].createElement(_innerSlider.InnerSlider, _extends({
        style: this.props.style,
        ref: this.innerSliderRefHandler
      }, settings), newChildren);
    }
  }]);

  return Slider;
}(_react["default"].Component);

exports["default"] = Slider;

/***/ }),

/***/ 961:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InnerSlider = void 0;

var _react = _interopRequireDefault(__webpack_require__(16));

var _initialState = _interopRequireDefault(__webpack_require__(962));

var _lodash = _interopRequireDefault(__webpack_require__(955));

var _classnames = _interopRequireDefault(__webpack_require__(869));

var _innerSliderUtils = __webpack_require__(898);

var _track = __webpack_require__(963);

var _dots = __webpack_require__(964);

var _arrows = __webpack_require__(965);

var _resizeObserverPolyfill = _interopRequireDefault(__webpack_require__(966));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var InnerSlider = /*#__PURE__*/function (_React$Component) {
  _inherits(InnerSlider, _React$Component);

  var _super = _createSuper(InnerSlider);

  function InnerSlider(props) {
    var _this;

    _classCallCheck(this, InnerSlider);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "listRefHandler", function (ref) {
      return _this.list = ref;
    });

    _defineProperty(_assertThisInitialized(_this), "trackRefHandler", function (ref) {
      return _this.track = ref;
    });

    _defineProperty(_assertThisInitialized(_this), "adaptHeight", function () {
      if (_this.props.adaptiveHeight && _this.list) {
        var elem = _this.list.querySelector("[data-index=\"".concat(_this.state.currentSlide, "\"]"));

        _this.list.style.height = (0, _innerSliderUtils.getHeight)(elem) + "px";
      }
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidMount", function () {
      _this.props.onInit && _this.props.onInit();

      if (_this.props.lazyLoad) {
        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_objectSpread(_objectSpread({}, _this.props), _this.state));

        if (slidesToLoad.length > 0) {
          _this.setState(function (prevState) {
            return {
              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
            };
          });

          if (_this.props.onLazyLoad) {
            _this.props.onLazyLoad(slidesToLoad);
          }
        }
      }

      var spec = _objectSpread({
        listRef: _this.list,
        trackRef: _this.track
      }, _this.props);

      _this.updateState(spec, true, function () {
        _this.adaptHeight();

        _this.props.autoplay && _this.autoPlay("update");
      });

      if (_this.props.lazyLoad === "progressive") {
        _this.lazyLoadTimer = setInterval(_this.progressiveLazyLoad, 1000);
      }

      _this.ro = new _resizeObserverPolyfill["default"](function () {
        if (_this.state.animating) {
          _this.onWindowResized(false); // don't set trackStyle hence don't break animation


          _this.callbackTimers.push(setTimeout(function () {
            return _this.onWindowResized();
          }, _this.props.speed));
        } else {
          _this.onWindowResized();
        }
      });

      _this.ro.observe(_this.list);

      document.querySelectorAll && Array.prototype.forEach.call(document.querySelectorAll(".slick-slide"), function (slide) {
        slide.onfocus = _this.props.pauseOnFocus ? _this.onSlideFocus : null;
        slide.onblur = _this.props.pauseOnFocus ? _this.onSlideBlur : null;
      });

      if (window.addEventListener) {
        window.addEventListener("resize", _this.onWindowResized);
      } else {
        window.attachEvent("onresize", _this.onWindowResized);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "componentWillUnmount", function () {
      if (_this.animationEndCallback) {
        clearTimeout(_this.animationEndCallback);
      }

      if (_this.lazyLoadTimer) {
        clearInterval(_this.lazyLoadTimer);
      }

      if (_this.callbackTimers.length) {
        _this.callbackTimers.forEach(function (timer) {
          return clearTimeout(timer);
        });

        _this.callbackTimers = [];
      }

      if (window.addEventListener) {
        window.removeEventListener("resize", _this.onWindowResized);
      } else {
        window.detachEvent("onresize", _this.onWindowResized);
      }

      if (_this.autoplayTimer) {
        clearInterval(_this.autoplayTimer);
      }

      _this.ro.disconnect();
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidUpdate", function (prevProps) {
      _this.checkImagesLoad();

      _this.props.onReInit && _this.props.onReInit();

      if (_this.props.lazyLoad) {
        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_objectSpread(_objectSpread({}, _this.props), _this.state));

        if (slidesToLoad.length > 0) {
          _this.setState(function (prevState) {
            return {
              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
            };
          });

          if (_this.props.onLazyLoad) {
            _this.props.onLazyLoad(slidesToLoad);
          }
        }
      } // if (this.props.onLazyLoad) {
      //   this.props.onLazyLoad([leftMostSlide])
      // }


      _this.adaptHeight();

      var spec = _objectSpread(_objectSpread({
        listRef: _this.list,
        trackRef: _this.track
      }, _this.props), _this.state);

      var setTrackStyle = _this.didPropsChange(prevProps);

      setTrackStyle && _this.updateState(spec, setTrackStyle, function () {
        if (_this.state.currentSlide >= _react["default"].Children.count(_this.props.children)) {
          _this.changeSlide({
            message: "index",
            index: _react["default"].Children.count(_this.props.children) - _this.props.slidesToShow,
            currentSlide: _this.state.currentSlide
          });
        }

        if (_this.props.autoplay) {
          _this.autoPlay("update");
        } else {
          _this.pause("paused");
        }
      });
    });

    _defineProperty(_assertThisInitialized(_this), "onWindowResized", function (setTrackStyle) {
      if (_this.debouncedResize) _this.debouncedResize.cancel();
      _this.debouncedResize = (0, _lodash["default"])(function () {
        return _this.resizeWindow(setTrackStyle);
      }, 50);

      _this.debouncedResize();
    });

    _defineProperty(_assertThisInitialized(_this), "resizeWindow", function () {
      var setTrackStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var isTrackMounted = Boolean(_this.track && _this.track.node); // prevent warning: setting state on unmounted component (server side rendering)

      if (!isTrackMounted) return;

      var spec = _objectSpread(_objectSpread({
        listRef: _this.list,
        trackRef: _this.track
      }, _this.props), _this.state);

      _this.updateState(spec, setTrackStyle, function () {
        if (_this.props.autoplay) _this.autoPlay("update");else _this.pause("paused");
      }); // animating state should be cleared while resizing, otherwise autoplay stops working


      _this.setState({
        animating: false
      });

      clearTimeout(_this.animationEndCallback);
      delete _this.animationEndCallback;
    });

    _defineProperty(_assertThisInitialized(_this), "updateState", function (spec, setTrackStyle, callback) {
      var updatedState = (0, _innerSliderUtils.initializedState)(spec);
      spec = _objectSpread(_objectSpread(_objectSpread({}, spec), updatedState), {}, {
        slideIndex: updatedState.currentSlide
      });
      var targetLeft = (0, _innerSliderUtils.getTrackLeft)(spec);
      spec = _objectSpread(_objectSpread({}, spec), {}, {
        left: targetLeft
      });
      var trackStyle = (0, _innerSliderUtils.getTrackCSS)(spec);

      if (setTrackStyle || _react["default"].Children.count(_this.props.children) !== _react["default"].Children.count(spec.children)) {
        updatedState["trackStyle"] = trackStyle;
      }

      _this.setState(updatedState, callback);
    });

    _defineProperty(_assertThisInitialized(_this), "ssrInit", function () {
      if (_this.props.variableWidth) {
        var _trackWidth = 0,
            _trackLeft = 0;
        var childrenWidths = [];
        var preClones = (0, _innerSliderUtils.getPreClones)(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
          slideCount: _this.props.children.length
        }));
        var postClones = (0, _innerSliderUtils.getPostClones)(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
          slideCount: _this.props.children.length
        }));

        _this.props.children.forEach(function (child) {
          childrenWidths.push(child.props.style.width);
          _trackWidth += child.props.style.width;
        });

        for (var i = 0; i < preClones; i++) {
          _trackLeft += childrenWidths[childrenWidths.length - 1 - i];
          _trackWidth += childrenWidths[childrenWidths.length - 1 - i];
        }

        for (var _i = 0; _i < postClones; _i++) {
          _trackWidth += childrenWidths[_i];
        }

        for (var _i2 = 0; _i2 < _this.state.currentSlide; _i2++) {
          _trackLeft += childrenWidths[_i2];
        }

        var _trackStyle = {
          width: _trackWidth + "px",
          left: -_trackLeft + "px"
        };

        if (_this.props.centerMode) {
          var currentWidth = "".concat(childrenWidths[_this.state.currentSlide], "px");
          _trackStyle.left = "calc(".concat(_trackStyle.left, " + (100% - ").concat(currentWidth, ") / 2 ) ");
        }

        return {
          trackStyle: _trackStyle
        };
      }

      var childrenCount = _react["default"].Children.count(_this.props.children);

      var spec = _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
        slideCount: childrenCount
      });

      var slideCount = (0, _innerSliderUtils.getPreClones)(spec) + (0, _innerSliderUtils.getPostClones)(spec) + childrenCount;
      var trackWidth = 100 / _this.props.slidesToShow * slideCount;
      var slideWidth = 100 / slideCount;
      var trackLeft = -slideWidth * ((0, _innerSliderUtils.getPreClones)(spec) + _this.state.currentSlide) * trackWidth / 100;

      if (_this.props.centerMode) {
        trackLeft += (100 - slideWidth * trackWidth / 100) / 2;
      }

      var trackStyle = {
        width: trackWidth + "%",
        left: trackLeft + "%"
      };
      return {
        slideWidth: slideWidth + "%",
        trackStyle: trackStyle
      };
    });

    _defineProperty(_assertThisInitialized(_this), "checkImagesLoad", function () {
      var images = _this.list && _this.list.querySelectorAll && _this.list.querySelectorAll(".slick-slide img") || [];
      var imagesCount = images.length,
          loadedCount = 0;
      Array.prototype.forEach.call(images, function (image) {
        var handler = function handler() {
          return ++loadedCount && loadedCount >= imagesCount && _this.onWindowResized();
        };

        if (!image.onclick) {
          image.onclick = function () {
            return image.parentNode.focus();
          };
        } else {
          var prevClickHandler = image.onclick;

          image.onclick = function () {
            prevClickHandler();
            image.parentNode.focus();
          };
        }

        if (!image.onload) {
          if (_this.props.lazyLoad) {
            image.onload = function () {
              _this.adaptHeight();

              _this.callbackTimers.push(setTimeout(_this.onWindowResized, _this.props.speed));
            };
          } else {
            image.onload = handler;

            image.onerror = function () {
              handler();
              _this.props.onLazyLoadError && _this.props.onLazyLoadError();
            };
          }
        }
      });
    });

    _defineProperty(_assertThisInitialized(_this), "progressiveLazyLoad", function () {
      var slidesToLoad = [];

      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);

      for (var index = _this.state.currentSlide; index < _this.state.slideCount + (0, _innerSliderUtils.getPostClones)(spec); index++) {
        if (_this.state.lazyLoadedList.indexOf(index) < 0) {
          slidesToLoad.push(index);
          break;
        }
      }

      for (var _index = _this.state.currentSlide - 1; _index >= -(0, _innerSliderUtils.getPreClones)(spec); _index--) {
        if (_this.state.lazyLoadedList.indexOf(_index) < 0) {
          slidesToLoad.push(_index);
          break;
        }
      }

      if (slidesToLoad.length > 0) {
        _this.setState(function (state) {
          return {
            lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)
          };
        });

        if (_this.props.onLazyLoad) {
          _this.props.onLazyLoad(slidesToLoad);
        }
      } else {
        if (_this.lazyLoadTimer) {
          clearInterval(_this.lazyLoadTimer);
          delete _this.lazyLoadTimer;
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "slideHandler", function (index) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var _this$props = _this.props,
          asNavFor = _this$props.asNavFor,
          beforeChange = _this$props.beforeChange,
          onLazyLoad = _this$props.onLazyLoad,
          speed = _this$props.speed,
          afterChange = _this$props.afterChange; // capture currentslide before state is updated

      var currentSlide = _this.state.currentSlide;

      var _slideHandler = (0, _innerSliderUtils.slideHandler)(_objectSpread(_objectSpread(_objectSpread({
        index: index
      }, _this.props), _this.state), {}, {
        trackRef: _this.track,
        useCSS: _this.props.useCSS && !dontAnimate
      })),
          state = _slideHandler.state,
          nextState = _slideHandler.nextState;

      if (!state) return;
      beforeChange && beforeChange(currentSlide, state.currentSlide);
      var slidesToLoad = state.lazyLoadedList.filter(function (value) {
        return _this.state.lazyLoadedList.indexOf(value) < 0;
      });
      onLazyLoad && slidesToLoad.length > 0 && onLazyLoad(slidesToLoad);

      if (!_this.props.waitForAnimate && _this.animationEndCallback) {
        clearTimeout(_this.animationEndCallback);
        afterChange && afterChange(currentSlide);
        delete _this.animationEndCallback;
      }

      _this.setState(state, function () {
        // asNavForIndex check is to avoid recursive calls of slideHandler in waitForAnimate=false mode
        if (asNavFor && _this.asNavForIndex !== index) {
          _this.asNavForIndex = index;
          asNavFor.innerSlider.slideHandler(index);
        }

        if (!nextState) return;
        _this.animationEndCallback = setTimeout(function () {
          var animating = nextState.animating,
              firstBatch = _objectWithoutProperties(nextState, ["animating"]);

          _this.setState(firstBatch, function () {
            _this.callbackTimers.push(setTimeout(function () {
              return _this.setState({
                animating: animating
              });
            }, 10));

            afterChange && afterChange(state.currentSlide);
            delete _this.animationEndCallback;
          });
        }, speed);
      });
    });

    _defineProperty(_assertThisInitialized(_this), "changeSlide", function (options) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);

      var targetSlide = (0, _innerSliderUtils.changeSlide)(spec, options);
      if (targetSlide !== 0 && !targetSlide) return;

      if (dontAnimate === true) {
        _this.slideHandler(targetSlide, dontAnimate);
      } else {
        _this.slideHandler(targetSlide);
      }

      _this.props.autoplay && _this.autoPlay("update");

      if (_this.props.focusOnSelect) {
        var nodes = _this.list.querySelectorAll(".slick-current");

        nodes[0] && nodes[0].focus();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "clickHandler", function (e) {
      if (_this.clickable === false) {
        e.stopPropagation();
        e.preventDefault();
      }

      _this.clickable = true;
    });

    _defineProperty(_assertThisInitialized(_this), "keyHandler", function (e) {
      var dir = (0, _innerSliderUtils.keyHandler)(e, _this.props.accessibility, _this.props.rtl);
      dir !== "" && _this.changeSlide({
        message: dir
      });
    });

    _defineProperty(_assertThisInitialized(_this), "selectHandler", function (options) {
      _this.changeSlide(options);
    });

    _defineProperty(_assertThisInitialized(_this), "disableBodyScroll", function () {
      var preventDefault = function preventDefault(e) {
        e = e || window.event;
        if (e.preventDefault) e.preventDefault();
        e.returnValue = false;
      };

      window.ontouchmove = preventDefault;
    });

    _defineProperty(_assertThisInitialized(_this), "enableBodyScroll", function () {
      window.ontouchmove = null;
    });

    _defineProperty(_assertThisInitialized(_this), "swipeStart", function (e) {
      if (_this.props.verticalSwiping) {
        _this.disableBodyScroll();
      }

      var state = (0, _innerSliderUtils.swipeStart)(e, _this.props.swipe, _this.props.draggable);
      state !== "" && _this.setState(state);
    });

    _defineProperty(_assertThisInitialized(_this), "swipeMove", function (e) {
      var state = (0, _innerSliderUtils.swipeMove)(e, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
        trackRef: _this.track,
        listRef: _this.list,
        slideIndex: _this.state.currentSlide
      }));
      if (!state) return;

      if (state["swiping"]) {
        _this.clickable = false;
      }

      _this.setState(state);
    });

    _defineProperty(_assertThisInitialized(_this), "swipeEnd", function (e) {
      var state = (0, _innerSliderUtils.swipeEnd)(e, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
        trackRef: _this.track,
        listRef: _this.list,
        slideIndex: _this.state.currentSlide
      }));
      if (!state) return;
      var triggerSlideHandler = state["triggerSlideHandler"];
      delete state["triggerSlideHandler"];

      _this.setState(state);

      if (triggerSlideHandler === undefined) return;

      _this.slideHandler(triggerSlideHandler);

      if (_this.props.verticalSwiping) {
        _this.enableBodyScroll();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "touchEnd", function (e) {
      _this.swipeEnd(e);

      _this.clickable = true;
    });

    _defineProperty(_assertThisInitialized(_this), "slickPrev", function () {
      // this and fellow methods are wrapped in setTimeout
      // to make sure initialize setState has happened before
      // any of such methods are called
      _this.callbackTimers.push(setTimeout(function () {
        return _this.changeSlide({
          message: "previous"
        });
      }, 0));
    });

    _defineProperty(_assertThisInitialized(_this), "slickNext", function () {
      _this.callbackTimers.push(setTimeout(function () {
        return _this.changeSlide({
          message: "next"
        });
      }, 0));
    });

    _defineProperty(_assertThisInitialized(_this), "slickGoTo", function (slide) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      slide = Number(slide);
      if (isNaN(slide)) return "";

      _this.callbackTimers.push(setTimeout(function () {
        return _this.changeSlide({
          message: "index",
          index: slide,
          currentSlide: _this.state.currentSlide
        }, dontAnimate);
      }, 0));
    });

    _defineProperty(_assertThisInitialized(_this), "play", function () {
      var nextIndex;

      if (_this.props.rtl) {
        nextIndex = _this.state.currentSlide - _this.props.slidesToScroll;
      } else {
        if ((0, _innerSliderUtils.canGoNext)(_objectSpread(_objectSpread({}, _this.props), _this.state))) {
          nextIndex = _this.state.currentSlide + _this.props.slidesToScroll;
        } else {
          return false;
        }
      }

      _this.slideHandler(nextIndex);
    });

    _defineProperty(_assertThisInitialized(_this), "autoPlay", function (playType) {
      if (_this.autoplayTimer) {
        clearInterval(_this.autoplayTimer);
      }

      var autoplaying = _this.state.autoplaying;

      if (playType === "update") {
        if (autoplaying === "hovered" || autoplaying === "focused" || autoplaying === "paused") {
          return;
        }
      } else if (playType === "leave") {
        if (autoplaying === "paused" || autoplaying === "focused") {
          return;
        }
      } else if (playType === "blur") {
        if (autoplaying === "paused" || autoplaying === "hovered") {
          return;
        }
      }

      _this.autoplayTimer = setInterval(_this.play, _this.props.autoplaySpeed + 50);

      _this.setState({
        autoplaying: "playing"
      });
    });

    _defineProperty(_assertThisInitialized(_this), "pause", function (pauseType) {
      if (_this.autoplayTimer) {
        clearInterval(_this.autoplayTimer);
        _this.autoplayTimer = null;
      }

      var autoplaying = _this.state.autoplaying;

      if (pauseType === "paused") {
        _this.setState({
          autoplaying: "paused"
        });
      } else if (pauseType === "focused") {
        if (autoplaying === "hovered" || autoplaying === "playing") {
          _this.setState({
            autoplaying: "focused"
          });
        }
      } else {
        // pauseType  is 'hovered'
        if (autoplaying === "playing") {
          _this.setState({
            autoplaying: "hovered"
          });
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onDotsOver", function () {
      return _this.props.autoplay && _this.pause("hovered");
    });

    _defineProperty(_assertThisInitialized(_this), "onDotsLeave", function () {
      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
    });

    _defineProperty(_assertThisInitialized(_this), "onTrackOver", function () {
      return _this.props.autoplay && _this.pause("hovered");
    });

    _defineProperty(_assertThisInitialized(_this), "onTrackLeave", function () {
      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
    });

    _defineProperty(_assertThisInitialized(_this), "onSlideFocus", function () {
      return _this.props.autoplay && _this.pause("focused");
    });

    _defineProperty(_assertThisInitialized(_this), "onSlideBlur", function () {
      return _this.props.autoplay && _this.state.autoplaying === "focused" && _this.autoPlay("blur");
    });

    _defineProperty(_assertThisInitialized(_this), "render", function () {
      var className = (0, _classnames["default"])("slick-slider", _this.props.className, {
        "slick-vertical": _this.props.vertical,
        "slick-initialized": true
      });

      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);

      var trackProps = (0, _innerSliderUtils.extractObject)(spec, ["fade", "cssEase", "speed", "infinite", "centerMode", "focusOnSelect", "currentSlide", "lazyLoad", "lazyLoadedList", "rtl", "slideWidth", "slideHeight", "listHeight", "vertical", "slidesToShow", "slidesToScroll", "slideCount", "trackStyle", "variableWidth", "unslick", "centerPadding", "targetSlide", "useCSS"]);
      var pauseOnHover = _this.props.pauseOnHover;
      trackProps = _objectSpread(_objectSpread({}, trackProps), {}, {
        onMouseEnter: pauseOnHover ? _this.onTrackOver : null,
        onMouseLeave: pauseOnHover ? _this.onTrackLeave : null,
        onMouseOver: pauseOnHover ? _this.onTrackOver : null,
        focusOnSelect: _this.props.focusOnSelect && _this.clickable ? _this.selectHandler : null
      });
      var dots;

      if (_this.props.dots === true && _this.state.slideCount >= _this.props.slidesToShow) {
        var dotProps = (0, _innerSliderUtils.extractObject)(spec, ["dotsClass", "slideCount", "slidesToShow", "currentSlide", "slidesToScroll", "clickHandler", "children", "customPaging", "infinite", "appendDots"]);
        var pauseOnDotsHover = _this.props.pauseOnDotsHover;
        dotProps = _objectSpread(_objectSpread({}, dotProps), {}, {
          clickHandler: _this.changeSlide,
          onMouseEnter: pauseOnDotsHover ? _this.onDotsLeave : null,
          onMouseOver: pauseOnDotsHover ? _this.onDotsOver : null,
          onMouseLeave: pauseOnDotsHover ? _this.onDotsLeave : null
        });
        dots = /*#__PURE__*/_react["default"].createElement(_dots.Dots, dotProps);
      }

      var prevArrow, nextArrow;
      var arrowProps = (0, _innerSliderUtils.extractObject)(spec, ["infinite", "centerMode", "currentSlide", "slideCount", "slidesToShow", "prevArrow", "nextArrow"]);
      arrowProps.clickHandler = _this.changeSlide;

      if (_this.props.arrows) {
        prevArrow = /*#__PURE__*/_react["default"].createElement(_arrows.PrevArrow, arrowProps);
        nextArrow = /*#__PURE__*/_react["default"].createElement(_arrows.NextArrow, arrowProps);
      }

      var verticalHeightStyle = null;

      if (_this.props.vertical) {
        verticalHeightStyle = {
          height: _this.state.listHeight
        };
      }

      var centerPaddingStyle = null;

      if (_this.props.vertical === false) {
        if (_this.props.centerMode === true) {
          centerPaddingStyle = {
            padding: "0px " + _this.props.centerPadding
          };
        }
      } else {
        if (_this.props.centerMode === true) {
          centerPaddingStyle = {
            padding: _this.props.centerPadding + " 0px"
          };
        }
      }

      var listStyle = _objectSpread(_objectSpread({}, verticalHeightStyle), centerPaddingStyle);

      var touchMove = _this.props.touchMove;
      var listProps = {
        className: "slick-list",
        style: listStyle,
        onClick: _this.clickHandler,
        onMouseDown: touchMove ? _this.swipeStart : null,
        onMouseMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
        onMouseUp: touchMove ? _this.swipeEnd : null,
        onMouseLeave: _this.state.dragging && touchMove ? _this.swipeEnd : null,
        onTouchStart: touchMove ? _this.swipeStart : null,
        onTouchMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
        onTouchEnd: touchMove ? _this.touchEnd : null,
        onTouchCancel: _this.state.dragging && touchMove ? _this.swipeEnd : null,
        onKeyDown: _this.props.accessibility ? _this.keyHandler : null
      };
      var innerSliderProps = {
        className: className,
        dir: "ltr",
        style: _this.props.style
      };

      if (_this.props.unslick) {
        listProps = {
          className: "slick-list"
        };
        innerSliderProps = {
          className: className
        };
      }

      return /*#__PURE__*/_react["default"].createElement("div", innerSliderProps, !_this.props.unslick ? prevArrow : "", /*#__PURE__*/_react["default"].createElement("div", _extends({
        ref: _this.listRefHandler
      }, listProps), /*#__PURE__*/_react["default"].createElement(_track.Track, _extends({
        ref: _this.trackRefHandler
      }, trackProps), _this.props.children)), !_this.props.unslick ? nextArrow : "", !_this.props.unslick ? dots : "");
    });

    _this.list = null;
    _this.track = null;
    _this.state = _objectSpread(_objectSpread({}, _initialState["default"]), {}, {
      currentSlide: _this.props.initialSlide,
      slideCount: _react["default"].Children.count(_this.props.children)
    });
    _this.callbackTimers = [];
    _this.clickable = true;
    _this.debouncedResize = null;

    var ssrState = _this.ssrInit();

    _this.state = _objectSpread(_objectSpread({}, _this.state), ssrState);
    return _this;
  }

  _createClass(InnerSlider, [{
    key: "didPropsChange",
    value: function didPropsChange(prevProps) {
      var setTrackStyle = false;

      for (var _i3 = 0, _Object$keys = Object.keys(this.props); _i3 < _Object$keys.length; _i3++) {
        var key = _Object$keys[_i3];

        if (!prevProps.hasOwnProperty(key)) {
          setTrackStyle = true;
          break;
        }

        if (_typeof(prevProps[key]) === "object" || typeof prevProps[key] === "function") {
          continue;
        }

        if (prevProps[key] !== this.props[key]) {
          setTrackStyle = true;
          break;
        }
      }

      return setTrackStyle || _react["default"].Children.count(this.props.children) !== _react["default"].Children.count(prevProps.children);
    }
  }]);

  return InnerSlider;
}(_react["default"].Component);

exports.InnerSlider = InnerSlider;

/***/ }),

/***/ 962:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var initialState = {
  animating: false,
  autoplaying: null,
  currentDirection: 0,
  currentLeft: null,
  currentSlide: 0,
  direction: 1,
  dragging: false,
  edgeDragged: false,
  initialized: false,
  lazyLoadedList: [],
  listHeight: null,
  listWidth: null,
  scrolling: false,
  slideCount: null,
  slideHeight: null,
  slideWidth: null,
  swipeLeft: null,
  swiped: false,
  // used by swipeEvent. differentites between touch and swipe.
  swiping: false,
  touchObject: {
    startX: 0,
    startY: 0,
    curX: 0,
    curY: 0
  },
  trackStyle: {},
  trackWidth: 0,
  targetSlide: 0
};
var _default = initialState;
exports["default"] = _default;

/***/ }),

/***/ 963:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Track = void 0;

var _react = _interopRequireDefault(__webpack_require__(16));

var _classnames = _interopRequireDefault(__webpack_require__(869));

var _innerSliderUtils = __webpack_require__(898);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// given specifications/props for a slide, fetch all the classes that need to be applied to the slide
var getSlideClasses = function getSlideClasses(spec) {
  var slickActive, slickCenter, slickCloned;
  var centerOffset, index;

  if (spec.rtl) {
    index = spec.slideCount - 1 - spec.index;
  } else {
    index = spec.index;
  }

  slickCloned = index < 0 || index >= spec.slideCount;

  if (spec.centerMode) {
    centerOffset = Math.floor(spec.slidesToShow / 2);
    slickCenter = (index - spec.currentSlide) % spec.slideCount === 0;

    if (index > spec.currentSlide - centerOffset - 1 && index <= spec.currentSlide + centerOffset) {
      slickActive = true;
    }
  } else {
    slickActive = spec.currentSlide <= index && index < spec.currentSlide + spec.slidesToShow;
  }

  var focusedSlide;

  if (spec.targetSlide < 0) {
    focusedSlide = spec.targetSlide + spec.slideCount;
  } else if (spec.targetSlide >= spec.slideCount) {
    focusedSlide = spec.targetSlide - spec.slideCount;
  } else {
    focusedSlide = spec.targetSlide;
  }

  var slickCurrent = index === focusedSlide;
  return {
    "slick-slide": true,
    "slick-active": slickActive,
    "slick-center": slickCenter,
    "slick-cloned": slickCloned,
    "slick-current": slickCurrent // dubious in case of RTL

  };
};

var getSlideStyle = function getSlideStyle(spec) {
  var style = {};

  if (spec.variableWidth === undefined || spec.variableWidth === false) {
    style.width = spec.slideWidth;
  }

  if (spec.fade) {
    style.position = "relative";

    if (spec.vertical) {
      style.top = -spec.index * parseInt(spec.slideHeight);
    } else {
      style.left = -spec.index * parseInt(spec.slideWidth);
    }

    style.opacity = spec.currentSlide === spec.index ? 1 : 0;

    if (spec.useCSS) {
      style.transition = "opacity " + spec.speed + "ms " + spec.cssEase + ", " + "visibility " + spec.speed + "ms " + spec.cssEase;
    }
  }

  return style;
};

var getKey = function getKey(child, fallbackKey) {
  return child.key || fallbackKey;
};

var renderSlides = function renderSlides(spec) {
  var key;
  var slides = [];
  var preCloneSlides = [];
  var postCloneSlides = [];

  var childrenCount = _react["default"].Children.count(spec.children);

  var startIndex = (0, _innerSliderUtils.lazyStartIndex)(spec);
  var endIndex = (0, _innerSliderUtils.lazyEndIndex)(spec);

  _react["default"].Children.forEach(spec.children, function (elem, index) {
    var child;
    var childOnClickOptions = {
      message: "children",
      index: index,
      slidesToScroll: spec.slidesToScroll,
      currentSlide: spec.currentSlide
    }; // in case of lazyLoad, whether or not we want to fetch the slide

    if (!spec.lazyLoad || spec.lazyLoad && spec.lazyLoadedList.indexOf(index) >= 0) {
      child = elem;
    } else {
      child = /*#__PURE__*/_react["default"].createElement("div", null);
    }

    var childStyle = getSlideStyle(_objectSpread(_objectSpread({}, spec), {}, {
      index: index
    }));
    var slideClass = child.props.className || "";
    var slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {
      index: index
    })); // push a cloned element of the desired slide

    slides.push( /*#__PURE__*/_react["default"].cloneElement(child, {
      key: "original" + getKey(child, index),
      "data-index": index,
      className: (0, _classnames["default"])(slideClasses, slideClass),
      tabIndex: "-1",
      "aria-hidden": !slideClasses["slick-active"],
      style: _objectSpread(_objectSpread({
        outline: "none"
      }, child.props.style || {}), childStyle),
      onClick: function onClick(e) {
        child.props && child.props.onClick && child.props.onClick(e);

        if (spec.focusOnSelect) {
          spec.focusOnSelect(childOnClickOptions);
        }
      }
    })); // if slide needs to be precloned or postcloned

    if (spec.infinite && spec.fade === false) {
      var preCloneNo = childrenCount - index;

      if (preCloneNo <= (0, _innerSliderUtils.getPreClones)(spec) && childrenCount !== spec.slidesToShow) {
        key = -preCloneNo;

        if (key >= startIndex) {
          child = elem;
        }

        slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {
          index: key
        }));
        preCloneSlides.push( /*#__PURE__*/_react["default"].cloneElement(child, {
          key: "precloned" + getKey(child, key),
          "data-index": key,
          tabIndex: "-1",
          className: (0, _classnames["default"])(slideClasses, slideClass),
          "aria-hidden": !slideClasses["slick-active"],
          style: _objectSpread(_objectSpread({}, child.props.style || {}), childStyle),
          onClick: function onClick(e) {
            child.props && child.props.onClick && child.props.onClick(e);

            if (spec.focusOnSelect) {
              spec.focusOnSelect(childOnClickOptions);
            }
          }
        }));
      }

      if (childrenCount !== spec.slidesToShow) {
        key = childrenCount + index;

        if (key < endIndex) {
          child = elem;
        }

        slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {
          index: key
        }));
        postCloneSlides.push( /*#__PURE__*/_react["default"].cloneElement(child, {
          key: "postcloned" + getKey(child, key),
          "data-index": key,
          tabIndex: "-1",
          className: (0, _classnames["default"])(slideClasses, slideClass),
          "aria-hidden": !slideClasses["slick-active"],
          style: _objectSpread(_objectSpread({}, child.props.style || {}), childStyle),
          onClick: function onClick(e) {
            child.props && child.props.onClick && child.props.onClick(e);

            if (spec.focusOnSelect) {
              spec.focusOnSelect(childOnClickOptions);
            }
          }
        }));
      }
    }
  });

  if (spec.rtl) {
    return preCloneSlides.concat(slides, postCloneSlides).reverse();
  } else {
    return preCloneSlides.concat(slides, postCloneSlides);
  }
};

var Track = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(Track, _React$PureComponent);

  var _super = _createSuper(Track);

  function Track() {
    var _this;

    _classCallCheck(this, Track);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "node", null);

    _defineProperty(_assertThisInitialized(_this), "handleRef", function (ref) {
      _this.node = ref;
    });

    return _this;
  }

  _createClass(Track, [{
    key: "render",
    value: function render() {
      var slides = renderSlides(this.props);
      var _this$props = this.props,
          onMouseEnter = _this$props.onMouseEnter,
          onMouseOver = _this$props.onMouseOver,
          onMouseLeave = _this$props.onMouseLeave;
      var mouseEvents = {
        onMouseEnter: onMouseEnter,
        onMouseOver: onMouseOver,
        onMouseLeave: onMouseLeave
      };
      return /*#__PURE__*/_react["default"].createElement("div", _extends({
        ref: this.handleRef,
        className: "slick-track",
        style: this.props.trackStyle
      }, mouseEvents), slides);
    }
  }]);

  return Track;
}(_react["default"].PureComponent);

exports.Track = Track;

/***/ }),

/***/ 964:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dots = void 0;

var _react = _interopRequireDefault(__webpack_require__(16));

var _classnames = _interopRequireDefault(__webpack_require__(869));

var _innerSliderUtils = __webpack_require__(898);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var getDotCount = function getDotCount(spec) {
  var dots;

  if (spec.infinite) {
    dots = Math.ceil(spec.slideCount / spec.slidesToScroll);
  } else {
    dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1;
  }

  return dots;
};

var Dots = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(Dots, _React$PureComponent);

  var _super = _createSuper(Dots);

  function Dots() {
    _classCallCheck(this, Dots);

    return _super.apply(this, arguments);
  }

  _createClass(Dots, [{
    key: "clickHandler",
    value: function clickHandler(options, e) {
      // In Autoplay the focus stays on clicked button even after transition
      // to next slide. That only goes away by click somewhere outside
      e.preventDefault();
      this.props.clickHandler(options);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          onMouseEnter = _this$props.onMouseEnter,
          onMouseOver = _this$props.onMouseOver,
          onMouseLeave = _this$props.onMouseLeave,
          infinite = _this$props.infinite,
          slidesToScroll = _this$props.slidesToScroll,
          slidesToShow = _this$props.slidesToShow,
          slideCount = _this$props.slideCount,
          currentSlide = _this$props.currentSlide;
      var dotCount = getDotCount({
        slideCount: slideCount,
        slidesToScroll: slidesToScroll,
        slidesToShow: slidesToShow,
        infinite: infinite
      });
      var mouseEvents = {
        onMouseEnter: onMouseEnter,
        onMouseOver: onMouseOver,
        onMouseLeave: onMouseLeave
      };
      var dots = [];

      for (var i = 0; i < dotCount; i++) {
        var _rightBound = (i + 1) * slidesToScroll - 1;

        var rightBound = infinite ? _rightBound : (0, _innerSliderUtils.clamp)(_rightBound, 0, slideCount - 1);

        var _leftBound = rightBound - (slidesToScroll - 1);

        var leftBound = infinite ? _leftBound : (0, _innerSliderUtils.clamp)(_leftBound, 0, slideCount - 1);
        var className = (0, _classnames["default"])({
          "slick-active": infinite ? currentSlide >= leftBound && currentSlide <= rightBound : currentSlide === leftBound
        });
        var dotOptions = {
          message: "dots",
          index: i,
          slidesToScroll: slidesToScroll,
          currentSlide: currentSlide
        };
        var onClick = this.clickHandler.bind(this, dotOptions);
        dots = dots.concat( /*#__PURE__*/_react["default"].createElement("li", {
          key: i,
          className: className
        }, /*#__PURE__*/_react["default"].cloneElement(this.props.customPaging(i), {
          onClick: onClick
        })));
      }

      return /*#__PURE__*/_react["default"].cloneElement(this.props.appendDots(dots), _objectSpread({
        className: this.props.dotsClass
      }, mouseEvents));
    }
  }]);

  return Dots;
}(_react["default"].PureComponent);

exports.Dots = Dots;

/***/ }),

/***/ 965:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PrevArrow = exports.NextArrow = void 0;

var _react = _interopRequireDefault(__webpack_require__(16));

var _classnames = _interopRequireDefault(__webpack_require__(869));

var _innerSliderUtils = __webpack_require__(898);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var PrevArrow = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(PrevArrow, _React$PureComponent);

  var _super = _createSuper(PrevArrow);

  function PrevArrow() {
    _classCallCheck(this, PrevArrow);

    return _super.apply(this, arguments);
  }

  _createClass(PrevArrow, [{
    key: "clickHandler",
    value: function clickHandler(options, e) {
      if (e) {
        e.preventDefault();
      }

      this.props.clickHandler(options, e);
    }
  }, {
    key: "render",
    value: function render() {
      var prevClasses = {
        "slick-arrow": true,
        "slick-prev": true
      };
      var prevHandler = this.clickHandler.bind(this, {
        message: "previous"
      });

      if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {
        prevClasses["slick-disabled"] = true;
        prevHandler = null;
      }

      var prevArrowProps = {
        key: "0",
        "data-role": "none",
        className: (0, _classnames["default"])(prevClasses),
        style: {
          display: "block"
        },
        onClick: prevHandler
      };
      var customProps = {
        currentSlide: this.props.currentSlide,
        slideCount: this.props.slideCount
      };
      var prevArrow;

      if (this.props.prevArrow) {
        prevArrow = /*#__PURE__*/_react["default"].cloneElement(this.props.prevArrow, _objectSpread(_objectSpread({}, prevArrowProps), customProps));
      } else {
        prevArrow = /*#__PURE__*/_react["default"].createElement("button", _extends({
          key: "0",
          type: "button"
        }, prevArrowProps), " ", "Previous");
      }

      return prevArrow;
    }
  }]);

  return PrevArrow;
}(_react["default"].PureComponent);

exports.PrevArrow = PrevArrow;

var NextArrow = /*#__PURE__*/function (_React$PureComponent2) {
  _inherits(NextArrow, _React$PureComponent2);

  var _super2 = _createSuper(NextArrow);

  function NextArrow() {
    _classCallCheck(this, NextArrow);

    return _super2.apply(this, arguments);
  }

  _createClass(NextArrow, [{
    key: "clickHandler",
    value: function clickHandler(options, e) {
      if (e) {
        e.preventDefault();
      }

      this.props.clickHandler(options, e);
    }
  }, {
    key: "render",
    value: function render() {
      var nextClasses = {
        "slick-arrow": true,
        "slick-next": true
      };
      var nextHandler = this.clickHandler.bind(this, {
        message: "next"
      });

      if (!(0, _innerSliderUtils.canGoNext)(this.props)) {
        nextClasses["slick-disabled"] = true;
        nextHandler = null;
      }

      var nextArrowProps = {
        key: "1",
        "data-role": "none",
        className: (0, _classnames["default"])(nextClasses),
        style: {
          display: "block"
        },
        onClick: nextHandler
      };
      var customProps = {
        currentSlide: this.props.currentSlide,
        slideCount: this.props.slideCount
      };
      var nextArrow;

      if (this.props.nextArrow) {
        nextArrow = /*#__PURE__*/_react["default"].cloneElement(this.props.nextArrow, _objectSpread(_objectSpread({}, nextArrowProps), customProps));
      } else {
        nextArrow = /*#__PURE__*/_react["default"].createElement("button", _extends({
          key: "1",
          type: "button"
        }, nextArrowProps), " ", "Next");
      }

      return nextArrow;
    }
  }]);

  return NextArrow;
}(_react["default"].PureComponent);

exports.NextArrow = NextArrow;

/***/ }),

/***/ 966:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global) {/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

/* harmony default export */ __webpack_exports__["default"] = (index);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(153)))

/***/ }),

/***/ 967:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(16));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var defaultProps = {
  accessibility: true,
  adaptiveHeight: false,
  afterChange: null,
  appendDots: function appendDots(dots) {
    return /*#__PURE__*/_react["default"].createElement("ul", {
      style: {
        display: "block"
      }
    }, dots);
  },
  arrows: true,
  autoplay: false,
  autoplaySpeed: 3000,
  beforeChange: null,
  centerMode: false,
  centerPadding: "50px",
  className: "",
  cssEase: "ease",
  customPaging: function customPaging(i) {
    return /*#__PURE__*/_react["default"].createElement("button", null, i + 1);
  },
  dots: false,
  dotsClass: "slick-dots",
  draggable: true,
  easing: "linear",
  edgeFriction: 0.35,
  fade: false,
  focusOnSelect: false,
  infinite: true,
  initialSlide: 0,
  lazyLoad: null,
  nextArrow: null,
  onEdge: null,
  onInit: null,
  onLazyLoadError: null,
  onReInit: null,
  pauseOnDotsHover: false,
  pauseOnFocus: false,
  pauseOnHover: true,
  prevArrow: null,
  responsive: null,
  rows: 1,
  rtl: false,
  slide: "div",
  slidesPerRow: 1,
  slidesToScroll: 1,
  slidesToShow: 1,
  speed: 500,
  swipe: true,
  swipeEvent: null,
  swipeToSlide: false,
  touchMove: true,
  touchThreshold: 5,
  useCSS: true,
  useTransform: true,
  variableWidth: false,
  vertical: false,
  waitForAnimate: true
};
var _default = defaultProps;
exports["default"] = _default;

/***/ }),

/***/ 968:
/***/ (function(module, exports, __webpack_require__) {

var MediaQueryDispatch = __webpack_require__(969);
module.exports = new MediaQueryDispatch();


/***/ }),

/***/ 969:
/***/ (function(module, exports, __webpack_require__) {

var MediaQuery = __webpack_require__(970);
var Util = __webpack_require__(938);
var each = Util.each;
var isFunction = Util.isFunction;
var isArray = Util.isArray;

/**
 * Allows for registration of query handlers.
 * Manages the query handler's state and is responsible for wiring up browser events
 *
 * @constructor
 */
function MediaQueryDispatch () {
    if(!window.matchMedia) {
        throw new Error('matchMedia not present, legacy browsers require a polyfill');
    }

    this.queries = {};
    this.browserIsIncapable = !window.matchMedia('only all').matches;
}

MediaQueryDispatch.prototype = {

    constructor : MediaQueryDispatch,

    /**
     * Registers a handler for the given media query
     *
     * @param {string} q the media query
     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
     * @param {function} options.match fired when query matched
     * @param {function} [options.unmatch] fired when a query is no longer matched
     * @param {function} [options.setup] fired when handler first triggered
     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
     */
    register : function(q, options, shouldDegrade) {
        var queries         = this.queries,
            isUnconditional = shouldDegrade && this.browserIsIncapable;

        if(!queries[q]) {
            queries[q] = new MediaQuery(q, isUnconditional);
        }

        //normalise to object in an array
        if(isFunction(options)) {
            options = { match : options };
        }
        if(!isArray(options)) {
            options = [options];
        }
        each(options, function(handler) {
            if (isFunction(handler)) {
                handler = { match : handler };
            }
            queries[q].addHandler(handler);
        });

        return this;
    },

    /**
     * unregisters a query and all it's handlers, or a specific handler for a query
     *
     * @param {string} q the media query to target
     * @param {object || function} [handler] specific handler to unregister
     */
    unregister : function(q, handler) {
        var query = this.queries[q];

        if(query) {
            if(handler) {
                query.removeHandler(handler);
            }
            else {
                query.clear();
                delete this.queries[q];
            }
        }

        return this;
    }
};

module.exports = MediaQueryDispatch;


/***/ }),

/***/ 970:
/***/ (function(module, exports, __webpack_require__) {

var QueryHandler = __webpack_require__(971);
var each = __webpack_require__(938).each;

/**
 * Represents a single media query, manages it's state and registered handlers for this query
 *
 * @constructor
 * @param {string} query the media query string
 * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design
 */
function MediaQuery(query, isUnconditional) {
    this.query = query;
    this.isUnconditional = isUnconditional;
    this.handlers = [];
    this.mql = window.matchMedia(query);

    var self = this;
    this.listener = function(mql) {
        // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly
        self.mql = mql.currentTarget || mql;
        self.assess();
    };
    this.mql.addListener(this.listener);
}

MediaQuery.prototype = {

    constuctor : MediaQuery,

    /**
     * add a handler for this query, triggering if already active
     *
     * @param {object} handler
     * @param {function} handler.match callback for when query is activated
     * @param {function} [handler.unmatch] callback for when query is deactivated
     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
     */
    addHandler : function(handler) {
        var qh = new QueryHandler(handler);
        this.handlers.push(qh);

        this.matches() && qh.on();
    },

    /**
     * removes the given handler from the collection, and calls it's destroy methods
     *
     * @param {object || function} handler the handler to remove
     */
    removeHandler : function(handler) {
        var handlers = this.handlers;
        each(handlers, function(h, i) {
            if(h.equals(handler)) {
                h.destroy();
                return !handlers.splice(i,1); //remove from array and exit each early
            }
        });
    },

    /**
     * Determine whether the media query should be considered a match
     *
     * @return {Boolean} true if media query can be considered a match, false otherwise
     */
    matches : function() {
        return this.mql.matches || this.isUnconditional;
    },

    /**
     * Clears all handlers and unbinds events
     */
    clear : function() {
        each(this.handlers, function(handler) {
            handler.destroy();
        });
        this.mql.removeListener(this.listener);
        this.handlers.length = 0; //clear array
    },

    /*
        * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
        */
    assess : function() {
        var action = this.matches() ? 'on' : 'off';

        each(this.handlers, function(handler) {
            handler[action]();
        });
    }
};

module.exports = MediaQuery;


/***/ }),

/***/ 971:
/***/ (function(module, exports) {

/**
 * Delegate to handle a media query being matched and unmatched.
 *
 * @param {object} options
 * @param {function} options.match callback for when the media query is matched
 * @param {function} [options.unmatch] callback for when the media query is unmatched
 * @param {function} [options.setup] one-time callback triggered the first time a query is matched
 * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?
 * @constructor
 */
function QueryHandler(options) {
    this.options = options;
    !options.deferSetup && this.setup();
}

QueryHandler.prototype = {

    constructor : QueryHandler,

    /**
     * coordinates setup of the handler
     *
     * @function
     */
    setup : function() {
        if(this.options.setup) {
            this.options.setup();
        }
        this.initialised = true;
    },

    /**
     * coordinates setup and triggering of the handler
     *
     * @function
     */
    on : function() {
        !this.initialised && this.setup();
        this.options.match && this.options.match();
    },

    /**
     * coordinates the unmatch event for the handler
     *
     * @function
     */
    off : function() {
        this.options.unmatch && this.options.unmatch();
    },

    /**
     * called when a handler is to be destroyed.
     * delegates to the destroy or unmatch callbacks, depending on availability.
     *
     * @function
     */
    destroy : function() {
        this.options.destroy ? this.options.destroy() : this.off();
    },

    /**
     * determines equality by reference.
     * if object is supplied compare options, if function, compare match callback
     *
     * @function
     * @param {object || function} [target] the target for comparison
     */
    equals : function(target) {
        return this.options === target || this.options.match === target;
    }

};

module.exports = QueryHandler;


/***/ }),

/***/ 973:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(906),
    _assign = __webpack_require__(86);

var ReactNoopUpdateQueue = __webpack_require__(974);

var canDefineProperty = __webpack_require__(934);
var emptyObject = __webpack_require__(997);
var invariant = __webpack_require__(905);
var lowPriorityWarning = __webpack_require__(947);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  true ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (true) {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = {
  Component: ReactComponent,
  PureComponent: ReactPureComponent
};

/***/ }),

/***/ 974:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var warning = __webpack_require__(904);

function warnNoop(publicInstance, callerName) {
  if (true) {
    var constructor = publicInstance.constructor;
     true ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;

/***/ }),

/***/ 975:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

/***/ }),

/***/ 976:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ }),

/***/ 977:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */



var ReactCurrentOwner = __webpack_require__(935);
var ReactComponentTreeHook = __webpack_require__(948);
var ReactElement = __webpack_require__(900);

var checkReactTypeSpec = __webpack_require__(1003);

var canDefineProperty = __webpack_require__(934);
var getIteratorFn = __webpack_require__(976);
var warning = __webpack_require__(904);
var lowPriorityWarning = __webpack_require__(947);

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

   true ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
     true ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {
  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }

        var sourceInfo = getSourceInfoErrorAddendum(props);
        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        info += ReactComponentTreeHook.getCurrentStackAddendum();

        var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
         true ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
        ReactComponentTreeHook.popNonStandardWarningStack();
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if (true) {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }
};

module.exports = ReactElementValidator;

/***/ }),

/***/ 978:
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

module.exports = hasUnicode;


/***/ }),

/***/ 987:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _captialize = __webpack_require__(1167);

Object.defineProperty(exports, 'captialize', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_captialize).default;
  }
});

var _clamp = __webpack_require__(1168);

Object.defineProperty(exports, 'clamp', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_clamp).default;
  }
});

var _distanceTo = __webpack_require__(1169);

Object.defineProperty(exports, 'distanceTo', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_distanceTo).default;
  }
});

var _isDefined = __webpack_require__(1170);

Object.defineProperty(exports, 'isDefined', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_isDefined).default;
  }
});

var _isNumber = __webpack_require__(1171);

Object.defineProperty(exports, 'isNumber', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_isNumber).default;
  }
});

var _isObject = __webpack_require__(1172);

Object.defineProperty(exports, 'isObject', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_isObject).default;
  }
});

var _length = __webpack_require__(1173);

Object.defineProperty(exports, 'length', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_length).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 992:
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t(__webpack_require__(16)):"function"==typeof define&&define.amd?define(["react"],t):"object"==typeof exports?exports.ReactRecaptcha=t(require("react")):e.ReactRecaptcha=t(e.React)}(this,function(e){return function(e){function t(r){if(a[r])return a[r].exports;var n=a[r]={exports:{},id:r,loaded:!1};return e[r].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var a={};return t.m=e,t.c=a,t.p="",t(0)}([function(e,t,a){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var l=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}(),s=a(6),c=r(s),p=a(4),u=r(p),d={className:u.default.string,onloadCallbackName:u.default.string,elementID:u.default.string,onloadCallback:u.default.func,verifyCallback:u.default.func,expiredCallback:u.default.func,render:u.default.oneOf(["onload","explicit"]),sitekey:u.default.string,theme:u.default.oneOf(["light","dark"]),type:u.default.string,verifyCallbackName:u.default.string,expiredCallbackName:u.default.string,size:u.default.oneOf(["invisible","compact","normal"]),tabindex:u.default.string,hl:u.default.string,badge:u.default.oneOf(["bottomright","bottomleft","inline"])},f={elementID:"g-recaptcha",className:"g-recaptcha",onloadCallback:void 0,onloadCallbackName:"onloadCallback",verifyCallback:void 0,verifyCallbackName:"verifyCallback",expiredCallback:void 0,expiredCallbackName:"expiredCallback",render:"onload",theme:"light",type:"image",size:"normal",tabindex:"0",hl:"en",badge:"bottomright"},h=function(){return"undefined"!=typeof window&&"undefined"!=typeof window.grecaptcha&&"function"==typeof window.grecaptcha.render},y=void 0,b=function(e){function t(e){n(this,t);var a=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a._renderGrecaptcha=a._renderGrecaptcha.bind(a),a.reset=a.reset.bind(a),a.state={ready:h(),widget:null},a.state.ready||"undefined"==typeof window||(y=setInterval(a._updateReadyState.bind(a),1e3)),a}return i(t,e),l(t,[{key:"componentDidMount",value:function(){this.state.ready&&this._renderGrecaptcha()}},{key:"componentDidUpdate",value:function(e,t){var a=this.props,r=a.render,n=a.onloadCallback;"explicit"===r&&n&&this.state.ready&&!t.ready&&this._renderGrecaptcha()}},{key:"componentWillUnmount",value:function(){clearInterval(y)}},{key:"reset",value:function(){var e=this.state,t=e.ready,a=e.widget;t&&null!==a&&grecaptcha.reset(a)}},{key:"execute",value:function(){var e=this.state,t=e.ready,a=e.widget;t&&null!==a&&grecaptcha.execute(a)}},{key:"_updateReadyState",value:function(){h()&&(this.setState({ready:!0}),clearInterval(y))}},{key:"_renderGrecaptcha",value:function(){this.state.widget=grecaptcha.render(this.props.elementID,{sitekey:this.props.sitekey,callback:this.props.verifyCallback?this.props.verifyCallback:void 0,theme:this.props.theme,type:this.props.type,size:this.props.size,tabindex:this.props.tabindex,hl:this.props.hl,badge:this.props.badge,"expired-callback":this.props.expiredCallback?this.props.expiredCallback:void 0}),this.props.onloadCallback&&this.props.onloadCallback()}},{key:"render",value:function(){return"explicit"===this.props.render&&this.props.onloadCallback?c.default.createElement("div",{id:this.props.elementID,"data-onloadcallbackname":this.props.onloadCallbackName,"data-verifycallbackname":this.props.verifyCallbackName}):c.default.createElement("div",{id:this.props.elementID,className:this.props.className,"data-sitekey":this.props.sitekey,"data-theme":this.props.theme,"data-type":this.props.type,"data-size":this.props.size,"data-badge":this.props.badge,"data-tabindex":this.props.tabindex})}}]),t}(s.Component);t.default=b,b.propTypes=d,b.defaultProps=f,e.exports=t.default},function(e,t){"use strict";function a(e){return function(){return e}}var r=function(){};r.thatReturns=a,r.thatReturnsFalse=a(!1),r.thatReturnsTrue=a(!0),r.thatReturnsNull=a(null),r.thatReturnsThis=function(){return this},r.thatReturnsArgument=function(e){return e},e.exports=r},function(e,t,a){"use strict";function r(e,t,a,r,o,i,l,s){if(n(t),!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var p=[a,r,o,i,l,s],u=0;c=new Error(t.replace(/%s/g,function(){return p[u++]})),c.name="Invariant Violation"}throw c.framesToPop=1,c}}var n=function(e){};e.exports=r},function(e,t,a){"use strict";var r=a(1),n=a(2),o=a(5);e.exports=function(){function e(e,t,a,r,i,l){l!==o&&n(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var a={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t};return a.checkPropTypes=r,a.PropTypes=a,a}},function(e,t,a){e.exports=a(3)()},function(e,t){"use strict";var a="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";e.exports=a},function(t,a){t.exports=e}])});

/***/ }),

/***/ 995:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(996);


/***/ }),

/***/ 996:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(86);

var ReactBaseClasses = __webpack_require__(973);
var ReactChildren = __webpack_require__(998);
var ReactDOMFactories = __webpack_require__(1002);
var ReactElement = __webpack_require__(900);
var ReactPropTypes = __webpack_require__(1006);
var ReactVersion = __webpack_require__(1008);

var createReactClass = __webpack_require__(1009);
var onlyChild = __webpack_require__(1010);

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (true) {
  var lowPriorityWarning = __webpack_require__(947);
  var canDefineProperty = __webpack_require__(934);
  var ReactElementValidator = __webpack_require__(977);
  var didWarnPropTypesDeprecated = false;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;
var createMixin = function (mixin) {
  return mixin;
};

if (true) {
  var warnedForSpread = false;
  var warnedForCreateMixin = false;
  __spread = function () {
    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
    warnedForSpread = true;
    return _assign.apply(null, arguments);
  };

  createMixin = function (mixin) {
    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
    warnedForCreateMixin = true;
    return mixin;
  };
}

var React = {
  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactBaseClasses.Component,
  PureComponent: ReactBaseClasses.PureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: createReactClass,
  createFactory: createFactory,
  createMixin: createMixin,

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

if (true) {
  var warnedForCreateClass = false;
  if (canDefineProperty) {
    Object.defineProperty(React, 'PropTypes', {
      get: function () {
        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
        didWarnPropTypesDeprecated = true;
        return ReactPropTypes;
      }
    });

    Object.defineProperty(React, 'createClass', {
      get: function () {
        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
        warnedForCreateClass = true;
        return createReactClass;
      }
    });
  }

  // React.DOM factories are deprecated. Wrap these methods so that
  // invocations of the React.DOM namespace and alert users to switch
  // to the `react-dom-factories` package.
  React.DOM = {};
  var warnedForFactories = false;
  Object.keys(ReactDOMFactories).forEach(function (factory) {
    React.DOM[factory] = function () {
      if (!warnedForFactories) {
        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
        warnedForFactories = true;
      }
      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
    };
  });
}

module.exports = React;

/***/ }),

/***/ 997:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyObject = {};

if (true) {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

/***/ }),

/***/ 998:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var PooledClass = __webpack_require__(999);
var ReactElement = __webpack_require__(900);

var emptyFunction = __webpack_require__(959);
var traverseAllChildren = __webpack_require__(1000);

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;

/***/ }),

/***/ 999:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(906);

var invariant = __webpack_require__(905);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ?  true ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;

/***/ })

});